;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22-Nov-15 04:38:31 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xC032    	RJMP       51
0x0002	0x0000    	NOP
0x0004	0xCFFD    	RJMP       0
0x0006	0x0000    	NOP
0x0008	0xCFFB    	RJMP       0
0x000A	0x0000    	NOP
0x000C	0xCFF9    	RJMP       0
0x000E	0x0000    	NOP
0x0010	0xCFF7    	RJMP       0
0x0012	0x0000    	NOP
0x0014	0xCFF5    	RJMP       0
0x0016	0x0000    	NOP
0x0018	0xCFF3    	RJMP       0
0x001A	0x0000    	NOP
0x001C	0xCFF1    	RJMP       0
0x001E	0x0000    	NOP
0x0020	0xCFEF    	RJMP       0
0x0022	0x0000    	NOP
0x0024	0xCFED    	RJMP       0
0x0026	0x0000    	NOP
0x0028	0xCFEB    	RJMP       0
0x002A	0x0000    	NOP
0x002C	0xCFE9    	RJMP       0
0x002E	0x0000    	NOP
0x0030	0xCFE7    	RJMP       0
0x0032	0x0000    	NOP
0x0034	0xCFE5    	RJMP       0
0x0036	0x0000    	NOP
0x0038	0xCFE3    	RJMP       0
0x003A	0x0000    	NOP
0x003C	0xCFE1    	RJMP       0
0x003E	0x0000    	NOP
0x0040	0xCFDF    	RJMP       0
0x0042	0x0000    	NOP
0x0044	0xCFDD    	RJMP       0
0x0046	0x0000    	NOP
0x0048	0xCFDB    	RJMP       0
0x004A	0x0000    	NOP
0x004C	0xCFD9    	RJMP       0
0x004E	0x0000    	NOP
0x0050	0xCFD7    	RJMP       0
0x0052	0x0000    	NOP
0x0054	0xCFD5    	RJMP       0
0x0056	0x0000    	NOP
0x0058	0xCFD3    	RJMP       0
0x005A	0x0000    	NOP
0x005C	0xCFD1    	RJMP       0
0x005E	0x0000    	NOP
0x0060	0xCFCF    	RJMP       0
0x0062	0x0000    	NOP
0x0064	0xCFCD    	RJMP       0
0x0066	0xE0E4    	LDI        R30, 4
0x0068	0xE0FF    	LDI        R31, 15
0x006A	0x9409    	IJMP
_main:
0x1E08	0xEFBF    	LDI        R27, 255
0x1E0A	0xBFBD    	OUT        SPL+0, R27
0x1E0C	0xE0B8    	LDI        R27, 8
0x1E0E	0xBFBE    	OUT        SPL+1, R27
0x1E10	0xD334    	RCALL      4669
0x1E12	0xB7CD    	IN         R28, SPL+0
0x1E14	0xB7DE    	IN         R29, SPL+1
0x1E16	0x97A8    	SBIW       R28, 40
0x1E18	0xBFCD    	OUT        SPL+0, R28
0x1E1A	0xBFDE    	OUT        SPL+1, R29
0x1E1C	0x9621    	ADIW       R28, 1
;TFT_display_demo.c,7 :: 		void main()
;TFT_display_demo.c,9 :: 		float f = -0.09;
0x1E1E	0x922F    	PUSH       R2
0x1E20	0x923F    	PUSH       R3
0x1E22	0x924F    	PUSH       R4
0x1E24	0x925F    	PUSH       R5
0x1E26	0x926F    	PUSH       R6
0x1E28	0x927F    	PUSH       R7
0x1E2A	0x928F    	PUSH       R8
0x1E2C	0x929F    	PUSH       R9
0x1E2E	0xEEBC    	LDI        R27, 236
0x1E30	0xA3B9    	STD        Y+33, R27
0x1E32	0xE5B1    	LDI        R27, 81
0x1E34	0xA3BA    	STD        Y+34, R27
0x1E36	0xEBB8    	LDI        R27, 184
0x1E38	0xA3BB    	STD        Y+35, R27
0x1E3A	0xEBBD    	LDI        R27, 189
0x1E3C	0xA3BC    	STD        Y+36, R27
0x1E3E	0xEFB7    	LDI        R27, 247
0x1E40	0xA3BD    	STD        Y+37, R27
0x1E42	0xEFBF    	LDI        R27, 255
0x1E44	0xA3BE    	STD        Y+38, R27
0x1E46	0xE7BF    	LDI        R27, 127
0x1E48	0xA3BF    	STD        Y+39, R27
;TFT_display_demo.c,10 :: 		signed int i = -9;
;TFT_display_demo.c,11 :: 		signed char c = 127;
;TFT_display_demo.c,13 :: 		setup();
0x1E4A	0xD92B    	RCALL      _setup+0
;TFT_display_demo.c,15 :: 		Set_Rotation(0x01);
0x1E4C	0xE0B1    	LDI        R27, 1
0x1E4E	0x2E2B    	MOV        R2, R27
0x1E50	0xD8E2    	RCALL      _Set_Rotation+0
;TFT_display_demo.c,17 :: 		TFT_fill(Swap_Colour(GREEN));
0x1E52	0xEEB0    	LDI        R27, 224
0x1E54	0x2E2B    	MOV        R2, R27
0x1E56	0xE0B7    	LDI        R27, 7
0x1E58	0x2E3B    	MOV        R3, R27
0x1E5A	0xDE0C    	RCALL      _Swap_Colour+0
0x1E5C	0x0118    	MOVW       R2, R16
0x1E5E	0xDDD8    	RCALL      _TFT_fill+0
;TFT_display_demo.c,18 :: 		Draw_Circle(79, 63, 20, YES, Swap_Colour(RED));
0x1E60	0xE0B0    	LDI        R27, 0
0x1E62	0x2E2B    	MOV        R2, R27
0x1E64	0xEFB8    	LDI        R27, 248
0x1E66	0x2E3B    	MOV        R3, R27
0x1E68	0xDE05    	RCALL      _Swap_Colour+0
0x1E6A	0xE0B1    	LDI        R27, 1
0x1E6C	0x2E8B    	MOV        R8, R27
0x1E6E	0xE1B4    	LDI        R27, 20
0x1E70	0x2E6B    	MOV        R6, R27
0x1E72	0xE0B0    	LDI        R27, 0
0x1E74	0x2E7B    	MOV        R7, R27
0x1E76	0xE3BF    	LDI        R27, 63
0x1E78	0x2E4B    	MOV        R4, R27
0x1E7A	0xE0B0    	LDI        R27, 0
0x1E7C	0x2E5B    	MOV        R5, R27
0x1E7E	0xE4BF    	LDI        R27, 79
0x1E80	0x2E2B    	MOV        R2, R27
0x1E82	0xE0B0    	LDI        R27, 0
0x1E84	0x2E3B    	MOV        R3, R27
0x1E86	0x931F    	PUSH       R17
0x1E88	0x930F    	PUSH       R16
0x1E8A	0xDE08    	RCALL      _Draw_Circle+0
0x1E8C	0xB7AD    	IN         R26, SPL+0
0x1E8E	0xB7BE    	IN         R27, SPL+1
0x1E90	0x9612    	ADIW       R26, 2
0x1E92	0xBFAD    	OUT        SPL+0, R26
0x1E94	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,19 :: 		delay_ms(4000);
0x1E96	0xE032    	LDI        R19, 2
0x1E98	0xE425    	LDI        R18, 69
0x1E9A	0xEA1D    	LDI        R17, 173
0x1E9C	0xE007    	LDI        R16, 7
L_main137:
0x1E9E	0x950A    	DEC        R16
0x1EA0	0xF7F1    	BRNE       L_main137
0x1EA2	0x951A    	DEC        R17
0x1EA4	0xF7E1    	BRNE       L_main137
0x1EA6	0x952A    	DEC        R18
0x1EA8	0xF7D1    	BRNE       L_main137
0x1EAA	0x953A    	DEC        R19
0x1EAC	0xF7C1    	BRNE       L_main137
;TFT_display_demo.c,21 :: 		TFT_fill(Swap_Colour(WHITE));
0x1EAE	0xEFBF    	LDI        R27, 255
0x1EB0	0x2E2B    	MOV        R2, R27
0x1EB2	0x2E3B    	MOV        R3, R27
0x1EB4	0xDDDF    	RCALL      _Swap_Colour+0
0x1EB6	0x0118    	MOVW       R2, R16
0x1EB8	0xDDAB    	RCALL      _TFT_fill+0
;TFT_display_demo.c,23 :: 		Draw_Circle(6, 6, 4, YES, RED);
0x1EBA	0xE0B1    	LDI        R27, 1
0x1EBC	0x2E8B    	MOV        R8, R27
0x1EBE	0xE0B4    	LDI        R27, 4
0x1EC0	0x2E6B    	MOV        R6, R27
0x1EC2	0xE0B0    	LDI        R27, 0
0x1EC4	0x2E7B    	MOV        R7, R27
0x1EC6	0xE0B6    	LDI        R27, 6
0x1EC8	0x2E4B    	MOV        R4, R27
0x1ECA	0xE0B0    	LDI        R27, 0
0x1ECC	0x2E5B    	MOV        R5, R27
0x1ECE	0xE0B6    	LDI        R27, 6
0x1ED0	0x2E2B    	MOV        R2, R27
0x1ED2	0xE0B0    	LDI        R27, 0
0x1ED4	0x2E3B    	MOV        R3, R27
0x1ED6	0xEFB8    	LDI        R27, 248
0x1ED8	0x93BF    	PUSH       R27
0x1EDA	0xE0B0    	LDI        R27, 0
0x1EDC	0x93BF    	PUSH       R27
0x1EDE	0xDDDE    	RCALL      _Draw_Circle+0
0x1EE0	0xB7AD    	IN         R26, SPL+0
0x1EE2	0xB7BE    	IN         R27, SPL+1
0x1EE4	0x9612    	ADIW       R26, 2
0x1EE6	0xBFAD    	OUT        SPL+0, R26
0x1EE8	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,24 :: 		Draw_Circle(153, 6, 4, YES, RED);
0x1EEA	0xE0B1    	LDI        R27, 1
0x1EEC	0x2E8B    	MOV        R8, R27
0x1EEE	0xE0B4    	LDI        R27, 4
0x1EF0	0x2E6B    	MOV        R6, R27
0x1EF2	0xE0B0    	LDI        R27, 0
0x1EF4	0x2E7B    	MOV        R7, R27
0x1EF6	0xE0B6    	LDI        R27, 6
0x1EF8	0x2E4B    	MOV        R4, R27
0x1EFA	0xE0B0    	LDI        R27, 0
0x1EFC	0x2E5B    	MOV        R5, R27
0x1EFE	0xE9B9    	LDI        R27, 153
0x1F00	0x2E2B    	MOV        R2, R27
0x1F02	0xE0B0    	LDI        R27, 0
0x1F04	0x2E3B    	MOV        R3, R27
0x1F06	0xEFB8    	LDI        R27, 248
0x1F08	0x93BF    	PUSH       R27
0x1F0A	0xE0B0    	LDI        R27, 0
0x1F0C	0x93BF    	PUSH       R27
0x1F0E	0xDDC6    	RCALL      _Draw_Circle+0
0x1F10	0xB7AD    	IN         R26, SPL+0
0x1F12	0xB7BE    	IN         R27, SPL+1
0x1F14	0x9612    	ADIW       R26, 2
0x1F16	0xBFAD    	OUT        SPL+0, R26
0x1F18	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,25 :: 		Draw_Circle(6, 121, 4, YES, RED);
0x1F1A	0xE0B1    	LDI        R27, 1
0x1F1C	0x2E8B    	MOV        R8, R27
0x1F1E	0xE0B4    	LDI        R27, 4
0x1F20	0x2E6B    	MOV        R6, R27
0x1F22	0xE0B0    	LDI        R27, 0
0x1F24	0x2E7B    	MOV        R7, R27
0x1F26	0xE7B9    	LDI        R27, 121
0x1F28	0x2E4B    	MOV        R4, R27
0x1F2A	0xE0B0    	LDI        R27, 0
0x1F2C	0x2E5B    	MOV        R5, R27
0x1F2E	0xE0B6    	LDI        R27, 6
0x1F30	0x2E2B    	MOV        R2, R27
0x1F32	0xE0B0    	LDI        R27, 0
0x1F34	0x2E3B    	MOV        R3, R27
0x1F36	0xEFB8    	LDI        R27, 248
0x1F38	0x93BF    	PUSH       R27
0x1F3A	0xE0B0    	LDI        R27, 0
0x1F3C	0x93BF    	PUSH       R27
0x1F3E	0xDDAE    	RCALL      _Draw_Circle+0
0x1F40	0xB7AD    	IN         R26, SPL+0
0x1F42	0xB7BE    	IN         R27, SPL+1
0x1F44	0x9612    	ADIW       R26, 2
0x1F46	0xBFAD    	OUT        SPL+0, R26
0x1F48	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,26 :: 		Draw_Circle(153, 121, 4, YES, RED);
0x1F4A	0xE0B1    	LDI        R27, 1
0x1F4C	0x2E8B    	MOV        R8, R27
0x1F4E	0xE0B4    	LDI        R27, 4
0x1F50	0x2E6B    	MOV        R6, R27
0x1F52	0xE0B0    	LDI        R27, 0
0x1F54	0x2E7B    	MOV        R7, R27
0x1F56	0xE7B9    	LDI        R27, 121
0x1F58	0x2E4B    	MOV        R4, R27
0x1F5A	0xE0B0    	LDI        R27, 0
0x1F5C	0x2E5B    	MOV        R5, R27
0x1F5E	0xE9B9    	LDI        R27, 153
0x1F60	0x2E2B    	MOV        R2, R27
0x1F62	0xE0B0    	LDI        R27, 0
0x1F64	0x2E3B    	MOV        R3, R27
0x1F66	0xEFB8    	LDI        R27, 248
0x1F68	0x93BF    	PUSH       R27
0x1F6A	0xE0B0    	LDI        R27, 0
0x1F6C	0x93BF    	PUSH       R27
0x1F6E	0xDD96    	RCALL      _Draw_Circle+0
0x1F70	0xB7AD    	IN         R26, SPL+0
0x1F72	0xB7BE    	IN         R27, SPL+1
0x1F74	0x9612    	ADIW       R26, 2
0x1F76	0xBFAD    	OUT        SPL+0, R26
0x1F78	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,28 :: 		delay_ms(1000);
0x1F7A	0xE522    	LDI        R18, 82
0x1F7C	0xE21B    	LDI        R17, 43
0x1F7E	0xE000    	LDI        R16, 0
L_main139:
0x1F80	0x950A    	DEC        R16
0x1F82	0xF7F1    	BRNE       L_main139
0x1F84	0x951A    	DEC        R17
0x1F86	0xF7E1    	BRNE       L_main139
0x1F88	0x952A    	DEC        R18
0x1F8A	0xF7D1    	BRNE       L_main139
0x1F8C	0x0000    	NOP
0x1F8E	0x0000    	NOP
0x1F90	0x0000    	NOP
0x1F92	0x0000    	NOP
;TFT_display_demo.c,30 :: 		Draw_Line(14, 0, 14, 127, CYAN);
0x1F94	0xE7BF    	LDI        R27, 127
0x1F96	0x2E8B    	MOV        R8, R27
0x1F98	0xE0B0    	LDI        R27, 0
0x1F9A	0x2E9B    	MOV        R9, R27
0x1F9C	0xE0BE    	LDI        R27, 14
0x1F9E	0x2E6B    	MOV        R6, R27
0x1FA0	0xE0B0    	LDI        R27, 0
0x1FA2	0x2E7B    	MOV        R7, R27
0x1FA4	0x2444    	CLR        R4
0x1FA6	0x2455    	CLR        R5
0x1FA8	0xE0BE    	LDI        R27, 14
0x1FAA	0x2E2B    	MOV        R2, R27
0x1FAC	0xE0B0    	LDI        R27, 0
0x1FAE	0x2E3B    	MOV        R3, R27
0x1FB0	0xE0B7    	LDI        R27, 7
0x1FB2	0x93BF    	PUSH       R27
0x1FB4	0xEFBF    	LDI        R27, 255
0x1FB6	0x93BF    	PUSH       R27
0x1FB8	0xEAE1    	LDI        R30, lo_addr(_Draw_Line)
0x1FBA	0xE0F4    	LDI        R31, hi_addr(_Draw_Line+0)
0x1FBC	0x9509    	ICALL
0x1FBE	0xB7AD    	IN         R26, SPL+0
0x1FC0	0xB7BE    	IN         R27, SPL+1
0x1FC2	0x9612    	ADIW       R26, 2
0x1FC4	0xBFAD    	OUT        SPL+0, R26
0x1FC6	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,31 :: 		Draw_Line(145, 0, 145, 127, CYAN);
0x1FC8	0xE7BF    	LDI        R27, 127
0x1FCA	0x2E8B    	MOV        R8, R27
0x1FCC	0xE0B0    	LDI        R27, 0
0x1FCE	0x2E9B    	MOV        R9, R27
0x1FD0	0xE9B1    	LDI        R27, 145
0x1FD2	0x2E6B    	MOV        R6, R27
0x1FD4	0xE0B0    	LDI        R27, 0
0x1FD6	0x2E7B    	MOV        R7, R27
0x1FD8	0x2444    	CLR        R4
0x1FDA	0x2455    	CLR        R5
0x1FDC	0xE9B1    	LDI        R27, 145
0x1FDE	0x2E2B    	MOV        R2, R27
0x1FE0	0xE0B0    	LDI        R27, 0
0x1FE2	0x2E3B    	MOV        R3, R27
0x1FE4	0xE0B7    	LDI        R27, 7
0x1FE6	0x93BF    	PUSH       R27
0x1FE8	0xEFBF    	LDI        R27, 255
0x1FEA	0x93BF    	PUSH       R27
0x1FEC	0xEAE1    	LDI        R30, lo_addr(_Draw_Line)
0x1FEE	0xE0F4    	LDI        R31, hi_addr(_Draw_Line+0)
0x1FF0	0x9509    	ICALL
0x1FF2	0xB7AD    	IN         R26, SPL+0
0x1FF4	0xB7BE    	IN         R27, SPL+1
0x1FF6	0x9612    	ADIW       R26, 2
0x1FF8	0xBFAD    	OUT        SPL+0, R26
0x1FFA	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,32 :: 		Draw_Line(0, 14, 159, 14, CYAN);
0x1FFC	0xE0BE    	LDI        R27, 14
0x1FFE	0x2E8B    	MOV        R8, R27
0x2000	0xE0B0    	LDI        R27, 0
0x2002	0x2E9B    	MOV        R9, R27
0x2004	0xE9BF    	LDI        R27, 159
0x2006	0x2E6B    	MOV        R6, R27
0x2008	0xE0B0    	LDI        R27, 0
0x200A	0x2E7B    	MOV        R7, R27
0x200C	0xE0BE    	LDI        R27, 14
0x200E	0x2E4B    	MOV        R4, R27
0x2010	0xE0B0    	LDI        R27, 0
0x2012	0x2E5B    	MOV        R5, R27
0x2014	0x2422    	CLR        R2
0x2016	0x2433    	CLR        R3
0x2018	0xE0B7    	LDI        R27, 7
0x201A	0x93BF    	PUSH       R27
0x201C	0xEFBF    	LDI        R27, 255
0x201E	0x93BF    	PUSH       R27
0x2020	0xEAE1    	LDI        R30, lo_addr(_Draw_Line)
0x2022	0xE0F4    	LDI        R31, hi_addr(_Draw_Line+0)
0x2024	0x9509    	ICALL
0x2026	0xB7AD    	IN         R26, SPL+0
0x2028	0xB7BE    	IN         R27, SPL+1
0x202A	0x9612    	ADIW       R26, 2
0x202C	0xBFAD    	OUT        SPL+0, R26
0x202E	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,33 :: 		Draw_Line(0, 113, 159, 113, CYAN);
0x2030	0xE7B1    	LDI        R27, 113
0x2032	0x2E8B    	MOV        R8, R27
0x2034	0xE0B0    	LDI        R27, 0
0x2036	0x2E9B    	MOV        R9, R27
0x2038	0xE9BF    	LDI        R27, 159
0x203A	0x2E6B    	MOV        R6, R27
0x203C	0xE0B0    	LDI        R27, 0
0x203E	0x2E7B    	MOV        R7, R27
0x2040	0xE7B1    	LDI        R27, 113
0x2042	0x2E4B    	MOV        R4, R27
0x2044	0xE0B0    	LDI        R27, 0
0x2046	0x2E5B    	MOV        R5, R27
0x2048	0x2422    	CLR        R2
0x204A	0x2433    	CLR        R3
0x204C	0xE0B7    	LDI        R27, 7
0x204E	0x93BF    	PUSH       R27
0x2050	0xEFBF    	LDI        R27, 255
0x2052	0x93BF    	PUSH       R27
0x2054	0xEAE1    	LDI        R30, lo_addr(_Draw_Line)
0x2056	0xE0F4    	LDI        R31, hi_addr(_Draw_Line+0)
0x2058	0x9509    	ICALL
0x205A	0xB7AD    	IN         R26, SPL+0
0x205C	0xB7BE    	IN         R27, SPL+1
0x205E	0x9612    	ADIW       R26, 2
0x2060	0xBFAD    	OUT        SPL+0, R26
0x2062	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,35 :: 		delay_ms(1000);
0x2064	0xE522    	LDI        R18, 82
0x2066	0xE21B    	LDI        R17, 43
0x2068	0xE000    	LDI        R16, 0
L_main141:
0x206A	0x950A    	DEC        R16
0x206C	0xF7F1    	BRNE       L_main141
0x206E	0x951A    	DEC        R17
0x2070	0xF7E1    	BRNE       L_main141
0x2072	0x952A    	DEC        R18
0x2074	0xF7D1    	BRNE       L_main141
0x2076	0x0000    	NOP
0x2078	0x0000    	NOP
0x207A	0x0000    	NOP
0x207C	0x0000    	NOP
;TFT_display_demo.c,37 :: 		Draw_Rectangle(17, 17, 142, 110, YES, ROUND, BLUE, WHITE);
0x207E	0xE6BE    	LDI        R27, 110
0x2080	0x2E8B    	MOV        R8, R27
0x2082	0xE0B0    	LDI        R27, 0
0x2084	0x2E9B    	MOV        R9, R27
0x2086	0xE8BE    	LDI        R27, 142
0x2088	0x2E6B    	MOV        R6, R27
0x208A	0xE0B0    	LDI        R27, 0
0x208C	0x2E7B    	MOV        R7, R27
0x208E	0xE1B1    	LDI        R27, 17
0x2090	0x2E4B    	MOV        R4, R27
0x2092	0xE0B0    	LDI        R27, 0
0x2094	0x2E5B    	MOV        R5, R27
0x2096	0xE1B1    	LDI        R27, 17
0x2098	0x2E2B    	MOV        R2, R27
0x209A	0xE0B0    	LDI        R27, 0
0x209C	0x2E3B    	MOV        R3, R27
0x209E	0xEFBF    	LDI        R27, 255
0x20A0	0x93BF    	PUSH       R27
0x20A2	0x93BF    	PUSH       R27
0x20A4	0xE0B0    	LDI        R27, 0
0x20A6	0x93BF    	PUSH       R27
0x20A8	0xE1BF    	LDI        R27, 31
0x20AA	0x93BF    	PUSH       R27
0x20AC	0xE0B1    	LDI        R27, 1
0x20AE	0x93BF    	PUSH       R27
0x20B0	0xE0B1    	LDI        R27, 1
0x20B2	0x93BF    	PUSH       R27
0x20B4	0xD9B7    	RCALL      _Draw_Rectangle+0
0x20B6	0xB7AD    	IN         R26, SPL+0
0x20B8	0xB7BE    	IN         R27, SPL+1
0x20BA	0x9616    	ADIW       R26, 6
0x20BC	0xBFAD    	OUT        SPL+0, R26
0x20BE	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,38 :: 		delay_ms(1000);
0x20C0	0xE522    	LDI        R18, 82
0x20C2	0xE21B    	LDI        R17, 43
0x20C4	0xE000    	LDI        R16, 0
L_main143:
0x20C6	0x950A    	DEC        R16
0x20C8	0xF7F1    	BRNE       L_main143
0x20CA	0x951A    	DEC        R17
0x20CC	0xF7E1    	BRNE       L_main143
0x20CE	0x952A    	DEC        R18
0x20D0	0xF7D1    	BRNE       L_main143
0x20D2	0x0000    	NOP
0x20D4	0x0000    	NOP
0x20D6	0x0000    	NOP
0x20D8	0x0000    	NOP
;TFT_display_demo.c,40 :: 		print_str(22, 58, 2, YELLOW, BLUE, "MicroArena");
0x20DA	0xE5E0    	LDI        R30, lo_addr(?ICS?lstr1_TFT_display_demo+0)
0x20DC	0xE2F4    	LDI        R31, hi_addr(?ICS?lstr1_TFT_display_demo+0)
0x20DE	0x01DE    	MOVW       R26, R28
0x20E0	0xE08B    	LDI        R24, 11
0x20E2	0xE090    	LDI        R25, 0
0x20E4	0xD85A    	RCALL      ___CC2DW+0
0x20E6	0x018E    	MOVW       R16, R28
0x20E8	0xE1BF    	LDI        R27, 31
0x20EA	0x2E7B    	MOV        R7, R27
0x20EC	0xE0B0    	LDI        R27, 0
0x20EE	0x2E8B    	MOV        R8, R27
0x20F0	0xEEB0    	LDI        R27, 224
0x20F2	0x2E5B    	MOV        R5, R27
0x20F4	0xEFBF    	LDI        R27, 255
0x20F6	0x2E6B    	MOV        R6, R27
0x20F8	0xE0B2    	LDI        R27, 2
0x20FA	0x2E4B    	MOV        R4, R27
0x20FC	0xE3BA    	LDI        R27, 58
0x20FE	0x2E3B    	MOV        R3, R27
0x2100	0xE1B6    	LDI        R27, 22
0x2102	0x2E2B    	MOV        R2, R27
0x2104	0x931F    	PUSH       R17
0x2106	0x930F    	PUSH       R16
0x2108	0xDA68    	RCALL      _print_str+0
0x210A	0xB7AD    	IN         R26, SPL+0
0x210C	0xB7BE    	IN         R27, SPL+1
0x210E	0x9612    	ADIW       R26, 2
0x2110	0xBFAD    	OUT        SPL+0, R26
0x2112	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,41 :: 		delay_ms(4000);
0x2114	0xE032    	LDI        R19, 2
0x2116	0xE425    	LDI        R18, 69
0x2118	0xEA1D    	LDI        R17, 173
0x211A	0xE007    	LDI        R16, 7
L_main145:
0x211C	0x950A    	DEC        R16
0x211E	0xF7F1    	BRNE       L_main145
0x2120	0x951A    	DEC        R17
0x2122	0xF7E1    	BRNE       L_main145
0x2124	0x952A    	DEC        R18
0x2126	0xF7D1    	BRNE       L_main145
0x2128	0x953A    	DEC        R19
0x212A	0xF7C1    	BRNE       L_main145
;TFT_display_demo.c,43 :: 		TFT_fill(BLACK);
0x212C	0x2422    	CLR        R2
0x212E	0x2433    	CLR        R3
0x2130	0xDC6F    	RCALL      _TFT_fill+0
;TFT_display_demo.c,44 :: 		print_str(20, 90, 1, YELLOW, BLACK, "www.fb.com/MicroArena");
0x2132	0xE5EB    	LDI        R30, lo_addr(?ICS?lstr2_TFT_display_demo+0)
0x2134	0xE2F4    	LDI        R31, hi_addr(?ICS?lstr2_TFT_display_demo+0)
0x2136	0x01DE    	MOVW       R26, R28
0x2138	0x961B    	ADIW       R26, 11
0x213A	0xE186    	LDI        R24, 22
0x213C	0xE090    	LDI        R25, 0
0x213E	0xD82D    	RCALL      ___CC2DW+0
0x2140	0x018E    	MOVW       R16, R28
0x2142	0x5F05    	SUBI       R16, 245
0x2144	0x4F1F    	SBCI       R17, 255
0x2146	0x2477    	CLR        R7
0x2148	0x2488    	CLR        R8
0x214A	0xEEB0    	LDI        R27, 224
0x214C	0x2E5B    	MOV        R5, R27
0x214E	0xEFBF    	LDI        R27, 255
0x2150	0x2E6B    	MOV        R6, R27
0x2152	0xE0B1    	LDI        R27, 1
0x2154	0x2E4B    	MOV        R4, R27
0x2156	0xE5BA    	LDI        R27, 90
0x2158	0x2E3B    	MOV        R3, R27
0x215A	0xE1B4    	LDI        R27, 20
0x215C	0x2E2B    	MOV        R2, R27
0x215E	0x931F    	PUSH       R17
0x2160	0x930F    	PUSH       R16
0x2162	0xDA3B    	RCALL      _print_str+0
0x2164	0xB7AD    	IN         R26, SPL+0
0x2166	0xB7BE    	IN         R27, SPL+1
0x2168	0x9612    	ADIW       R26, 2
0x216A	0xBFAD    	OUT        SPL+0, R26
0x216C	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,46 :: 		while(1)
L_main147:
;TFT_display_demo.c,48 :: 		print_F(60, 20, 1, BLUE, BLACK, f, 2);
0x216E	0xE0B2    	LDI        R27, 2
0x2170	0x2E9B    	MOV        R9, R27
0x2172	0x2477    	CLR        R7
0x2174	0x2488    	CLR        R8
0x2176	0xE1BF    	LDI        R27, 31
0x2178	0x2E5B    	MOV        R5, R27
0x217A	0xE0B0    	LDI        R27, 0
0x217C	0x2E6B    	MOV        R6, R27
0x217E	0xE0B1    	LDI        R27, 1
0x2180	0x2E4B    	MOV        R4, R27
0x2182	0xE1B4    	LDI        R27, 20
0x2184	0x2E3B    	MOV        R3, R27
0x2186	0xE3BC    	LDI        R27, 60
0x2188	0x2E2B    	MOV        R2, R27
0x218A	0xA109    	LDD        R16, Y+33
0x218C	0xA11A    	LDD        R17, Y+34
0x218E	0xA12B    	LDD        R18, Y+35
0x2190	0xA13C    	LDD        R19, Y+36
0x2192	0x933F    	PUSH       R19
0x2194	0x932F    	PUSH       R18
0x2196	0x931F    	PUSH       R17
0x2198	0x930F    	PUSH       R16
0x219A	0xDA53    	RCALL      _print_F+0
0x219C	0xB7AD    	IN         R26, SPL+0
0x219E	0xB7BE    	IN         R27, SPL+1
0x21A0	0x9614    	ADIW       R26, 4
0x21A2	0xBFAD    	OUT        SPL+0, R26
0x21A4	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,49 :: 		print_C(60, 40, 1, RED, BLACK, c);
0x21A6	0x2477    	CLR        R7
0x21A8	0x2488    	CLR        R8
0x21AA	0xE0B0    	LDI        R27, 0
0x21AC	0x2E5B    	MOV        R5, R27
0x21AE	0xEFB8    	LDI        R27, 248
0x21B0	0x2E6B    	MOV        R6, R27
0x21B2	0xE0B1    	LDI        R27, 1
0x21B4	0x2E4B    	MOV        R4, R27
0x21B6	0xE2B8    	LDI        R27, 40
0x21B8	0x2E3B    	MOV        R3, R27
0x21BA	0xE3BC    	LDI        R27, 60
0x21BC	0x2E2B    	MOV        R2, R27
0x21BE	0xA10F    	LDD        R16, Y+39
0x21C0	0xE0B0    	LDI        R27, 0
0x21C2	0xFD07    	SBRC       R16, 7
0x21C4	0xEFBF    	LDI        R27, 255
0x21C6	0x93BF    	PUSH       R27
0x21C8	0x930F    	PUSH       R16
0x21CA	0xEDE2    	LDI        R30, lo_addr(_print_C)
0x21CC	0xE0F8    	LDI        R31, hi_addr(_print_C+0)
0x21CE	0x9509    	ICALL
0x21D0	0xB7AD    	IN         R26, SPL+0
0x21D2	0xB7BE    	IN         R27, SPL+1
0x21D4	0x9612    	ADIW       R26, 2
0x21D6	0xBFAD    	OUT        SPL+0, R26
0x21D8	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,50 :: 		print_I(60, 60, 1, GREEN, BLACK, i);
0x21DA	0x2477    	CLR        R7
0x21DC	0x2488    	CLR        R8
0x21DE	0xEEB0    	LDI        R27, 224
0x21E0	0x2E5B    	MOV        R5, R27
0x21E2	0xE0B7    	LDI        R27, 7
0x21E4	0x2E6B    	MOV        R6, R27
0x21E6	0xE0B1    	LDI        R27, 1
0x21E8	0x2E4B    	MOV        R4, R27
0x21EA	0xE3BC    	LDI        R27, 60
0x21EC	0x2E3B    	MOV        R3, R27
0x21EE	0xE3BC    	LDI        R27, 60
0x21F0	0x2E2B    	MOV        R2, R27
0x21F2	0xA10D    	LDD        R16, Y+37
0x21F4	0xA11E    	LDD        R17, Y+38
0x21F6	0x931F    	PUSH       R17
0x21F8	0x930F    	PUSH       R16
0x21FA	0xEFE7    	LDI        R30, lo_addr(_print_I)
0x21FC	0xE0F5    	LDI        R31, hi_addr(_print_I+0)
0x21FE	0x9509    	ICALL
0x2200	0xB7AD    	IN         R26, SPL+0
0x2202	0xB7BE    	IN         R27, SPL+1
0x2204	0x9612    	ADIW       R26, 2
0x2206	0xBFAD    	OUT        SPL+0, R26
0x2208	0xBFBE    	OUT        SPL+1, R27
;TFT_display_demo.c,51 :: 		f += 0.01;
0x220A	0xA109    	LDD        R16, Y+33
0x220C	0xA11A    	LDD        R17, Y+34
0x220E	0xA12B    	LDD        R18, Y+35
0x2210	0xA13C    	LDD        R19, Y+36
0x2212	0xE04A    	LDI        R20, 10
0x2214	0xED57    	LDI        R21, 215
0x2216	0xE263    	LDI        R22, 35
0x2218	0xE37C    	LDI        R23, 60
0x221A	0xECE3    	LDI        R30, lo_addr(_float_fpadd1)
0x221C	0xE0F8    	LDI        R31, hi_addr(_float_fpadd1+0)
0x221E	0x9509    	ICALL
0x2220	0xA309    	STD        Y+33, R16
0x2222	0xA31A    	STD        Y+34, R17
0x2224	0xA32B    	STD        Y+35, R18
0x2226	0xA33C    	STD        Y+36, R19
;TFT_display_demo.c,52 :: 		c -= 1;
0x2228	0xA12F    	LDD        R18, Y+39
0x222A	0x5021    	SUBI       R18, 1
0x222C	0xA32F    	STD        Y+39, R18
;TFT_display_demo.c,53 :: 		i += 1;
0x222E	0xA10D    	LDD        R16, Y+37
0x2230	0xA11E    	LDD        R17, Y+38
0x2232	0x5F0F    	SUBI       R16, 255
0x2234	0x4F1F    	SBCI       R17, 255
0x2236	0xA30D    	STD        Y+37, R16
0x2238	0xA31E    	STD        Y+38, R17
;TFT_display_demo.c,54 :: 		if(c < -128)
0x223A	0x3820    	CPI        R18, 128
0x223C	0xF414    	BRGE       L_main149
L__main292:
;TFT_display_demo.c,56 :: 		c = 127;
0x223E	0xE7BF    	LDI        R27, 127
0x2240	0xA3BF    	STD        Y+39, R27
;TFT_display_demo.c,57 :: 		}
L_main149:
;TFT_display_demo.c,58 :: 		delay_ms(60);
0x2242	0xE025    	LDI        R18, 5
0x2244	0xED1F    	LDI        R17, 223
0x2246	0xEB0C    	LDI        R16, 188
L_main150:
0x2248	0x950A    	DEC        R16
0x224A	0xF7F1    	BRNE       L_main150
0x224C	0x951A    	DEC        R17
0x224E	0xF7E1    	BRNE       L_main150
0x2250	0x952A    	DEC        R18
0x2252	0xF7D1    	BRNE       L_main150
0x2254	0x0000    	NOP
0x2256	0x0000    	NOP
;TFT_display_demo.c,59 :: 		};
0x2258	0xCF8A    	RJMP       L_main147
;TFT_display_demo.c,60 :: 		}
L_end_main:
0x225A	0x909F    	POP        R9
0x225C	0x908F    	POP        R8
0x225E	0x907F    	POP        R7
0x2260	0x906F    	POP        R6
0x2262	0x905F    	POP        R5
0x2264	0x904F    	POP        R4
0x2266	0x903F    	POP        R3
0x2268	0x902F    	POP        R2
L__main_end_loop:
0x226A	0xCFFF    	RJMP       L__main_end_loop
; end of _main
_setup:
;TFT_display_demo.c,63 :: 		void setup()
;TFT_display_demo.c,65 :: 		CLKPR = 0x80;
0x10A2	0xE8B0    	LDI        R27, 128
0x10A4	0x006193B0  	STS        CLKPR+0, R27
;TFT_display_demo.c,66 :: 		CLKPR = 0x00;
0x10A8	0xE0B0    	LDI        R27, 0
0x10AA	0x006193B0  	STS        CLKPR+0, R27
;TFT_display_demo.c,67 :: 		PORTB = 0x00;
0x10AE	0xE0B0    	LDI        R27, 0
0x10B0	0xB9B5    	OUT        PORTB+0, R27
;TFT_display_demo.c,68 :: 		DDRB = 0x1F;
0x10B2	0xE1BF    	LDI        R27, 31
0x10B4	0xB9B4    	OUT        DDRB+0, R27
;TFT_display_demo.c,69 :: 		PORTC = 0x00;
0x10B6	0xE0B0    	LDI        R27, 0
0x10B8	0xB9B8    	OUT        PORTC+0, R27
;TFT_display_demo.c,70 :: 		DDRC = 0x00;
0x10BA	0xE0B0    	LDI        R27, 0
0x10BC	0xB9B7    	OUT        DDRC+0, R27
;TFT_display_demo.c,71 :: 		PORTD = 0x00;
0x10BE	0xE0B0    	LDI        R27, 0
0x10C0	0xB9BB    	OUT        PORTD+0, R27
;TFT_display_demo.c,72 :: 		DDRD = 0x00;
0x10C2	0xE0B0    	LDI        R27, 0
0x10C4	0xB9BA    	OUT        DDRD+0, R27
;TFT_display_demo.c,73 :: 		TCCR0A = 0x00;
0x10C6	0xE0B0    	LDI        R27, 0
0x10C8	0xBDB4    	OUT        TCCR0A+0, R27
;TFT_display_demo.c,74 :: 		TCCR0B = 0x00;
0x10CA	0xE0B0    	LDI        R27, 0
0x10CC	0xBDB5    	OUT        TCCR0B+0, R27
;TFT_display_demo.c,75 :: 		TCNT0 = 0x00;
0x10CE	0xE0B0    	LDI        R27, 0
0x10D0	0xBDB6    	OUT        TCNT0+0, R27
;TFT_display_demo.c,76 :: 		OCR0A = 0x00;
0x10D2	0xE0B0    	LDI        R27, 0
0x10D4	0xBDB7    	OUT        OCR0A+0, R27
;TFT_display_demo.c,77 :: 		OCR0B = 0x00;
0x10D6	0xE0B0    	LDI        R27, 0
0x10D8	0xBDB8    	OUT        OCR0B+0, R27
;TFT_display_demo.c,78 :: 		TCCR1A = 0x00;
0x10DA	0xE0B0    	LDI        R27, 0
0x10DC	0x008093B0  	STS        TCCR1A+0, R27
;TFT_display_demo.c,79 :: 		TCCR1B = 0x00;
0x10E0	0xE0B0    	LDI        R27, 0
0x10E2	0x008193B0  	STS        TCCR1B+0, R27
;TFT_display_demo.c,80 :: 		TCNT1H = 0x00;
0x10E6	0xE0B0    	LDI        R27, 0
0x10E8	0x008593B0  	STS        TCNT1H+0, R27
;TFT_display_demo.c,81 :: 		TCNT1L = 0x00;
0x10EC	0xE0B0    	LDI        R27, 0
0x10EE	0x008493B0  	STS        TCNT1L+0, R27
;TFT_display_demo.c,82 :: 		ICR1H = 0x00;
0x10F2	0xE0B0    	LDI        R27, 0
0x10F4	0x008793B0  	STS        ICR1H+0, R27
;TFT_display_demo.c,83 :: 		ICR1L = 0x00;
0x10F8	0xE0B0    	LDI        R27, 0
0x10FA	0x008693B0  	STS        ICR1L+0, R27
;TFT_display_demo.c,84 :: 		OCR1AH = 0x00;
0x10FE	0xE0B0    	LDI        R27, 0
0x1100	0x008993B0  	STS        OCR1AH+0, R27
;TFT_display_demo.c,85 :: 		OCR1AL = 0x00;
0x1104	0xE0B0    	LDI        R27, 0
0x1106	0x008893B0  	STS        OCR1AL+0, R27
;TFT_display_demo.c,86 :: 		OCR1BH = 0x00;
0x110A	0xE0B0    	LDI        R27, 0
0x110C	0x008B93B0  	STS        OCR1BH+0, R27
;TFT_display_demo.c,87 :: 		OCR1BL = 0x00;
0x1110	0xE0B0    	LDI        R27, 0
0x1112	0x008A93B0  	STS        OCR1BL+0, R27
;TFT_display_demo.c,88 :: 		ASSR = 0x00;
0x1116	0xE0B0    	LDI        R27, 0
0x1118	0x00B693B0  	STS        ASSR+0, R27
;TFT_display_demo.c,89 :: 		TCCR2A = 0x00;
0x111C	0xE0B0    	LDI        R27, 0
0x111E	0x00B093B0  	STS        TCCR2A+0, R27
;TFT_display_demo.c,90 :: 		TCCR2B = 0x00;
0x1122	0xE0B0    	LDI        R27, 0
0x1124	0x00B193B0  	STS        TCCR2B+0, R27
;TFT_display_demo.c,91 :: 		TCNT2 = 0x00;
0x1128	0xE0B0    	LDI        R27, 0
0x112A	0x00B293B0  	STS        TCNT2+0, R27
;TFT_display_demo.c,92 :: 		OCR2A = 0x00;
0x112E	0xE0B0    	LDI        R27, 0
0x1130	0x00B393B0  	STS        OCR2A+0, R27
;TFT_display_demo.c,93 :: 		OCR2B = 0x00;
0x1134	0xE0B0    	LDI        R27, 0
0x1136	0x00B493B0  	STS        OCR2B+0, R27
;TFT_display_demo.c,94 :: 		EICRA = 0x00;
0x113A	0xE0B0    	LDI        R27, 0
0x113C	0x006993B0  	STS        EICRA+0, R27
;TFT_display_demo.c,95 :: 		EIMSK = 0x00;
0x1140	0xE0B0    	LDI        R27, 0
0x1142	0xBBBD    	OUT        EIMSK+0, R27
;TFT_display_demo.c,96 :: 		PCICR = 0x00;
0x1144	0xE0B0    	LDI        R27, 0
0x1146	0x006893B0  	STS        PCICR+0, R27
;TFT_display_demo.c,97 :: 		TIMSK0 = 0x00;
0x114A	0xE0B0    	LDI        R27, 0
0x114C	0x006E93B0  	STS        TIMSK0+0, R27
;TFT_display_demo.c,98 :: 		TIMSK1 = 0x00;
0x1150	0xE0B0    	LDI        R27, 0
0x1152	0x006F93B0  	STS        TIMSK1+0, R27
;TFT_display_demo.c,99 :: 		TIMSK2 = 0x00;
0x1156	0xE0B0    	LDI        R27, 0
0x1158	0x007093B0  	STS        TIMSK2+0, R27
;TFT_display_demo.c,100 :: 		UCSR0B = 0x00;
0x115C	0xE0B0    	LDI        R27, 0
0x115E	0x00C193B0  	STS        UCSR0B+0, R27
;TFT_display_demo.c,101 :: 		ACSR = 0x80;
0x1162	0xE8B0    	LDI        R27, 128
0x1164	0xBFB0    	OUT        ACSR+0, R27
;TFT_display_demo.c,102 :: 		ADCSRB = 0x00;
0x1166	0xE0B0    	LDI        R27, 0
0x1168	0x007B93B0  	STS        ADCSRB+0, R27
;TFT_display_demo.c,103 :: 		DIDR1 = 0x00;
0x116C	0xE0B0    	LDI        R27, 0
0x116E	0x007F93B0  	STS        DIDR1+0, R27
;TFT_display_demo.c,104 :: 		ADCSRA = 0x00;
0x1172	0xE0B0    	LDI        R27, 0
0x1174	0x007A93B0  	STS        ADCSRA+0, R27
;TFT_display_demo.c,105 :: 		SPCR = 0x00;
0x1178	0xE0B0    	LDI        R27, 0
0x117A	0xBDBC    	OUT        SPCR+0, R27
;TFT_display_demo.c,106 :: 		TWCR = 0x00;
0x117C	0xE0B0    	LDI        R27, 0
0x117E	0x00BC93B0  	STS        TWCR+0, R27
;TFT_display_demo.c,108 :: 		ST7735_init();
0x1182	0xDA3F    	RCALL      _ST7735_init+0
;TFT_display_demo.c,109 :: 		}
L_end_setup:
0x1184	0x9508    	RET
; end of _setup
_ST7735_init:
;st7735.c,51 :: 		void ST7735_init()
;st7735.c,53 :: 		ST7735_Reset();
0x0602	0x922F    	PUSH       R2
0x0604	0x923F    	PUSH       R3
0x0606	0xDEBC    	RCALL      _ST7735_Reset+0
;st7735.c,55 :: 		ST7735_Write(ST7735_SWRESET, CMD);
0x0608	0x2433    	CLR        R3
0x060A	0xE0B1    	LDI        R27, 1
0x060C	0x2E2B    	MOV        R2, R27
0x060E	0xDECD    	RCALL      _ST7735_Write+0
;st7735.c,56 :: 		delay_us(150);
0x0610	0xE014    	LDI        R17, 4
0x0612	0xE10D    	LDI        R16, 29
L_ST7735_init10:
0x0614	0x950A    	DEC        R16
0x0616	0xF7F1    	BRNE       L_ST7735_init10
0x0618	0x951A    	DEC        R17
0x061A	0xF7E1    	BRNE       L_ST7735_init10
;st7735.c,57 :: 		ST7735_Write(ST7735_SLPOUT, CMD);
0x061C	0x2433    	CLR        R3
0x061E	0xE1B1    	LDI        R27, 17
0x0620	0x2E2B    	MOV        R2, R27
0x0622	0xDEC3    	RCALL      _ST7735_Write+0
;st7735.c,58 :: 		delay_us(150);
0x0624	0xE014    	LDI        R17, 4
0x0626	0xE10D    	LDI        R16, 29
L_ST7735_init12:
0x0628	0x950A    	DEC        R16
0x062A	0xF7F1    	BRNE       L_ST7735_init12
0x062C	0x951A    	DEC        R17
0x062E	0xF7E1    	BRNE       L_ST7735_init12
;st7735.c,60 :: 		ST7735_Write(ST7735_FRMCTR1, CMD);
0x0630	0x2433    	CLR        R3
0x0632	0xEBB1    	LDI        R27, 177
0x0634	0x2E2B    	MOV        R2, R27
0x0636	0xDEB9    	RCALL      _ST7735_Write+0
;st7735.c,61 :: 		ST7735_Write(0x01, DAT);
0x0638	0xE0B1    	LDI        R27, 1
0x063A	0x2E3B    	MOV        R3, R27
0x063C	0xE0B1    	LDI        R27, 1
0x063E	0x2E2B    	MOV        R2, R27
0x0640	0xDEB4    	RCALL      _ST7735_Write+0
;st7735.c,62 :: 		ST7735_Write(0x2C, DAT);
0x0642	0xE0B1    	LDI        R27, 1
0x0644	0x2E3B    	MOV        R3, R27
0x0646	0xE2BC    	LDI        R27, 44
0x0648	0x2E2B    	MOV        R2, R27
0x064A	0xDEAF    	RCALL      _ST7735_Write+0
;st7735.c,63 :: 		ST7735_Write(0x2D, DAT);
0x064C	0xE0B1    	LDI        R27, 1
0x064E	0x2E3B    	MOV        R3, R27
0x0650	0xE2BD    	LDI        R27, 45
0x0652	0x2E2B    	MOV        R2, R27
0x0654	0xDEAA    	RCALL      _ST7735_Write+0
;st7735.c,65 :: 		ST7735_Write(ST7735_FRMCTR2, CMD);
0x0656	0x2433    	CLR        R3
0x0658	0xEBB2    	LDI        R27, 178
0x065A	0x2E2B    	MOV        R2, R27
0x065C	0xDEA6    	RCALL      _ST7735_Write+0
;st7735.c,66 :: 		ST7735_Write(0x01, DAT);
0x065E	0xE0B1    	LDI        R27, 1
0x0660	0x2E3B    	MOV        R3, R27
0x0662	0xE0B1    	LDI        R27, 1
0x0664	0x2E2B    	MOV        R2, R27
0x0666	0xDEA1    	RCALL      _ST7735_Write+0
;st7735.c,67 :: 		ST7735_Write(0x2C, DAT);
0x0668	0xE0B1    	LDI        R27, 1
0x066A	0x2E3B    	MOV        R3, R27
0x066C	0xE2BC    	LDI        R27, 44
0x066E	0x2E2B    	MOV        R2, R27
0x0670	0xDE9C    	RCALL      _ST7735_Write+0
;st7735.c,68 :: 		ST7735_Write(0x2D, DAT);
0x0672	0xE0B1    	LDI        R27, 1
0x0674	0x2E3B    	MOV        R3, R27
0x0676	0xE2BD    	LDI        R27, 45
0x0678	0x2E2B    	MOV        R2, R27
0x067A	0xDE97    	RCALL      _ST7735_Write+0
;st7735.c,70 :: 		ST7735_Write(ST7735_FRMCTR3, CMD);
0x067C	0x2433    	CLR        R3
0x067E	0xEBB3    	LDI        R27, 179
0x0680	0x2E2B    	MOV        R2, R27
0x0682	0xDE93    	RCALL      _ST7735_Write+0
;st7735.c,71 :: 		ST7735_Write(0x01, DAT);
0x0684	0xE0B1    	LDI        R27, 1
0x0686	0x2E3B    	MOV        R3, R27
0x0688	0xE0B1    	LDI        R27, 1
0x068A	0x2E2B    	MOV        R2, R27
0x068C	0xDE8E    	RCALL      _ST7735_Write+0
;st7735.c,72 :: 		ST7735_Write(0x2C, DAT);
0x068E	0xE0B1    	LDI        R27, 1
0x0690	0x2E3B    	MOV        R3, R27
0x0692	0xE2BC    	LDI        R27, 44
0x0694	0x2E2B    	MOV        R2, R27
0x0696	0xDE89    	RCALL      _ST7735_Write+0
;st7735.c,73 :: 		ST7735_Write(0x2D, DAT);
0x0698	0xE0B1    	LDI        R27, 1
0x069A	0x2E3B    	MOV        R3, R27
0x069C	0xE2BD    	LDI        R27, 45
0x069E	0x2E2B    	MOV        R2, R27
0x06A0	0xDE84    	RCALL      _ST7735_Write+0
;st7735.c,74 :: 		ST7735_Write(0x01, DAT);
0x06A2	0xE0B1    	LDI        R27, 1
0x06A4	0x2E3B    	MOV        R3, R27
0x06A6	0xE0B1    	LDI        R27, 1
0x06A8	0x2E2B    	MOV        R2, R27
0x06AA	0xDE7F    	RCALL      _ST7735_Write+0
;st7735.c,75 :: 		ST7735_Write(0x2C, DAT);
0x06AC	0xE0B1    	LDI        R27, 1
0x06AE	0x2E3B    	MOV        R3, R27
0x06B0	0xE2BC    	LDI        R27, 44
0x06B2	0x2E2B    	MOV        R2, R27
0x06B4	0xDE7A    	RCALL      _ST7735_Write+0
;st7735.c,76 :: 		ST7735_Write(0x2D, DAT);
0x06B6	0xE0B1    	LDI        R27, 1
0x06B8	0x2E3B    	MOV        R3, R27
0x06BA	0xE2BD    	LDI        R27, 45
0x06BC	0x2E2B    	MOV        R2, R27
0x06BE	0xDE75    	RCALL      _ST7735_Write+0
;st7735.c,78 :: 		ST7735_Write(ST7735_INVCTR, CMD);
0x06C0	0x2433    	CLR        R3
0x06C2	0xEBB4    	LDI        R27, 180
0x06C4	0x2E2B    	MOV        R2, R27
0x06C6	0xDE71    	RCALL      _ST7735_Write+0
;st7735.c,79 :: 		ST7735_Write(0x07, DAT);
0x06C8	0xE0B1    	LDI        R27, 1
0x06CA	0x2E3B    	MOV        R3, R27
0x06CC	0xE0B7    	LDI        R27, 7
0x06CE	0x2E2B    	MOV        R2, R27
0x06D0	0xDE6C    	RCALL      _ST7735_Write+0
;st7735.c,81 :: 		ST7735_Write(ST7735_PWCTR1, CMD);
0x06D2	0x2433    	CLR        R3
0x06D4	0xECB0    	LDI        R27, 192
0x06D6	0x2E2B    	MOV        R2, R27
0x06D8	0xDE68    	RCALL      _ST7735_Write+0
;st7735.c,82 :: 		ST7735_Write(0xA2, DAT);
0x06DA	0xE0B1    	LDI        R27, 1
0x06DC	0x2E3B    	MOV        R3, R27
0x06DE	0xEAB2    	LDI        R27, 162
0x06E0	0x2E2B    	MOV        R2, R27
0x06E2	0xDE63    	RCALL      _ST7735_Write+0
;st7735.c,83 :: 		ST7735_Write(0x02, DAT);
0x06E4	0xE0B1    	LDI        R27, 1
0x06E6	0x2E3B    	MOV        R3, R27
0x06E8	0xE0B2    	LDI        R27, 2
0x06EA	0x2E2B    	MOV        R2, R27
0x06EC	0xDE5E    	RCALL      _ST7735_Write+0
;st7735.c,84 :: 		ST7735_Write(0x84, DAT);
0x06EE	0xE0B1    	LDI        R27, 1
0x06F0	0x2E3B    	MOV        R3, R27
0x06F2	0xE8B4    	LDI        R27, 132
0x06F4	0x2E2B    	MOV        R2, R27
0x06F6	0xDE59    	RCALL      _ST7735_Write+0
;st7735.c,86 :: 		ST7735_Write(ST7735_PWCTR1, CMD);
0x06F8	0x2433    	CLR        R3
0x06FA	0xECB0    	LDI        R27, 192
0x06FC	0x2E2B    	MOV        R2, R27
0x06FE	0xDE55    	RCALL      _ST7735_Write+0
;st7735.c,87 :: 		ST7735_Write(0xC5, DAT);
0x0700	0xE0B1    	LDI        R27, 1
0x0702	0x2E3B    	MOV        R3, R27
0x0704	0xECB5    	LDI        R27, 197
0x0706	0x2E2B    	MOV        R2, R27
0x0708	0xDE50    	RCALL      _ST7735_Write+0
;st7735.c,89 :: 		ST7735_Write(ST7735_PWCTR2, CMD);
0x070A	0x2433    	CLR        R3
0x070C	0xECB1    	LDI        R27, 193
0x070E	0x2E2B    	MOV        R2, R27
0x0710	0xDE4C    	RCALL      _ST7735_Write+0
;st7735.c,90 :: 		ST7735_Write(0x0A, DAT);
0x0712	0xE0B1    	LDI        R27, 1
0x0714	0x2E3B    	MOV        R3, R27
0x0716	0xE0BA    	LDI        R27, 10
0x0718	0x2E2B    	MOV        R2, R27
0x071A	0xDE47    	RCALL      _ST7735_Write+0
;st7735.c,91 :: 		ST7735_Write(0x00, DAT);
0x071C	0xE0B1    	LDI        R27, 1
0x071E	0x2E3B    	MOV        R3, R27
0x0720	0x2422    	CLR        R2
0x0722	0xDE43    	RCALL      _ST7735_Write+0
;st7735.c,93 :: 		ST7735_Write(ST7735_PWCTR3, CMD);
0x0724	0x2433    	CLR        R3
0x0726	0xECB2    	LDI        R27, 194
0x0728	0x2E2B    	MOV        R2, R27
0x072A	0xDE3F    	RCALL      _ST7735_Write+0
;st7735.c,94 :: 		ST7735_Write(0x8A, DAT);
0x072C	0xE0B1    	LDI        R27, 1
0x072E	0x2E3B    	MOV        R3, R27
0x0730	0xE8BA    	LDI        R27, 138
0x0732	0x2E2B    	MOV        R2, R27
0x0734	0xDE3A    	RCALL      _ST7735_Write+0
;st7735.c,95 :: 		ST7735_Write(0x2A, DAT);
0x0736	0xE0B1    	LDI        R27, 1
0x0738	0x2E3B    	MOV        R3, R27
0x073A	0xE2BA    	LDI        R27, 42
0x073C	0x2E2B    	MOV        R2, R27
0x073E	0xDE35    	RCALL      _ST7735_Write+0
;st7735.c,97 :: 		ST7735_Write(ST7735_PWCTR4, CMD);
0x0740	0x2433    	CLR        R3
0x0742	0xECB3    	LDI        R27, 195
0x0744	0x2E2B    	MOV        R2, R27
0x0746	0xDE31    	RCALL      _ST7735_Write+0
;st7735.c,98 :: 		ST7735_Write(0x8A, DAT);
0x0748	0xE0B1    	LDI        R27, 1
0x074A	0x2E3B    	MOV        R3, R27
0x074C	0xE8BA    	LDI        R27, 138
0x074E	0x2E2B    	MOV        R2, R27
0x0750	0xDE2C    	RCALL      _ST7735_Write+0
;st7735.c,99 :: 		ST7735_Write(0xEE, DAT);
0x0752	0xE0B1    	LDI        R27, 1
0x0754	0x2E3B    	MOV        R3, R27
0x0756	0xEEBE    	LDI        R27, 238
0x0758	0x2E2B    	MOV        R2, R27
0x075A	0xDE27    	RCALL      _ST7735_Write+0
;st7735.c,101 :: 		ST7735_Write(ST7735_PWCTR5, CMD);
0x075C	0x2433    	CLR        R3
0x075E	0xECB4    	LDI        R27, 196
0x0760	0x2E2B    	MOV        R2, R27
0x0762	0xDE23    	RCALL      _ST7735_Write+0
;st7735.c,102 :: 		ST7735_Write(0x0E, DAT);
0x0764	0xE0B1    	LDI        R27, 1
0x0766	0x2E3B    	MOV        R3, R27
0x0768	0xE0BE    	LDI        R27, 14
0x076A	0x2E2B    	MOV        R2, R27
0x076C	0xDE1E    	RCALL      _ST7735_Write+0
;st7735.c,104 :: 		ST7735_Write(ST7735_VMCTR1, CMD);
0x076E	0x2433    	CLR        R3
0x0770	0xECB5    	LDI        R27, 197
0x0772	0x2E2B    	MOV        R2, R27
0x0774	0xDE1A    	RCALL      _ST7735_Write+0
;st7735.c,105 :: 		ST7735_Write(0x00, DAT);
0x0776	0xE0B1    	LDI        R27, 1
0x0778	0x2E3B    	MOV        R3, R27
0x077A	0x2422    	CLR        R2
0x077C	0xDE16    	RCALL      _ST7735_Write+0
;st7735.c,107 :: 		ST7735_Write(ST7735_COLMOD, CMD);
0x077E	0x2433    	CLR        R3
0x0780	0xE3BA    	LDI        R27, 58
0x0782	0x2E2B    	MOV        R2, R27
0x0784	0xDE12    	RCALL      _ST7735_Write+0
;st7735.c,108 :: 		ST7735_Write(0x05, DAT);
0x0786	0xE0B1    	LDI        R27, 1
0x0788	0x2E3B    	MOV        R3, R27
0x078A	0xE0B5    	LDI        R27, 5
0x078C	0x2E2B    	MOV        R2, R27
0x078E	0xDE0D    	RCALL      _ST7735_Write+0
;st7735.c,110 :: 		ST7735_Write(ST7735_MADCTL, CMD);
0x0790	0x2433    	CLR        R3
0x0792	0xE3B6    	LDI        R27, 54
0x0794	0x2E2B    	MOV        R2, R27
0x0796	0xDE09    	RCALL      _ST7735_Write+0
;st7735.c,111 :: 		ST7735_Write(0xC8, DAT);
0x0798	0xE0B1    	LDI        R27, 1
0x079A	0x2E3B    	MOV        R3, R27
0x079C	0xECB8    	LDI        R27, 200
0x079E	0x2E2B    	MOV        R2, R27
0x07A0	0xDE04    	RCALL      _ST7735_Write+0
;st7735.c,113 :: 		RAM_Address_Set();
0x07A2	0xDDD7    	RCALL      _RAM_Address_Set+0
;st7735.c,115 :: 		ST7735_Write(ST7735_GMCTRP1, CMD);
0x07A4	0x2433    	CLR        R3
0x07A6	0xEEB0    	LDI        R27, 224
0x07A8	0x2E2B    	MOV        R2, R27
0x07AA	0xDDFF    	RCALL      _ST7735_Write+0
;st7735.c,116 :: 		ST7735_Write(0x02, DAT);
0x07AC	0xE0B1    	LDI        R27, 1
0x07AE	0x2E3B    	MOV        R3, R27
0x07B0	0xE0B2    	LDI        R27, 2
0x07B2	0x2E2B    	MOV        R2, R27
0x07B4	0xDDFA    	RCALL      _ST7735_Write+0
;st7735.c,117 :: 		ST7735_Write(0x1C, DAT);
0x07B6	0xE0B1    	LDI        R27, 1
0x07B8	0x2E3B    	MOV        R3, R27
0x07BA	0xE1BC    	LDI        R27, 28
0x07BC	0x2E2B    	MOV        R2, R27
0x07BE	0xDDF5    	RCALL      _ST7735_Write+0
;st7735.c,118 :: 		ST7735_Write(0x07, DAT);
0x07C0	0xE0B1    	LDI        R27, 1
0x07C2	0x2E3B    	MOV        R3, R27
0x07C4	0xE0B7    	LDI        R27, 7
0x07C6	0x2E2B    	MOV        R2, R27
0x07C8	0xDDF0    	RCALL      _ST7735_Write+0
;st7735.c,119 :: 		ST7735_Write(0x12, DAT);
0x07CA	0xE0B1    	LDI        R27, 1
0x07CC	0x2E3B    	MOV        R3, R27
0x07CE	0xE1B2    	LDI        R27, 18
0x07D0	0x2E2B    	MOV        R2, R27
0x07D2	0xDDEB    	RCALL      _ST7735_Write+0
;st7735.c,120 :: 		ST7735_Write(0x37, DAT);
0x07D4	0xE0B1    	LDI        R27, 1
0x07D6	0x2E3B    	MOV        R3, R27
0x07D8	0xE3B7    	LDI        R27, 55
0x07DA	0x2E2B    	MOV        R2, R27
0x07DC	0xDDE6    	RCALL      _ST7735_Write+0
;st7735.c,121 :: 		ST7735_Write(0x32, DAT);
0x07DE	0xE0B1    	LDI        R27, 1
0x07E0	0x2E3B    	MOV        R3, R27
0x07E2	0xE3B2    	LDI        R27, 50
0x07E4	0x2E2B    	MOV        R2, R27
0x07E6	0xDDE1    	RCALL      _ST7735_Write+0
;st7735.c,122 :: 		ST7735_Write(0x29, DAT);
0x07E8	0xE0B1    	LDI        R27, 1
0x07EA	0x2E3B    	MOV        R3, R27
0x07EC	0xE2B9    	LDI        R27, 41
0x07EE	0x2E2B    	MOV        R2, R27
0x07F0	0xDDDC    	RCALL      _ST7735_Write+0
;st7735.c,123 :: 		ST7735_Write(0x2D, DAT);
0x07F2	0xE0B1    	LDI        R27, 1
0x07F4	0x2E3B    	MOV        R3, R27
0x07F6	0xE2BD    	LDI        R27, 45
0x07F8	0x2E2B    	MOV        R2, R27
0x07FA	0xDDD7    	RCALL      _ST7735_Write+0
;st7735.c,124 :: 		ST7735_Write(0x29, DAT);
0x07FC	0xE0B1    	LDI        R27, 1
0x07FE	0x2E3B    	MOV        R3, R27
0x0800	0xE2B9    	LDI        R27, 41
0x0802	0x2E2B    	MOV        R2, R27
0x0804	0xDDD2    	RCALL      _ST7735_Write+0
;st7735.c,125 :: 		ST7735_Write(0x25, DAT);
0x0806	0xE0B1    	LDI        R27, 1
0x0808	0x2E3B    	MOV        R3, R27
0x080A	0xE2B5    	LDI        R27, 37
0x080C	0x2E2B    	MOV        R2, R27
0x080E	0xDDCD    	RCALL      _ST7735_Write+0
;st7735.c,126 :: 		ST7735_Write(0x2B, DAT);
0x0810	0xE0B1    	LDI        R27, 1
0x0812	0x2E3B    	MOV        R3, R27
0x0814	0xE2BB    	LDI        R27, 43
0x0816	0x2E2B    	MOV        R2, R27
0x0818	0xDDC8    	RCALL      _ST7735_Write+0
;st7735.c,127 :: 		ST7735_Write(0x39, DAT);
0x081A	0xE0B1    	LDI        R27, 1
0x081C	0x2E3B    	MOV        R3, R27
0x081E	0xE3B9    	LDI        R27, 57
0x0820	0x2E2B    	MOV        R2, R27
0x0822	0xDDC3    	RCALL      _ST7735_Write+0
;st7735.c,128 :: 		ST7735_Write(0x00, DAT);
0x0824	0xE0B1    	LDI        R27, 1
0x0826	0x2E3B    	MOV        R3, R27
0x0828	0x2422    	CLR        R2
0x082A	0xDDBF    	RCALL      _ST7735_Write+0
;st7735.c,129 :: 		ST7735_Write(0x01, DAT);
0x082C	0xE0B1    	LDI        R27, 1
0x082E	0x2E3B    	MOV        R3, R27
0x0830	0xE0B1    	LDI        R27, 1
0x0832	0x2E2B    	MOV        R2, R27
0x0834	0xDDBA    	RCALL      _ST7735_Write+0
;st7735.c,130 :: 		ST7735_Write(0x03, DAT);
0x0836	0xE0B1    	LDI        R27, 1
0x0838	0x2E3B    	MOV        R3, R27
0x083A	0xE0B3    	LDI        R27, 3
0x083C	0x2E2B    	MOV        R2, R27
0x083E	0xDDB5    	RCALL      _ST7735_Write+0
;st7735.c,131 :: 		ST7735_Write(0x10, DAT);
0x0840	0xE0B1    	LDI        R27, 1
0x0842	0x2E3B    	MOV        R3, R27
0x0844	0xE1B0    	LDI        R27, 16
0x0846	0x2E2B    	MOV        R2, R27
0x0848	0xDDB0    	RCALL      _ST7735_Write+0
;st7735.c,133 :: 		ST7735_Write(ST7735_GMCTRN1, CMD);
0x084A	0x2433    	CLR        R3
0x084C	0xEEB1    	LDI        R27, 225
0x084E	0x2E2B    	MOV        R2, R27
0x0850	0xDDAC    	RCALL      _ST7735_Write+0
;st7735.c,134 :: 		ST7735_Write(0x03, DAT);
0x0852	0xE0B1    	LDI        R27, 1
0x0854	0x2E3B    	MOV        R3, R27
0x0856	0xE0B3    	LDI        R27, 3
0x0858	0x2E2B    	MOV        R2, R27
0x085A	0xDDA7    	RCALL      _ST7735_Write+0
;st7735.c,135 :: 		ST7735_Write(0x1D, DAT);
0x085C	0xE0B1    	LDI        R27, 1
0x085E	0x2E3B    	MOV        R3, R27
0x0860	0xE1BD    	LDI        R27, 29
0x0862	0x2E2B    	MOV        R2, R27
0x0864	0xDDA2    	RCALL      _ST7735_Write+0
;st7735.c,136 :: 		ST7735_Write(0x07, DAT);
0x0866	0xE0B1    	LDI        R27, 1
0x0868	0x2E3B    	MOV        R3, R27
0x086A	0xE0B7    	LDI        R27, 7
0x086C	0x2E2B    	MOV        R2, R27
0x086E	0xDD9D    	RCALL      _ST7735_Write+0
;st7735.c,137 :: 		ST7735_Write(0x06, DAT);
0x0870	0xE0B1    	LDI        R27, 1
0x0872	0x2E3B    	MOV        R3, R27
0x0874	0xE0B6    	LDI        R27, 6
0x0876	0x2E2B    	MOV        R2, R27
0x0878	0xDD98    	RCALL      _ST7735_Write+0
;st7735.c,138 :: 		ST7735_Write(0x2E, DAT);
0x087A	0xE0B1    	LDI        R27, 1
0x087C	0x2E3B    	MOV        R3, R27
0x087E	0xE2BE    	LDI        R27, 46
0x0880	0x2E2B    	MOV        R2, R27
0x0882	0xDD93    	RCALL      _ST7735_Write+0
;st7735.c,139 :: 		ST7735_Write(0x2C, DAT);
0x0884	0xE0B1    	LDI        R27, 1
0x0886	0x2E3B    	MOV        R3, R27
0x0888	0xE2BC    	LDI        R27, 44
0x088A	0x2E2B    	MOV        R2, R27
0x088C	0xDD8E    	RCALL      _ST7735_Write+0
;st7735.c,140 :: 		ST7735_Write(0x29, DAT);
0x088E	0xE0B1    	LDI        R27, 1
0x0890	0x2E3B    	MOV        R3, R27
0x0892	0xE2B9    	LDI        R27, 41
0x0894	0x2E2B    	MOV        R2, R27
0x0896	0xDD89    	RCALL      _ST7735_Write+0
;st7735.c,141 :: 		ST7735_Write(0x2D, DAT);
0x0898	0xE0B1    	LDI        R27, 1
0x089A	0x2E3B    	MOV        R3, R27
0x089C	0xE2BD    	LDI        R27, 45
0x089E	0x2E2B    	MOV        R2, R27
0x08A0	0xDD84    	RCALL      _ST7735_Write+0
;st7735.c,142 :: 		ST7735_Write(0x2E, DAT);
0x08A2	0xE0B1    	LDI        R27, 1
0x08A4	0x2E3B    	MOV        R3, R27
0x08A6	0xE2BE    	LDI        R27, 46
0x08A8	0x2E2B    	MOV        R2, R27
0x08AA	0xDD7F    	RCALL      _ST7735_Write+0
;st7735.c,143 :: 		ST7735_Write(0x2E, DAT);
0x08AC	0xE0B1    	LDI        R27, 1
0x08AE	0x2E3B    	MOV        R3, R27
0x08B0	0xE2BE    	LDI        R27, 46
0x08B2	0x2E2B    	MOV        R2, R27
0x08B4	0xDD7A    	RCALL      _ST7735_Write+0
;st7735.c,144 :: 		ST7735_Write(0x37, DAT);
0x08B6	0xE0B1    	LDI        R27, 1
0x08B8	0x2E3B    	MOV        R3, R27
0x08BA	0xE3B7    	LDI        R27, 55
0x08BC	0x2E2B    	MOV        R2, R27
0x08BE	0xDD75    	RCALL      _ST7735_Write+0
;st7735.c,145 :: 		ST7735_Write(0x3F, DAT);
0x08C0	0xE0B1    	LDI        R27, 1
0x08C2	0x2E3B    	MOV        R3, R27
0x08C4	0xE3BF    	LDI        R27, 63
0x08C6	0x2E2B    	MOV        R2, R27
0x08C8	0xDD70    	RCALL      _ST7735_Write+0
;st7735.c,146 :: 		ST7735_Write(0x00, DAT);
0x08CA	0xE0B1    	LDI        R27, 1
0x08CC	0x2E3B    	MOV        R3, R27
0x08CE	0x2422    	CLR        R2
0x08D0	0xDD6C    	RCALL      _ST7735_Write+0
;st7735.c,147 :: 		ST7735_Write(0x00, DAT);
0x08D2	0xE0B1    	LDI        R27, 1
0x08D4	0x2E3B    	MOV        R3, R27
0x08D6	0x2422    	CLR        R2
0x08D8	0xDD68    	RCALL      _ST7735_Write+0
;st7735.c,148 :: 		ST7735_Write(0x02, DAT);
0x08DA	0xE0B1    	LDI        R27, 1
0x08DC	0x2E3B    	MOV        R3, R27
0x08DE	0xE0B2    	LDI        R27, 2
0x08E0	0x2E2B    	MOV        R2, R27
0x08E2	0xDD63    	RCALL      _ST7735_Write+0
;st7735.c,149 :: 		ST7735_Write(0x10, DAT);
0x08E4	0xE0B1    	LDI        R27, 1
0x08E6	0x2E3B    	MOV        R3, R27
0x08E8	0xE1B0    	LDI        R27, 16
0x08EA	0x2E2B    	MOV        R2, R27
0x08EC	0xDD5E    	RCALL      _ST7735_Write+0
;st7735.c,151 :: 		ST7735_Write(ST7735_NORON, CMD);
0x08EE	0x2433    	CLR        R3
0x08F0	0xE1B3    	LDI        R27, 19
0x08F2	0x2E2B    	MOV        R2, R27
0x08F4	0xDD5A    	RCALL      _ST7735_Write+0
;st7735.c,152 :: 		delay_ms(10);
0x08F6	0xED10    	LDI        R17, 208
0x08F8	0xEC0A    	LDI        R16, 202
L_ST7735_init14:
0x08FA	0x950A    	DEC        R16
0x08FC	0xF7F1    	BRNE       L_ST7735_init14
0x08FE	0x951A    	DEC        R17
0x0900	0xF7E1    	BRNE       L_ST7735_init14
0x0902	0x0000    	NOP
;st7735.c,154 :: 		ST7735_Write(ST7735_DISPON, CMD);
0x0904	0x2433    	CLR        R3
0x0906	0xE2B9    	LDI        R27, 41
0x0908	0x2E2B    	MOV        R2, R27
0x090A	0xDD4F    	RCALL      _ST7735_Write+0
;st7735.c,155 :: 		delay_ms(100);
0x090C	0xE029    	LDI        R18, 9
0x090E	0xE11E    	LDI        R17, 30
0x0910	0xEE05    	LDI        R16, 229
L_ST7735_init16:
0x0912	0x950A    	DEC        R16
0x0914	0xF7F1    	BRNE       L_ST7735_init16
0x0916	0x951A    	DEC        R17
0x0918	0xF7E1    	BRNE       L_ST7735_init16
0x091A	0x952A    	DEC        R18
0x091C	0xF7D1    	BRNE       L_ST7735_init16
0x091E	0x0000    	NOP
;st7735.c,157 :: 		ST7735_Write(ST7735_RAMWR, CMD);
0x0920	0x2433    	CLR        R3
0x0922	0xE2BC    	LDI        R27, 44
0x0924	0x2E2B    	MOV        R2, R27
0x0926	0xDD41    	RCALL      _ST7735_Write+0
;st7735.c,158 :: 		delay_ms(100);
0x0928	0xE029    	LDI        R18, 9
0x092A	0xE11E    	LDI        R17, 30
0x092C	0xEE05    	LDI        R16, 229
L_ST7735_init18:
0x092E	0x950A    	DEC        R16
0x0930	0xF7F1    	BRNE       L_ST7735_init18
0x0932	0x951A    	DEC        R17
0x0934	0xF7E1    	BRNE       L_ST7735_init18
0x0936	0x952A    	DEC        R18
0x0938	0xF7D1    	BRNE       L_ST7735_init18
0x093A	0x0000    	NOP
;st7735.c,159 :: 		}
L_end_ST7735_init:
0x093C	0x903F    	POP        R3
0x093E	0x902F    	POP        R2
0x0940	0x9508    	RET
; end of _ST7735_init
_ST7735_Reset:
;st7735.c,42 :: 		void ST7735_Reset()
;st7735.c,44 :: 		RST_pin = 0;
0x0380	0xB1B5    	IN         R27, PORTB1_bit+0
0x0382	0x7FBD    	CBR        R27, 2
0x0384	0xB9B5    	OUT        PORTB1_bit+0, R27
;st7735.c,45 :: 		delay_ms(2);
0x0386	0xE21A    	LDI        R17, 42
0x0388	0xE80E    	LDI        R16, 142
L_ST7735_Reset6:
0x038A	0x950A    	DEC        R16
0x038C	0xF7F1    	BRNE       L_ST7735_Reset6
0x038E	0x951A    	DEC        R17
0x0390	0xF7E1    	BRNE       L_ST7735_Reset6
0x0392	0x0000    	NOP
;st7735.c,46 :: 		RST_pin = 1;
0x0394	0xB1B5    	IN         R27, PORTB1_bit+0
0x0396	0x60B2    	SBR        R27, 2
0x0398	0xB9B5    	OUT        PORTB1_bit+0, R27
;st7735.c,47 :: 		delay_ms(2);
0x039A	0xE21A    	LDI        R17, 42
0x039C	0xE80E    	LDI        R16, 142
L_ST7735_Reset8:
0x039E	0x950A    	DEC        R16
0x03A0	0xF7F1    	BRNE       L_ST7735_Reset8
0x03A2	0x951A    	DEC        R17
0x03A4	0xF7E1    	BRNE       L_ST7735_Reset8
0x03A6	0x0000    	NOP
;st7735.c,48 :: 		}
L_end_ST7735_Reset:
0x03A8	0x9508    	RET
; end of _ST7735_Reset
_ST7735_Write:
;st7735.c,4 :: 		void ST7735_Write(unsigned char value, unsigned char mode)
;st7735.c,6 :: 		signed char i = 0x08;
; i start address is: 17 (R17)
0x03AA	0xE018    	LDI        R17, 8
;st7735.c,8 :: 		CS_pin = 0;
0x03AC	0xB1B5    	IN         R27, PORTB0_bit+0
0x03AE	0x7FBE    	CBR        R27, 1
0x03B0	0xB9B5    	OUT        PORTB0_bit+0, R27
;st7735.c,10 :: 		if(mode)
0x03B2	0x2033    	TST        R3
0x03B4	0xF021    	BREQ       L_ST7735_Write0
L__ST7735_Write189:
;st7735.c,12 :: 		RS_pin = 1;
0x03B6	0xB1B5    	IN         R27, PORTB2_bit+0
0x03B8	0x60B4    	SBR        R27, 4
0x03BA	0xB9B5    	OUT        PORTB2_bit+0, R27
;st7735.c,13 :: 		}
0x03BC	0xC003    	RJMP       L_ST7735_Write1
L_ST7735_Write0:
;st7735.c,16 :: 		RS_pin = 0;
0x03BE	0xB1B5    	IN         R27, PORTB2_bit+0
0x03C0	0x7FBB    	CBR        R27, 4
0x03C2	0xB9B5    	OUT        PORTB2_bit+0, R27
;st7735.c,17 :: 		}
L_ST7735_Write1:
;st7735.c,19 :: 		while(i > 0)
L_ST7735_Write2:
; i end address is: 17 (R17)
; i start address is: 17 (R17)
0x03C4	0xE000    	LDI        R16, 0
0x03C6	0x1701    	CP         R16, R17
0x03C8	0xF4C4    	BRGE       L_ST7735_Write3
L__ST7735_Write190:
;st7735.c,21 :: 		SCK_pin = 0;
0x03CA	0xB1B5    	IN         R27, PORTB4_bit+0
0x03CC	0x7EBF    	CBR        R27, 16
0x03CE	0xB9B5    	OUT        PORTB4_bit+0, R27
;st7735.c,23 :: 		if((value & 0x80) != 0)
0x03D0	0x2D02    	MOV        R16, R2
0x03D2	0x7800    	ANDI       R16, 128
0x03D4	0x3000    	CPI        R16, 0
0x03D6	0xF021    	BREQ       L_ST7735_Write4
L__ST7735_Write191:
;st7735.c,25 :: 		SDA_pin = 1;
0x03D8	0xB1B5    	IN         R27, PORTB3_bit+0
0x03DA	0x60B8    	SBR        R27, 8
0x03DC	0xB9B5    	OUT        PORTB3_bit+0, R27
;st7735.c,26 :: 		}
0x03DE	0xC003    	RJMP       L_ST7735_Write5
L_ST7735_Write4:
;st7735.c,29 :: 		SDA_pin = 0;
0x03E0	0xB1B5    	IN         R27, PORTB3_bit+0
0x03E2	0x7FB7    	CBR        R27, 8
0x03E4	0xB9B5    	OUT        PORTB3_bit+0, R27
;st7735.c,30 :: 		}
L_ST7735_Write5:
;st7735.c,32 :: 		SCK_pin = 1;
0x03E6	0xB1B5    	IN         R27, PORTB4_bit+0
0x03E8	0x61B0    	SBR        R27, 16
0x03EA	0xB9B5    	OUT        PORTB4_bit+0, R27
;st7735.c,34 :: 		value <<= 1;
0x03EC	0x2D02    	MOV        R16, R2
0x03EE	0x0F00    	LSL        R16
0x03F0	0x2E20    	MOV        R2, R16
;st7735.c,35 :: 		i--;
0x03F2	0x2F01    	MOV        R16, R17
0x03F4	0x5001    	SUBI       R16, 1
0x03F6	0x2F10    	MOV        R17, R16
;st7735.c,36 :: 		};
; i end address is: 17 (R17)
0x03F8	0xCFE5    	RJMP       L_ST7735_Write2
L_ST7735_Write3:
;st7735.c,38 :: 		CS_pin = 1;
0x03FA	0xB1B5    	IN         R27, PORTB0_bit+0
0x03FC	0x60B1    	SBR        R27, 1
0x03FE	0xB9B5    	OUT        PORTB0_bit+0, R27
;st7735.c,39 :: 		}
L_end_ST7735_Write:
0x0400	0x9508    	RET
; end of _ST7735_Write
_RAM_Address_Set:
;st7735.c,202 :: 		void RAM_Address_Set()
;st7735.c,204 :: 		Set_Addr_Window(0x00, 0x00, 0x7F, 0x9F);
0x0352	0x922F    	PUSH       R2
0x0354	0x923F    	PUSH       R3
0x0356	0x924F    	PUSH       R4
0x0358	0x925F    	PUSH       R5
0x035A	0xE9BF    	LDI        R27, 159
0x035C	0x2E5B    	MOV        R5, R27
0x035E	0xE7BF    	LDI        R27, 127
0x0360	0x2E4B    	MOV        R4, R27
0x0362	0x2433    	CLR        R3
0x0364	0x2422    	CLR        R2
0x0366	0xDE93    	RCALL      _Set_Addr_Window+0
;st7735.c,205 :: 		}
L_end_RAM_Address_Set:
0x0368	0x905F    	POP        R5
0x036A	0x904F    	POP        R4
0x036C	0x903F    	POP        R3
0x036E	0x902F    	POP        R2
0x0370	0x9508    	RET
; end of _RAM_Address_Set
_Set_Addr_Window:
;st7735.c,184 :: 		void Set_Addr_Window(unsigned char xs, unsigned char ys, unsigned char xe, unsigned char ye)
;st7735.c,186 :: 		ST7735_Write(ST7735_CASET, CMD);
0x008E	0x922F    	PUSH       R2
0x0090	0x923F    	PUSH       R3
0x0092	0x923F    	PUSH       R3
0x0094	0x922F    	PUSH       R2
0x0096	0x2433    	CLR        R3
0x0098	0xE2BA    	LDI        R27, 42
0x009A	0x2E2B    	MOV        R2, R27
0x009C	0xD186    	RCALL      _ST7735_Write+0
;st7735.c,187 :: 		ST7735_Write(0x00, DAT);
0x009E	0xE0B1    	LDI        R27, 1
0x00A0	0x2E3B    	MOV        R3, R27
0x00A2	0x2422    	CLR        R2
0x00A4	0xD182    	RCALL      _ST7735_Write+0
0x00A6	0x902F    	POP        R2
;st7735.c,188 :: 		ST7735_Write(xs, DAT);
0x00A8	0xE0B1    	LDI        R27, 1
0x00AA	0x2E3B    	MOV        R3, R27
0x00AC	0xD17E    	RCALL      _ST7735_Write+0
;st7735.c,189 :: 		ST7735_Write(0x00, DAT);
0x00AE	0xE0B1    	LDI        R27, 1
0x00B0	0x2E3B    	MOV        R3, R27
0x00B2	0x2422    	CLR        R2
0x00B4	0xD17A    	RCALL      _ST7735_Write+0
;st7735.c,190 :: 		ST7735_Write(xe, DAT);
0x00B6	0xE0B1    	LDI        R27, 1
0x00B8	0x2E3B    	MOV        R3, R27
0x00BA	0x2C24    	MOV        R2, R4
0x00BC	0xD176    	RCALL      _ST7735_Write+0
;st7735.c,192 :: 		ST7735_Write(ST7735_RASET, CMD);
0x00BE	0x2433    	CLR        R3
0x00C0	0xE2BB    	LDI        R27, 43
0x00C2	0x2E2B    	MOV        R2, R27
0x00C4	0xD172    	RCALL      _ST7735_Write+0
;st7735.c,193 :: 		ST7735_Write(0x00, DAT);
0x00C6	0xE0B1    	LDI        R27, 1
0x00C8	0x2E3B    	MOV        R3, R27
0x00CA	0x2422    	CLR        R2
0x00CC	0xD16E    	RCALL      _ST7735_Write+0
0x00CE	0x903F    	POP        R3
;st7735.c,194 :: 		ST7735_Write(ys, DAT);
0x00D0	0x2C23    	MOV        R2, R3
0x00D2	0xE0B1    	LDI        R27, 1
0x00D4	0x2E3B    	MOV        R3, R27
0x00D6	0xD169    	RCALL      _ST7735_Write+0
;st7735.c,195 :: 		ST7735_Write(0x00, DAT);
0x00D8	0xE0B1    	LDI        R27, 1
0x00DA	0x2E3B    	MOV        R3, R27
0x00DC	0x2422    	CLR        R2
0x00DE	0xD165    	RCALL      _ST7735_Write+0
;st7735.c,196 :: 		ST7735_Write(ye, DAT);
0x00E0	0xE0B1    	LDI        R27, 1
0x00E2	0x2E3B    	MOV        R3, R27
0x00E4	0x2C25    	MOV        R2, R5
0x00E6	0xD161    	RCALL      _ST7735_Write+0
;st7735.c,198 :: 		ST7735_Write(ST7735_RAMWR, CMD);
0x00E8	0x2433    	CLR        R3
0x00EA	0xE2BC    	LDI        R27, 44
0x00EC	0x2E2B    	MOV        R2, R27
0x00EE	0xD15D    	RCALL      _ST7735_Write+0
;st7735.c,199 :: 		}
L_end_Set_Addr_Window:
0x00F0	0x903F    	POP        R3
0x00F2	0x902F    	POP        R2
0x00F4	0x9508    	RET
; end of _Set_Addr_Window
_Set_Rotation:
;st7735.c,233 :: 		void Set_Rotation(unsigned char m)
;st7735.c,235 :: 		unsigned char rotation = 0x00;
0x1016	0x922F    	PUSH       R2
0x1018	0x923F    	PUSH       R3
;st7735.c,237 :: 		ST7735_Write(ST7735_MADCTL, CMD);
0x101A	0x922F    	PUSH       R2
0x101C	0x2433    	CLR        R3
0x101E	0xE3B6    	LDI        R27, 54
0x1020	0x2E2B    	MOV        R2, R27
0x1022	0xD9C3    	RCALL      _ST7735_Write+0
0x1024	0x902F    	POP        R2
;st7735.c,238 :: 		rotation = (m % 4);
0x1026	0x2D02    	MOV        R16, R2
0x1028	0x7003    	ANDI       R16, 3
; rotation start address is: 16 (R16)
;st7735.c,240 :: 		switch(rotation)
0x102A	0xC030    	RJMP       L_Set_Rotation22
; rotation end address is: 16 (R16)
;st7735.c,242 :: 		case 0:
L_Set_Rotation24:
;st7735.c,244 :: 		ST7735_Write((MADCTL_MX | MADCTL_MY | MADCTL_RGB), DAT);
0x102C	0xE0B1    	LDI        R27, 1
0x102E	0x2E3B    	MOV        R3, R27
0x1030	0xECB8    	LDI        R27, 200
0x1032	0x2E2B    	MOV        R2, R27
0x1034	0xD9BA    	RCALL      _ST7735_Write+0
;st7735.c,245 :: 		w = ST7735_TFTWIDTH;
0x1036	0xE8B0    	LDI        R27, 128
0x1038	0x010093B0  	STS        _w+0, R27
;st7735.c,246 :: 		l = ST7735_TFTLENGTH;
0x103C	0xEAB0    	LDI        R27, 160
0x103E	0x010193B0  	STS        _l+0, R27
;st7735.c,247 :: 		break;
0x1042	0xC02C    	RJMP       L_Set_Rotation23
;st7735.c,249 :: 		case 1:
L_Set_Rotation25:
;st7735.c,251 :: 		ST7735_Write((MADCTL_MY | MADCTL_MV | MADCTL_RGB), DAT);
0x1044	0xE0B1    	LDI        R27, 1
0x1046	0x2E3B    	MOV        R3, R27
0x1048	0xEAB8    	LDI        R27, 168
0x104A	0x2E2B    	MOV        R2, R27
0x104C	0xD9AE    	RCALL      _ST7735_Write+0
;st7735.c,252 :: 		w = ST7735_TFTLENGTH;
0x104E	0xEAB0    	LDI        R27, 160
0x1050	0x010093B0  	STS        _w+0, R27
;st7735.c,253 :: 		l = ST7735_TFTWIDTH;
0x1054	0xE8B0    	LDI        R27, 128
0x1056	0x010193B0  	STS        _l+0, R27
;st7735.c,254 :: 		break;
0x105A	0xC020    	RJMP       L_Set_Rotation23
;st7735.c,256 :: 		case 2:
L_Set_Rotation26:
;st7735.c,258 :: 		ST7735_Write((MADCTL_RGB), DAT);
0x105C	0xE0B1    	LDI        R27, 1
0x105E	0x2E3B    	MOV        R3, R27
0x1060	0xE0B8    	LDI        R27, 8
0x1062	0x2E2B    	MOV        R2, R27
0x1064	0xD9A2    	RCALL      _ST7735_Write+0
;st7735.c,259 :: 		w = ST7735_TFTWIDTH;
0x1066	0xE8B0    	LDI        R27, 128
0x1068	0x010093B0  	STS        _w+0, R27
;st7735.c,260 :: 		l = ST7735_TFTLENGTH;
0x106C	0xEAB0    	LDI        R27, 160
0x106E	0x010193B0  	STS        _l+0, R27
;st7735.c,261 :: 		break;
0x1072	0xC014    	RJMP       L_Set_Rotation23
;st7735.c,263 :: 		case 3:
L_Set_Rotation27:
;st7735.c,265 :: 		ST7735_Write((MADCTL_MX | MADCTL_MV | MADCTL_RGB), DAT);
0x1074	0xE0B1    	LDI        R27, 1
0x1076	0x2E3B    	MOV        R3, R27
0x1078	0xE6B8    	LDI        R27, 104
0x107A	0x2E2B    	MOV        R2, R27
0x107C	0xD996    	RCALL      _ST7735_Write+0
;st7735.c,266 :: 		w = ST7735_TFTLENGTH;
0x107E	0xEAB0    	LDI        R27, 160
0x1080	0x010093B0  	STS        _w+0, R27
;st7735.c,267 :: 		l = ST7735_TFTWIDTH;
0x1084	0xE8B0    	LDI        R27, 128
0x1086	0x010193B0  	STS        _l+0, R27
;st7735.c,268 :: 		break;
0x108A	0xC008    	RJMP       L_Set_Rotation23
;st7735.c,270 :: 		}
L_Set_Rotation22:
; rotation start address is: 16 (R16)
0x108C	0x3000    	CPI        R16, 0
0x108E	0xF271    	BREQ       L_Set_Rotation24
L__Set_Rotation208:
0x1090	0x3001    	CPI        R16, 1
0x1092	0xF2C1    	BREQ       L_Set_Rotation25
L__Set_Rotation209:
0x1094	0x3002    	CPI        R16, 2
0x1096	0xF311    	BREQ       L_Set_Rotation26
L__Set_Rotation210:
0x1098	0x3003    	CPI        R16, 3
0x109A	0xF361    	BREQ       L_Set_Rotation27
L__Set_Rotation211:
; rotation end address is: 16 (R16)
L_Set_Rotation23:
;st7735.c,271 :: 		}
L_end_Set_Rotation:
0x109C	0x903F    	POP        R3
0x109E	0x902F    	POP        R2
0x10A0	0x9508    	RET
; end of _Set_Rotation
_TFT_fill:
;st7735.c,274 :: 		void TFT_fill(unsigned int colour)
;st7735.c,276 :: 		unsigned char i = 0x00;
0x1A10	0x924F    	PUSH       R4
0x1A12	0x925F    	PUSH       R5
;st7735.c,277 :: 		unsigned char j = 0x00;
;st7735.c,279 :: 		Set_Addr_Window(0, 0, (w - 1), (l - 1));
0x1A14	0x01019110  	LDS        R17, _l+0
0x1A18	0x5011    	SUBI       R17, 1
0x1A1A	0x01009100  	LDS        R16, _w+0
0x1A1E	0x5001    	SUBI       R16, 1
0x1A20	0x923F    	PUSH       R3
0x1A22	0x922F    	PUSH       R2
0x1A24	0x2E51    	MOV        R5, R17
0x1A26	0x2E40    	MOV        R4, R16
0x1A28	0x2433    	CLR        R3
0x1A2A	0x2422    	CLR        R2
0x1A2C	0xE4E7    	LDI        R30, lo_addr(_Set_Addr_Window)
0x1A2E	0xE0F0    	LDI        R31, hi_addr(_Set_Addr_Window+0)
0x1A30	0x9509    	ICALL
0x1A32	0x902F    	POP        R2
0x1A34	0x903F    	POP        R3
;st7735.c,281 :: 		for(j = l; j > 0; j--)
; j start address is: 17 (R17)
0x1A36	0x01019110  	LDS        R17, _l+0
; j end address is: 17 (R17)
L_TFT_fill28:
; j start address is: 17 (R17)
0x1A3A	0xE000    	LDI        R16, 0
0x1A3C	0x1701    	CP         R16, R17
0x1A3E	0xF4B8    	BRSH       L_TFT_fill29
L__TFT_fill213:
;st7735.c,283 :: 		for(i = w; i > 0; i--)
; i start address is: 16 (R16)
0x1A40	0x01009100  	LDS        R16, _w+0
; i end address is: 16 (R16)
; j end address is: 17 (R17)
0x1A44	0x2F20    	MOV        R18, R16
L_TFT_fill31:
; i start address is: 18 (R18)
; j start address is: 17 (R17)
0x1A46	0xE000    	LDI        R16, 0
0x1A48	0x1702    	CP         R16, R18
0x1A4A	0xF468    	BRSH       L_TFT_fill32
L__TFT_fill214:
;st7735.c,285 :: 		ST7735_Word_Write(colour);
0x1A4C	0x931F    	PUSH       R17
0x1A4E	0x923F    	PUSH       R3
0x1A50	0x922F    	PUSH       R2
0x1A52	0xEEEB    	LDI        R30, lo_addr(_ST7735_Word_Write)
0x1A54	0xE0F2    	LDI        R31, hi_addr(_ST7735_Word_Write+0)
0x1A56	0x9509    	ICALL
0x1A58	0x902F    	POP        R2
0x1A5A	0x903F    	POP        R3
0x1A5C	0x911F    	POP        R17
;st7735.c,283 :: 		for(i = w; i > 0; i--)
0x1A5E	0x2F02    	MOV        R16, R18
0x1A60	0x5001    	SUBI       R16, 1
0x1A62	0x2F20    	MOV        R18, R16
;st7735.c,286 :: 		}
; i end address is: 18 (R18)
0x1A64	0xCFF0    	RJMP       L_TFT_fill31
L_TFT_fill32:
;st7735.c,281 :: 		for(j = l; j > 0; j--)
0x1A66	0x2F01    	MOV        R16, R17
0x1A68	0x5001    	SUBI       R16, 1
0x1A6A	0x2F10    	MOV        R17, R16
;st7735.c,287 :: 		}
; j end address is: 17 (R17)
0x1A6C	0xCFE6    	RJMP       L_TFT_fill28
L_TFT_fill29:
;st7735.c,288 :: 		}
L_end_TFT_fill:
0x1A6E	0x905F    	POP        R5
0x1A70	0x904F    	POP        R4
0x1A72	0x9508    	RET
; end of _TFT_fill
_ST7735_Word_Write:
;st7735.c,162 :: 		void ST7735_Word_Write(unsigned int value)
;st7735.c,164 :: 		ST7735_Write(((value & 0xFF00) >> 0x08), DAT);
0x05D6	0x922F    	PUSH       R2
0x05D8	0x923F    	PUSH       R3
0x05DA	0x0181    	MOVW       R16, R2
0x05DC	0x7000    	ANDI       R16, 0
0x05DE	0x2F01    	MOV        R16, R17
0x05E0	0xE010    	LDI        R17, 0
0x05E2	0x923F    	PUSH       R3
0x05E4	0x922F    	PUSH       R2
0x05E6	0xE0B1    	LDI        R27, 1
0x05E8	0x2E3B    	MOV        R3, R27
0x05EA	0x2E20    	MOV        R2, R16
0x05EC	0xDEDE    	RCALL      _ST7735_Write+0
0x05EE	0x902F    	POP        R2
0x05F0	0x903F    	POP        R3
;st7735.c,165 :: 		ST7735_Write((value & 0x00FF), DAT);
0x05F2	0x2D02    	MOV        R16, R2
0x05F4	0xE0B1    	LDI        R27, 1
0x05F6	0x2E3B    	MOV        R3, R27
0x05F8	0x2E20    	MOV        R2, R16
0x05FA	0xDED7    	RCALL      _ST7735_Write+0
;st7735.c,166 :: 		}
L_end_ST7735_Word_Write:
0x05FC	0x903F    	POP        R3
0x05FE	0x902F    	POP        R2
0x0600	0x9508    	RET
; end of _ST7735_Word_Write
_Swap_Colour:
;st7735.c,221 :: 		unsigned int Swap_Colour(unsigned int colour)
;st7735.c,223 :: 		return ((colour << 0x000B) | (colour & 0x07E0) | (colour >> 0x000B));
0x1A74	0xE0BB    	LDI        R27, 11
0x1A76	0x0191    	MOVW       R18, R2
L__Swap_Colour202:
0x1A78	0x0F22    	LSL        R18
0x1A7A	0x1F33    	ROL        R19
0x1A7C	0x95BA    	DEC        R27
0x1A7E	0xF7E1    	BRNE       L__Swap_Colour202
L__Swap_Colour203:
0x1A80	0x0181    	MOVW       R16, R2
0x1A82	0x7E00    	ANDI       R16, 224
0x1A84	0x7017    	ANDI       R17, 7
0x1A86	0x2B20    	OR         R18, R16
0x1A88	0x2B31    	OR         R19, R17
0x1A8A	0xE0BB    	LDI        R27, 11
0x1A8C	0x0181    	MOVW       R16, R2
L__Swap_Colour204:
0x1A8E	0x9516    	LSR        R17
0x1A90	0x9507    	ROR        R16
0x1A92	0x95BA    	DEC        R27
0x1A94	0xF7E1    	BRNE       L__Swap_Colour204
L__Swap_Colour205:
0x1A96	0x2B02    	OR         R16, R18
0x1A98	0x2B13    	OR         R17, R19
;st7735.c,224 :: 		}
L_end_Swap_Colour:
0x1A9A	0x9508    	RET
; end of _Swap_Colour
_Draw_Circle:
0x1A9C	0x93CF    	PUSH       R28
0x1A9E	0x93DF    	PUSH       R29
0x1AA0	0xB7CD    	IN         R28, SPL+0
0x1AA2	0xB7DE    	IN         R29, SPL+1
0x1AA4	0x9722    	SBIW       R28, 2
0x1AA6	0xBFCD    	OUT        SPL+0, R28
0x1AA8	0xBFDE    	OUT        SPL+1, R29
0x1AAA	0x9621    	ADIW       R28, 1
;st7735.c,428 :: 		void Draw_Circle(signed int xc, signed int yc, signed int radius, unsigned char fill, unsigned int colour)
0x1AAC	0x929F    	PUSH       R9
; colour start address is: 18 (R18)
0x1AAE	0x812E    	LDD        R18, Y+6
0x1AB0	0x813F    	LDD        R19, Y+7
;st7735.c,430 :: 		signed int a = 0x0000;
; a start address is: 11 (R11)
0x1AB2	0x24BB    	CLR        R11
0x1AB4	0x24CC    	CLR        R12
;st7735.c,431 :: 		signed int b = 0x0000;
;st7735.c,432 :: 		signed int p = 0x0000;
;st7735.c,434 :: 		b = radius;
; b start address is: 24 (R24)
0x1AB6	0x01C3    	MOVW       R24, R6
;st7735.c,435 :: 		p = (1 - b);
0x1AB8	0xE001    	LDI        R16, 1
0x1ABA	0xE010    	LDI        R17, 0
0x1ABC	0x1906    	SUB        R16, R6
0x1ABE	0x0917    	SBC        R17, R7
0x1AC0	0x8308    	STD        Y+0, R16
0x1AC2	0x8319    	STD        Y+1, R17
; colour end address is: 18 (R18)
; b end address is: 24 (R24)
; a end address is: 11 (R11)
0x1AC4	0x01BC    	MOVW       R22, R24
0x1AC6	0x01C9    	MOVW       R24, R18
0x1AC8	0x2C9B    	MOV        R9, R11
0x1ACA	0x2CAC    	MOV        R10, R12
;st7735.c,437 :: 		do
0x1ACC	0xC002    	RJMP       L_Draw_Circle59
L__Draw_Circle154:
;st7735.c,466 :: 		}while(a <= b);
0x1ACE	0x2C9B    	MOV        R9, R11
0x1AD0	0x2CAC    	MOV        R10, R12
;st7735.c,437 :: 		do
L_Draw_Circle59:
;st7735.c,439 :: 		if(fill != NO)
; colour start address is: 24 (R24)
; b start address is: 22 (R22)
; a start address is: 9 (R9)
; colour start address is: 24 (R24)
; colour end address is: 24 (R24)
0x1AD2	0xE0B0    	LDI        R27, 0
0x1AD4	0x168B    	CP         R8, R27
0x1AD6	0xF409    	BRNE       L__Draw_Circle232
0x1AD8	0xC0C8    	RJMP       L_Draw_Circle62
L__Draw_Circle232:
; colour end address is: 24 (R24)
;st7735.c,441 :: 		Draw_Line((xc - a), (yc + b), (xc + a), (yc + b), colour);
; colour start address is: 24 (R24)
0x1ADA	0x01AB    	MOVW       R20, R22
0x1ADC	0x0D44    	ADD        R20, R4
0x1ADE	0x1D55    	ADC        R21, R5
0x1AE0	0x2D29    	MOV        R18, R9
0x1AE2	0x2D3A    	MOV        R19, R10
0x1AE4	0x0D22    	ADD        R18, R2
0x1AE6	0x1D33    	ADC        R19, R3
0x1AE8	0x0181    	MOVW       R16, R2
0x1AEA	0x1909    	SUB        R16, R9
0x1AEC	0x091A    	SBC        R17, R10
0x1AEE	0x939F    	PUSH       R25
0x1AF0	0x938F    	PUSH       R24
0x1AF2	0x92AF    	PUSH       R10
0x1AF4	0x929F    	PUSH       R9
0x1AF6	0x937F    	PUSH       R23
0x1AF8	0x936F    	PUSH       R22
0x1AFA	0x928F    	PUSH       R8
0x1AFC	0x927F    	PUSH       R7
0x1AFE	0x926F    	PUSH       R6
0x1B00	0x925F    	PUSH       R5
0x1B02	0x924F    	PUSH       R4
0x1B04	0x923F    	PUSH       R3
0x1B06	0x922F    	PUSH       R2
0x1B08	0x014A    	MOVW       R8, R20
0x1B0A	0x0139    	MOVW       R6, R18
0x1B0C	0x012A    	MOVW       R4, R20
0x1B0E	0x0118    	MOVW       R2, R16
0x1B10	0x939F    	PUSH       R25
0x1B12	0x938F    	PUSH       R24
0x1B14	0xEAE1    	LDI        R30, lo_addr(_Draw_Line)
0x1B16	0xE0F4    	LDI        R31, hi_addr(_Draw_Line+0)
0x1B18	0x9509    	ICALL
0x1B1A	0xB7AD    	IN         R26, SPL+0
0x1B1C	0xB7BE    	IN         R27, SPL+1
0x1B1E	0x9612    	ADIW       R26, 2
0x1B20	0xBFAD    	OUT        SPL+0, R26
0x1B22	0xBFBE    	OUT        SPL+1, R27
0x1B24	0x902F    	POP        R2
0x1B26	0x903F    	POP        R3
0x1B28	0x904F    	POP        R4
0x1B2A	0x905F    	POP        R5
0x1B2C	0x906F    	POP        R6
0x1B2E	0x907F    	POP        R7
0x1B30	0x908F    	POP        R8
0x1B32	0x916F    	POP        R22
0x1B34	0x917F    	POP        R23
0x1B36	0x909F    	POP        R9
0x1B38	0x90AF    	POP        R10
0x1B3A	0x918F    	POP        R24
0x1B3C	0x919F    	POP        R25
;st7735.c,442 :: 		Draw_Line((xc - a), (yc - b), (xc + a), (yc - b), colour);
0x1B3E	0x01A2    	MOVW       R20, R4
0x1B40	0x1B46    	SUB        R20, R22
0x1B42	0x0B57    	SBC        R21, R23
0x1B44	0x2D29    	MOV        R18, R9
0x1B46	0x2D3A    	MOV        R19, R10
0x1B48	0x0D22    	ADD        R18, R2
0x1B4A	0x1D33    	ADC        R19, R3
0x1B4C	0x0181    	MOVW       R16, R2
0x1B4E	0x1909    	SUB        R16, R9
0x1B50	0x091A    	SBC        R17, R10
0x1B52	0x939F    	PUSH       R25
0x1B54	0x938F    	PUSH       R24
0x1B56	0x92AF    	PUSH       R10
0x1B58	0x929F    	PUSH       R9
0x1B5A	0x937F    	PUSH       R23
0x1B5C	0x936F    	PUSH       R22
0x1B5E	0x928F    	PUSH       R8
0x1B60	0x927F    	PUSH       R7
0x1B62	0x926F    	PUSH       R6
0x1B64	0x925F    	PUSH       R5
0x1B66	0x924F    	PUSH       R4
0x1B68	0x923F    	PUSH       R3
0x1B6A	0x922F    	PUSH       R2
0x1B6C	0x014A    	MOVW       R8, R20
0x1B6E	0x0139    	MOVW       R6, R18
0x1B70	0x012A    	MOVW       R4, R20
0x1B72	0x0118    	MOVW       R2, R16
0x1B74	0x939F    	PUSH       R25
0x1B76	0x938F    	PUSH       R24
0x1B78	0xEAE1    	LDI        R30, lo_addr(_Draw_Line)
0x1B7A	0xE0F4    	LDI        R31, hi_addr(_Draw_Line+0)
0x1B7C	0x9509    	ICALL
0x1B7E	0xB7AD    	IN         R26, SPL+0
0x1B80	0xB7BE    	IN         R27, SPL+1
0x1B82	0x9612    	ADIW       R26, 2
0x1B84	0xBFAD    	OUT        SPL+0, R26
0x1B86	0xBFBE    	OUT        SPL+1, R27
0x1B88	0x902F    	POP        R2
0x1B8A	0x903F    	POP        R3
0x1B8C	0x904F    	POP        R4
0x1B8E	0x905F    	POP        R5
0x1B90	0x906F    	POP        R6
0x1B92	0x907F    	POP        R7
0x1B94	0x908F    	POP        R8
0x1B96	0x916F    	POP        R22
0x1B98	0x917F    	POP        R23
0x1B9A	0x909F    	POP        R9
0x1B9C	0x90AF    	POP        R10
0x1B9E	0x918F    	POP        R24
0x1BA0	0x919F    	POP        R25
;st7735.c,443 :: 		Draw_Line((xc - b), (yc + a), (xc + b), (yc + a), colour);
0x1BA2	0x2D49    	MOV        R20, R9
0x1BA4	0x2D5A    	MOV        R21, R10
0x1BA6	0x0D44    	ADD        R20, R4
0x1BA8	0x1D55    	ADC        R21, R5
0x1BAA	0x019B    	MOVW       R18, R22
0x1BAC	0x0D22    	ADD        R18, R2
0x1BAE	0x1D33    	ADC        R19, R3
0x1BB0	0x0181    	MOVW       R16, R2
0x1BB2	0x1B06    	SUB        R16, R22
0x1BB4	0x0B17    	SBC        R17, R23
0x1BB6	0x939F    	PUSH       R25
0x1BB8	0x938F    	PUSH       R24
0x1BBA	0x92AF    	PUSH       R10
0x1BBC	0x929F    	PUSH       R9
0x1BBE	0x937F    	PUSH       R23
0x1BC0	0x936F    	PUSH       R22
0x1BC2	0x928F    	PUSH       R8
0x1BC4	0x927F    	PUSH       R7
0x1BC6	0x926F    	PUSH       R6
0x1BC8	0x925F    	PUSH       R5
0x1BCA	0x924F    	PUSH       R4
0x1BCC	0x923F    	PUSH       R3
0x1BCE	0x922F    	PUSH       R2
0x1BD0	0x014A    	MOVW       R8, R20
0x1BD2	0x0139    	MOVW       R6, R18
0x1BD4	0x012A    	MOVW       R4, R20
0x1BD6	0x0118    	MOVW       R2, R16
0x1BD8	0x939F    	PUSH       R25
0x1BDA	0x938F    	PUSH       R24
0x1BDC	0xEAE1    	LDI        R30, lo_addr(_Draw_Line)
0x1BDE	0xE0F4    	LDI        R31, hi_addr(_Draw_Line+0)
0x1BE0	0x9509    	ICALL
0x1BE2	0xB7AD    	IN         R26, SPL+0
0x1BE4	0xB7BE    	IN         R27, SPL+1
0x1BE6	0x9612    	ADIW       R26, 2
0x1BE8	0xBFAD    	OUT        SPL+0, R26
0x1BEA	0xBFBE    	OUT        SPL+1, R27
0x1BEC	0x902F    	POP        R2
0x1BEE	0x903F    	POP        R3
0x1BF0	0x904F    	POP        R4
0x1BF2	0x905F    	POP        R5
0x1BF4	0x906F    	POP        R6
0x1BF6	0x907F    	POP        R7
0x1BF8	0x908F    	POP        R8
0x1BFA	0x916F    	POP        R22
0x1BFC	0x917F    	POP        R23
0x1BFE	0x909F    	POP        R9
0x1C00	0x90AF    	POP        R10
0x1C02	0x918F    	POP        R24
0x1C04	0x919F    	POP        R25
;st7735.c,444 :: 		Draw_Line((xc - b), (yc - a), (xc + b), (yc - a), colour);
0x1C06	0x01A2    	MOVW       R20, R4
0x1C08	0x1949    	SUB        R20, R9
0x1C0A	0x095A    	SBC        R21, R10
0x1C0C	0x019B    	MOVW       R18, R22
0x1C0E	0x0D22    	ADD        R18, R2
0x1C10	0x1D33    	ADC        R19, R3
0x1C12	0x0181    	MOVW       R16, R2
0x1C14	0x1B06    	SUB        R16, R22
0x1C16	0x0B17    	SBC        R17, R23
0x1C18	0x939F    	PUSH       R25
0x1C1A	0x938F    	PUSH       R24
0x1C1C	0x92AF    	PUSH       R10
0x1C1E	0x929F    	PUSH       R9
0x1C20	0x937F    	PUSH       R23
0x1C22	0x936F    	PUSH       R22
0x1C24	0x928F    	PUSH       R8
0x1C26	0x927F    	PUSH       R7
0x1C28	0x926F    	PUSH       R6
0x1C2A	0x925F    	PUSH       R5
0x1C2C	0x924F    	PUSH       R4
0x1C2E	0x923F    	PUSH       R3
0x1C30	0x922F    	PUSH       R2
0x1C32	0x014A    	MOVW       R8, R20
0x1C34	0x0139    	MOVW       R6, R18
0x1C36	0x012A    	MOVW       R4, R20
0x1C38	0x0118    	MOVW       R2, R16
0x1C3A	0x939F    	PUSH       R25
0x1C3C	0x938F    	PUSH       R24
0x1C3E	0xEAE1    	LDI        R30, lo_addr(_Draw_Line)
0x1C40	0xE0F4    	LDI        R31, hi_addr(_Draw_Line+0)
0x1C42	0x9509    	ICALL
0x1C44	0xB7AD    	IN         R26, SPL+0
0x1C46	0xB7BE    	IN         R27, SPL+1
0x1C48	0x9612    	ADIW       R26, 2
0x1C4A	0xBFAD    	OUT        SPL+0, R26
0x1C4C	0xBFBE    	OUT        SPL+1, R27
0x1C4E	0x902F    	POP        R2
0x1C50	0x903F    	POP        R3
0x1C52	0x904F    	POP        R4
0x1C54	0x905F    	POP        R5
0x1C56	0x906F    	POP        R6
0x1C58	0x907F    	POP        R7
0x1C5A	0x908F    	POP        R8
0x1C5C	0x916F    	POP        R22
0x1C5E	0x917F    	POP        R23
0x1C60	0x909F    	POP        R9
0x1C62	0x90AF    	POP        R10
0x1C64	0x918F    	POP        R24
0x1C66	0x919F    	POP        R25
;st7735.c,445 :: 		}
0x1C68	0xC090    	RJMP       L_Draw_Circle63
L_Draw_Circle62:
;st7735.c,448 :: 		Draw_Pixel((xc + a), (yc + b), colour);
0x1C6A	0x2D14    	MOV        R17, R4
0x1C6C	0x0F16    	ADD        R17, R22
0x1C6E	0x2D02    	MOV        R16, R2
0x1C70	0x0D09    	ADD        R16, R9
0x1C72	0x925F    	PUSH       R5
0x1C74	0x924F    	PUSH       R4
0x1C76	0x923F    	PUSH       R3
0x1C78	0x922F    	PUSH       R2
0x1C7A	0x012C    	MOVW       R4, R24
0x1C7C	0x2E31    	MOV        R3, R17
0x1C7E	0x2E20    	MOV        R2, R16
0x1C80	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x1C82	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x1C84	0x9509    	ICALL
0x1C86	0x902F    	POP        R2
0x1C88	0x903F    	POP        R3
0x1C8A	0x904F    	POP        R4
0x1C8C	0x905F    	POP        R5
;st7735.c,449 :: 		Draw_Pixel((xc + b), (yc + a), colour);
0x1C8E	0x2D14    	MOV        R17, R4
0x1C90	0x0D19    	ADD        R17, R9
0x1C92	0x2D02    	MOV        R16, R2
0x1C94	0x0F06    	ADD        R16, R22
0x1C96	0x925F    	PUSH       R5
0x1C98	0x924F    	PUSH       R4
0x1C9A	0x923F    	PUSH       R3
0x1C9C	0x922F    	PUSH       R2
0x1C9E	0x012C    	MOVW       R4, R24
0x1CA0	0x2E31    	MOV        R3, R17
0x1CA2	0x2E20    	MOV        R2, R16
0x1CA4	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x1CA6	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x1CA8	0x9509    	ICALL
0x1CAA	0x902F    	POP        R2
0x1CAC	0x903F    	POP        R3
0x1CAE	0x904F    	POP        R4
0x1CB0	0x905F    	POP        R5
;st7735.c,450 :: 		Draw_Pixel((xc - a), (yc + b), colour);
0x1CB2	0x2D14    	MOV        R17, R4
0x1CB4	0x0F16    	ADD        R17, R22
0x1CB6	0x2D02    	MOV        R16, R2
0x1CB8	0x1909    	SUB        R16, R9
0x1CBA	0x925F    	PUSH       R5
0x1CBC	0x924F    	PUSH       R4
0x1CBE	0x923F    	PUSH       R3
0x1CC0	0x922F    	PUSH       R2
0x1CC2	0x012C    	MOVW       R4, R24
0x1CC4	0x2E31    	MOV        R3, R17
0x1CC6	0x2E20    	MOV        R2, R16
0x1CC8	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x1CCA	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x1CCC	0x9509    	ICALL
0x1CCE	0x902F    	POP        R2
0x1CD0	0x903F    	POP        R3
0x1CD2	0x904F    	POP        R4
0x1CD4	0x905F    	POP        R5
;st7735.c,451 :: 		Draw_Pixel((xc - b), (yc + a), colour);
0x1CD6	0x2D14    	MOV        R17, R4
0x1CD8	0x0D19    	ADD        R17, R9
0x1CDA	0x2D02    	MOV        R16, R2
0x1CDC	0x1B06    	SUB        R16, R22
0x1CDE	0x925F    	PUSH       R5
0x1CE0	0x924F    	PUSH       R4
0x1CE2	0x923F    	PUSH       R3
0x1CE4	0x922F    	PUSH       R2
0x1CE6	0x012C    	MOVW       R4, R24
0x1CE8	0x2E31    	MOV        R3, R17
0x1CEA	0x2E20    	MOV        R2, R16
0x1CEC	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x1CEE	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x1CF0	0x9509    	ICALL
0x1CF2	0x902F    	POP        R2
0x1CF4	0x903F    	POP        R3
0x1CF6	0x904F    	POP        R4
0x1CF8	0x905F    	POP        R5
;st7735.c,452 :: 		Draw_Pixel((xc + b), (yc - a), colour);
0x1CFA	0x2D14    	MOV        R17, R4
0x1CFC	0x1919    	SUB        R17, R9
0x1CFE	0x2D02    	MOV        R16, R2
0x1D00	0x0F06    	ADD        R16, R22
0x1D02	0x925F    	PUSH       R5
0x1D04	0x924F    	PUSH       R4
0x1D06	0x923F    	PUSH       R3
0x1D08	0x922F    	PUSH       R2
0x1D0A	0x012C    	MOVW       R4, R24
0x1D0C	0x2E31    	MOV        R3, R17
0x1D0E	0x2E20    	MOV        R2, R16
0x1D10	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x1D12	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x1D14	0x9509    	ICALL
0x1D16	0x902F    	POP        R2
0x1D18	0x903F    	POP        R3
0x1D1A	0x904F    	POP        R4
0x1D1C	0x905F    	POP        R5
;st7735.c,453 :: 		Draw_Pixel((xc + a), (yc - b), colour);
0x1D1E	0x2D14    	MOV        R17, R4
0x1D20	0x1B16    	SUB        R17, R22
0x1D22	0x2D02    	MOV        R16, R2
0x1D24	0x0D09    	ADD        R16, R9
0x1D26	0x925F    	PUSH       R5
0x1D28	0x924F    	PUSH       R4
0x1D2A	0x923F    	PUSH       R3
0x1D2C	0x922F    	PUSH       R2
0x1D2E	0x012C    	MOVW       R4, R24
0x1D30	0x2E31    	MOV        R3, R17
0x1D32	0x2E20    	MOV        R2, R16
0x1D34	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x1D36	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x1D38	0x9509    	ICALL
0x1D3A	0x902F    	POP        R2
0x1D3C	0x903F    	POP        R3
0x1D3E	0x904F    	POP        R4
0x1D40	0x905F    	POP        R5
;st7735.c,454 :: 		Draw_Pixel((xc - a), (yc - b), colour);
0x1D42	0x2D14    	MOV        R17, R4
0x1D44	0x1B16    	SUB        R17, R22
0x1D46	0x2D02    	MOV        R16, R2
0x1D48	0x1909    	SUB        R16, R9
0x1D4A	0x925F    	PUSH       R5
0x1D4C	0x924F    	PUSH       R4
0x1D4E	0x923F    	PUSH       R3
0x1D50	0x922F    	PUSH       R2
0x1D52	0x012C    	MOVW       R4, R24
0x1D54	0x2E31    	MOV        R3, R17
0x1D56	0x2E20    	MOV        R2, R16
0x1D58	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x1D5A	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x1D5C	0x9509    	ICALL
0x1D5E	0x902F    	POP        R2
0x1D60	0x903F    	POP        R3
0x1D62	0x904F    	POP        R4
0x1D64	0x905F    	POP        R5
;st7735.c,455 :: 		Draw_Pixel((xc - b), (yc - a), colour);
0x1D66	0x2D14    	MOV        R17, R4
0x1D68	0x1919    	SUB        R17, R9
0x1D6A	0x2D02    	MOV        R16, R2
0x1D6C	0x1B06    	SUB        R16, R22
0x1D6E	0x925F    	PUSH       R5
0x1D70	0x924F    	PUSH       R4
0x1D72	0x923F    	PUSH       R3
0x1D74	0x922F    	PUSH       R2
0x1D76	0x012C    	MOVW       R4, R24
0x1D78	0x2E31    	MOV        R3, R17
0x1D7A	0x2E20    	MOV        R2, R16
0x1D7C	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x1D7E	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x1D80	0x9509    	ICALL
0x1D82	0x902F    	POP        R2
0x1D84	0x903F    	POP        R3
0x1D86	0x904F    	POP        R4
0x1D88	0x905F    	POP        R5
;st7735.c,456 :: 		}
L_Draw_Circle63:
;st7735.c,458 :: 		if(p < 0)
0x1D8A	0x8128    	LDD        R18, Y+0
0x1D8C	0x8139    	LDD        R19, Y+1
0x1D8E	0xE000    	LDI        R16, 0
0x1D90	0xE010    	LDI        R17, 0
0x1D92	0x1720    	CP         R18, R16
0x1D94	0x0731    	CPC        R19, R17
0x1D96	0xF4A4    	BRGE       L_Draw_Circle64
L__Draw_Circle233:
;st7735.c,460 :: 		p += (0x03 + (0x02 * a++));
0x1D98	0x2D09    	MOV        R16, R9
0x1D9A	0x2D1A    	MOV        R17, R10
0x1D9C	0x0F00    	LSL        R16
0x1D9E	0x1F11    	ROL        R17
0x1DA0	0x0198    	MOVW       R18, R16
0x1DA2	0x5F2D    	SUBI       R18, 253
0x1DA4	0x4F3F    	SBCI       R19, 255
0x1DA6	0x8108    	LDD        R16, Y+0
0x1DA8	0x8119    	LDD        R17, Y+1
0x1DAA	0x0F02    	ADD        R16, R18
0x1DAC	0x1F13    	ADC        R17, R19
0x1DAE	0x8308    	STD        Y+0, R16
0x1DB0	0x8319    	STD        Y+1, R17
0x1DB2	0x2D09    	MOV        R16, R9
0x1DB4	0x2D1A    	MOV        R17, R10
0x1DB6	0x5F0F    	SUBI       R16, 255
0x1DB8	0x4F1F    	SBCI       R17, 255
; a end address is: 9 (R9)
; a start address is: 11 (R11)
0x1DBA	0x2EB0    	MOV        R11, R16
0x1DBC	0x2EC1    	MOV        R12, R17
;st7735.c,461 :: 		}
; a end address is: 11 (R11)
0x1DBE	0xC019    	RJMP       L_Draw_Circle65
L_Draw_Circle64:
;st7735.c,464 :: 		p += (0x05 + (0x02 * ((a++) - (b--))));
; a start address is: 9 (R9)
0x1DC0	0x2D09    	MOV        R16, R9
0x1DC2	0x2D1A    	MOV        R17, R10
0x1DC4	0x1B06    	SUB        R16, R22
0x1DC6	0x0B17    	SBC        R17, R23
0x1DC8	0x0F00    	LSL        R16
0x1DCA	0x1F11    	ROL        R17
0x1DCC	0x0198    	MOVW       R18, R16
0x1DCE	0x5F2B    	SUBI       R18, 251
0x1DD0	0x4F3F    	SBCI       R19, 255
0x1DD2	0x8108    	LDD        R16, Y+0
0x1DD4	0x8119    	LDD        R17, Y+1
0x1DD6	0x0F02    	ADD        R16, R18
0x1DD8	0x1F13    	ADC        R17, R19
0x1DDA	0x8308    	STD        Y+0, R16
0x1DDC	0x8319    	STD        Y+1, R17
0x1DDE	0x2D09    	MOV        R16, R9
0x1DE0	0x2D1A    	MOV        R17, R10
0x1DE2	0x5F0F    	SUBI       R16, 255
0x1DE4	0x4F1F    	SBCI       R17, 255
; a end address is: 9 (R9)
; a start address is: 11 (R11)
0x1DE6	0x2EB0    	MOV        R11, R16
0x1DE8	0x2EC1    	MOV        R12, R17
0x1DEA	0x018B    	MOVW       R16, R22
0x1DEC	0x5001    	SUBI       R16, 1
0x1DEE	0x4010    	SBCI       R17, 0
0x1DF0	0x01B8    	MOVW       R22, R16
; b end address is: 22 (R22)
; a end address is: 11 (R11)
;st7735.c,465 :: 		}
L_Draw_Circle65:
;st7735.c,466 :: 		}while(a <= b);
; b start address is: 22 (R22)
; a start address is: 11 (R11)
0x1DF2	0x156B    	CP         R22, R11
0x1DF4	0x057C    	CPC        R23, R12
0x1DF6	0xF00C    	BRLT       L__Draw_Circle234
0x1DF8	0xCE6A    	RJMP       L__Draw_Circle154
L__Draw_Circle234:
; colour end address is: 24 (R24)
; b end address is: 22 (R22)
; a end address is: 11 (R11)
;st7735.c,467 :: 		}
L_end_Draw_Circle:
0x1DFA	0x909F    	POP        R9
0x1DFC	0x9621    	ADIW       R28, 1
0x1DFE	0xBFCD    	OUT        SPL+0, R28
0x1E00	0xBFDE    	OUT        SPL+1, R29
0x1E02	0x91DF    	POP        R29
0x1E04	0x91CF    	POP        R28
0x1E06	0x9508    	RET
; end of _Draw_Circle
_Draw_Line:
0x0942	0x93CF    	PUSH       R28
0x0944	0x93DF    	PUSH       R29
0x0946	0xB7CD    	IN         R28, SPL+0
0x0948	0xB7DE    	IN         R29, SPL+1
0x094A	0x9625    	ADIW       R28, 5
;st7735.c,298 :: 		void Draw_Line(signed int x1, signed int y1, signed int x2, signed int y2, unsigned int colour)
; colour start address is: 20 (R20)
0x094C	0x8148    	LDD        R20, Y+0
0x094E	0x8159    	LDD        R21, Y+1
;st7735.c,300 :: 		signed int dx = 0x0000;
;st7735.c,301 :: 		signed int dy = 0x0000;
;st7735.c,302 :: 		signed int stepx = 0x0000;
;st7735.c,303 :: 		signed int stepy = 0x0000;
;st7735.c,304 :: 		signed int fraction = 0x0000;
;st7735.c,306 :: 		dy = (y2 - y1);
0x0950	0x0194    	MOVW       R18, R8
0x0952	0x1924    	SUB        R18, R4
0x0954	0x0935    	SBC        R19, R5
; dy start address is: 12 (R12)
0x0956	0x0169    	MOVW       R12, R18
;st7735.c,307 :: 		dx = (x2 - x1);
0x0958	0x0183    	MOVW       R16, R6
0x095A	0x1902    	SUB        R16, R2
0x095C	0x0913    	SBC        R17, R3
; dx start address is: 22 (R22)
0x095E	0x01B8    	MOVW       R22, R16
;st7735.c,309 :: 		if (dy < 0)
0x0960	0xE000    	LDI        R16, 0
0x0962	0xE010    	LDI        R17, 0
0x0964	0x1720    	CP         R18, R16
0x0966	0x0731    	CPC        R19, R17
0x0968	0xF444    	BRGE       L_Draw_Line34
L__Draw_Line217:
;st7735.c,311 :: 		dy = -dy;
0x096A	0xE000    	LDI        R16, 0
0x096C	0xE010    	LDI        R17, 0
0x096E	0x190C    	SUB        R16, R12
0x0970	0x091D    	SBC        R17, R13
0x0972	0x0168    	MOVW       R12, R16
;st7735.c,312 :: 		stepy = -1;
; stepy start address is: 18 (R18)
0x0974	0xEF2F    	LDI        R18, 255
0x0976	0xEF3F    	LDI        R19, 255
;st7735.c,313 :: 		}
; stepy end address is: 18 (R18)
0x0978	0xC002    	RJMP       L_Draw_Line35
L_Draw_Line34:
;st7735.c,316 :: 		stepy = 1;
; stepy start address is: 18 (R18)
0x097A	0xE021    	LDI        R18, 1
0x097C	0xE030    	LDI        R19, 0
; stepy end address is: 18 (R18)
; dy end address is: 12 (R12)
;st7735.c,317 :: 		}
L_Draw_Line35:
;st7735.c,319 :: 		if (dx < 0)
; stepy start address is: 18 (R18)
; dy start address is: 12 (R12)
0x097E	0xE000    	LDI        R16, 0
0x0980	0xE010    	LDI        R17, 0
0x0982	0x1760    	CP         R22, R16
0x0984	0x0771    	CPC        R23, R17
0x0986	0xF44C    	BRGE       L_Draw_Line36
L__Draw_Line218:
;st7735.c,321 :: 		dx = -dx;
0x0988	0xE000    	LDI        R16, 0
0x098A	0xE010    	LDI        R17, 0
0x098C	0x1B06    	SUB        R16, R22
0x098E	0x0B17    	SBC        R17, R23
0x0990	0x01B8    	MOVW       R22, R16
;st7735.c,322 :: 		stepx = -1;
; stepx start address is: 10 (R10)
0x0992	0xEFBF    	LDI        R27, 255
0x0994	0x2EAB    	MOV        R10, R27
0x0996	0x2EBB    	MOV        R11, R27
;st7735.c,323 :: 		}
; stepx end address is: 10 (R10)
0x0998	0xC004    	RJMP       L_Draw_Line37
L_Draw_Line36:
;st7735.c,326 :: 		stepx = 1;
; stepx start address is: 10 (R10)
0x099A	0xE0B1    	LDI        R27, 1
0x099C	0x2EAB    	MOV        R10, R27
0x099E	0xE0B0    	LDI        R27, 0
0x09A0	0x2EBB    	MOV        R11, R27
; stepx end address is: 10 (R10)
; dx end address is: 22 (R22)
;st7735.c,327 :: 		}
L_Draw_Line37:
;st7735.c,329 :: 		dx <<= 0x01;
; stepx start address is: 10 (R10)
; dx start address is: 22 (R22)
0x09A2	0x018B    	MOVW       R16, R22
0x09A4	0x0F00    	LSL        R16
0x09A6	0x1F11    	ROL        R17
; dx end address is: 22 (R22)
; dx start address is: 24 (R24)
0x09A8	0x01C8    	MOVW       R24, R16
;st7735.c,330 :: 		dy <<= 0x01;
0x09AA	0x0186    	MOVW       R16, R12
0x09AC	0x0F00    	LSL        R16
0x09AE	0x1F11    	ROL        R17
; dy end address is: 12 (R12)
; dy start address is: 22 (R22)
0x09B0	0x01B8    	MOVW       R22, R16
;st7735.c,332 :: 		Draw_Pixel(x1, y1, colour);
0x09B2	0x925F    	PUSH       R5
0x09B4	0x924F    	PUSH       R4
0x09B6	0x923F    	PUSH       R3
0x09B8	0x922F    	PUSH       R2
0x09BA	0x2C34    	MOV        R3, R4
0x09BC	0x012A    	MOVW       R4, R20
0x09BE	0xDD5F    	RCALL      _Draw_Pixel+0
0x09C0	0x902F    	POP        R2
0x09C2	0x903F    	POP        R3
0x09C4	0x904F    	POP        R4
0x09C6	0x905F    	POP        R5
;st7735.c,334 :: 		if (dx > dy)
0x09C8	0x1768    	CP         R22, R24
0x09CA	0x0779    	CPC        R23, R25
0x09CC	0xF00C    	BRLT       L__Draw_Line219
0x09CE	0xC030    	RJMP       L_Draw_Line38
L__Draw_Line219:
;st7735.c,336 :: 		fraction = (dy - (dx >> 1));
0x09D0	0x018C    	MOVW       R16, R24
0x09D2	0x9515    	ASR        R17
0x09D4	0x9507    	ROR        R16
0x09D6	0x0108    	MOVW       R0, R16
0x09D8	0x018B    	MOVW       R16, R22
0x09DA	0x1900    	SUB        R16, R0
0x09DC	0x0911    	SBC        R17, R1
; fraction start address is: 12 (R12)
0x09DE	0x0168    	MOVW       R12, R16
; stepy end address is: 18 (R18)
; fraction end address is: 12 (R12)
0x09E0	0x0179    	MOVW       R14, R18
;st7735.c,337 :: 		while (x1 != x2)
L_Draw_Line39:
; fraction start address is: 12 (R12)
; stepy start address is: 14 (R14)
; dy start address is: 22 (R22)
; dy end address is: 22 (R22)
; dx start address is: 24 (R24)
; dx end address is: 24 (R24)
; stepx start address is: 10 (R10)
; stepx end address is: 10 (R10)
; stepy start address is: 14 (R14)
; stepy end address is: 14 (R14)
; colour start address is: 20 (R20)
; colour end address is: 20 (R20)
0x09E2	0x1426    	CP         R2, R6
0x09E4	0x0437    	CPC        R3, R7
0x09E6	0xF119    	BREQ       L_Draw_Line40
L__Draw_Line220:
; dy end address is: 22 (R22)
; dx end address is: 24 (R24)
; stepx end address is: 10 (R10)
; stepy end address is: 14 (R14)
; colour end address is: 20 (R20)
;st7735.c,339 :: 		if (fraction >= 0)
; colour start address is: 20 (R20)
; stepy start address is: 14 (R14)
; stepx start address is: 10 (R10)
; dx start address is: 24 (R24)
; dy start address is: 22 (R22)
0x09E8	0xE000    	LDI        R16, 0
0x09EA	0xE010    	LDI        R17, 0
0x09EC	0x16C0    	CP         R12, R16
0x09EE	0x06D1    	CPC        R13, R17
0x09F0	0xF04C    	BRLT       L__Draw_Line152
L__Draw_Line221:
;st7735.c,341 :: 		y1 += stepy;
0x09F2	0x0187    	MOVW       R16, R14
0x09F4	0x0D04    	ADD        R16, R4
0x09F6	0x1D15    	ADC        R17, R5
0x09F8	0x0128    	MOVW       R4, R16
;st7735.c,342 :: 		fraction -= dx;
0x09FA	0x0186    	MOVW       R16, R12
0x09FC	0x1B08    	SUB        R16, R24
0x09FE	0x0B19    	SBC        R17, R25
0x0A00	0x0168    	MOVW       R12, R16
; fraction end address is: 12 (R12)
;st7735.c,343 :: 		}
0x0A02	0xC000    	RJMP       L_Draw_Line41
L__Draw_Line152:
;st7735.c,339 :: 		if (fraction >= 0)
;st7735.c,343 :: 		}
L_Draw_Line41:
;st7735.c,344 :: 		x1 += stepx;
; fraction start address is: 12 (R12)
0x0A04	0x0195    	MOVW       R18, R10
0x0A06	0x0D22    	ADD        R18, R2
0x0A08	0x1D33    	ADC        R19, R3
0x0A0A	0x0119    	MOVW       R2, R18
;st7735.c,345 :: 		fraction += dy;
0x0A0C	0x018B    	MOVW       R16, R22
0x0A0E	0x0D0C    	ADD        R16, R12
0x0A10	0x1D1D    	ADC        R17, R13
0x0A12	0x0168    	MOVW       R12, R16
;st7735.c,347 :: 		Draw_Pixel(x1, y1, colour);
0x0A14	0x925F    	PUSH       R5
0x0A16	0x924F    	PUSH       R4
0x0A18	0x923F    	PUSH       R3
0x0A1A	0x922F    	PUSH       R2
0x0A1C	0x2C34    	MOV        R3, R4
0x0A1E	0x012A    	MOVW       R4, R20
0x0A20	0x2E22    	MOV        R2, R18
0x0A22	0xDD2D    	RCALL      _Draw_Pixel+0
0x0A24	0x902F    	POP        R2
0x0A26	0x903F    	POP        R3
0x0A28	0x904F    	POP        R4
0x0A2A	0x905F    	POP        R5
;st7735.c,348 :: 		}
; dy end address is: 22 (R22)
; dx end address is: 24 (R24)
; stepx end address is: 10 (R10)
; stepy end address is: 14 (R14)
; colour end address is: 20 (R20)
; fraction end address is: 12 (R12)
0x0A2C	0xCFDA    	RJMP       L_Draw_Line39
L_Draw_Line40:
;st7735.c,349 :: 		}
0x0A2E	0xC03B    	RJMP       L_Draw_Line42
L_Draw_Line38:
;st7735.c,352 :: 		fraction = (dx - (dy >> 1));
; colour start address is: 20 (R20)
; stepx start address is: 10 (R10)
; dx start address is: 24 (R24)
; dy start address is: 22 (R22)
; stepy start address is: 18 (R18)
0x0A30	0x018B    	MOVW       R16, R22
0x0A32	0x9515    	ASR        R17
0x0A34	0x9507    	ROR        R16
0x0A36	0x0108    	MOVW       R0, R16
0x0A38	0x018C    	MOVW       R16, R24
0x0A3A	0x1900    	SUB        R16, R0
0x0A3C	0x0911    	SBC        R17, R1
; fraction start address is: 12 (R12)
0x0A3E	0x0168    	MOVW       R12, R16
; stepy end address is: 18 (R18)
; dy end address is: 22 (R22)
; dx end address is: 24 (R24)
; stepx end address is: 10 (R10)
; colour end address is: 20 (R20)
; fraction end address is: 12 (R12)
0x0A40	0x937F    	PUSH       R23
0x0A42	0x936F    	PUSH       R22
0x0A44	0x01BC    	MOVW       R22, R24
0x0A46	0x01C5    	MOVW       R24, R10
0x0A48	0x0159    	MOVW       R10, R18
0x0A4A	0x0196    	MOVW       R18, R12
0x0A4C	0x016A    	MOVW       R12, R20
0x0A4E	0x914F    	POP        R20
0x0A50	0x915F    	POP        R21
;st7735.c,354 :: 		while (y1 != y2)
L_Draw_Line43:
; colour start address is: 12 (R12)
; stepy start address is: 10 (R10)
; stepx start address is: 24 (R24)
; dx start address is: 22 (R22)
; dy start address is: 20 (R20)
; fraction start address is: 18 (R18)
; dy start address is: 20 (R20)
; dy end address is: 20 (R20)
; dx start address is: 22 (R22)
; dx end address is: 22 (R22)
; stepx start address is: 24 (R24)
; stepx end address is: 24 (R24)
; stepy start address is: 10 (R10)
; stepy end address is: 10 (R10)
; colour start address is: 12 (R12)
; colour end address is: 12 (R12)
0x0A52	0x1448    	CP         R4, R8
0x0A54	0x0459    	CPC        R5, R9
0x0A56	0xF139    	BREQ       L_Draw_Line44
L__Draw_Line222:
; dy end address is: 20 (R20)
; dx end address is: 22 (R22)
; stepx end address is: 24 (R24)
; stepy end address is: 10 (R10)
; colour end address is: 12 (R12)
;st7735.c,356 :: 		if (fraction >= 0)
; colour start address is: 12 (R12)
; stepy start address is: 10 (R10)
; stepx start address is: 24 (R24)
; dx start address is: 22 (R22)
; dy start address is: 20 (R20)
0x0A58	0xE000    	LDI        R16, 0
0x0A5A	0xE010    	LDI        R17, 0
0x0A5C	0x1720    	CP         R18, R16
0x0A5E	0x0731    	CPC        R19, R17
0x0A60	0xF04C    	BRLT       L__Draw_Line153
L__Draw_Line223:
;st7735.c,358 :: 		x1 += stepx;
0x0A62	0x018C    	MOVW       R16, R24
0x0A64	0x0D02    	ADD        R16, R2
0x0A66	0x1D13    	ADC        R17, R3
0x0A68	0x0118    	MOVW       R2, R16
;st7735.c,359 :: 		fraction -= dy;
0x0A6A	0x0189    	MOVW       R16, R18
0x0A6C	0x1B04    	SUB        R16, R20
0x0A6E	0x0B15    	SBC        R17, R21
; fraction end address is: 18 (R18)
; fraction start address is: 14 (R14)
0x0A70	0x0178    	MOVW       R14, R16
; fraction end address is: 14 (R14)
;st7735.c,360 :: 		}
0x0A72	0xC001    	RJMP       L_Draw_Line45
L__Draw_Line153:
;st7735.c,356 :: 		if (fraction >= 0)
0x0A74	0x0179    	MOVW       R14, R18
;st7735.c,360 :: 		}
L_Draw_Line45:
;st7735.c,361 :: 		y1 += stepy;
; fraction start address is: 14 (R14)
0x0A76	0x0195    	MOVW       R18, R10
0x0A78	0x0D24    	ADD        R18, R4
0x0A7A	0x1D35    	ADC        R19, R5
0x0A7C	0x0129    	MOVW       R4, R18
;st7735.c,362 :: 		fraction += dx;
0x0A7E	0x018B    	MOVW       R16, R22
0x0A80	0x0D0E    	ADD        R16, R14
0x0A82	0x1D1F    	ADC        R17, R15
; fraction end address is: 14 (R14)
; fraction start address is: 16 (R16)
;st7735.c,363 :: 		Draw_Pixel(x1, y1, colour);
0x0A84	0x931F    	PUSH       R17
0x0A86	0x930F    	PUSH       R16
0x0A88	0x925F    	PUSH       R5
0x0A8A	0x924F    	PUSH       R4
0x0A8C	0x923F    	PUSH       R3
0x0A8E	0x922F    	PUSH       R2
0x0A90	0x0126    	MOVW       R4, R12
0x0A92	0x2E32    	MOV        R3, R18
0x0A94	0xDCF4    	RCALL      _Draw_Pixel+0
0x0A96	0x902F    	POP        R2
0x0A98	0x903F    	POP        R3
0x0A9A	0x904F    	POP        R4
0x0A9C	0x905F    	POP        R5
0x0A9E	0x910F    	POP        R16
0x0AA0	0x911F    	POP        R17
;st7735.c,364 :: 		}
; dy end address is: 20 (R20)
; dx end address is: 22 (R22)
; stepx end address is: 24 (R24)
; stepy end address is: 10 (R10)
; colour end address is: 12 (R12)
; fraction end address is: 16 (R16)
0x0AA2	0x0198    	MOVW       R18, R16
0x0AA4	0xCFD6    	RJMP       L_Draw_Line43
L_Draw_Line44:
;st7735.c,365 :: 		}
L_Draw_Line42:
;st7735.c,366 :: 		}
L_end_Draw_Line:
0x0AA6	0x91DF    	POP        R29
0x0AA8	0x91CF    	POP        R28
0x0AAA	0x9508    	RET
; end of _Draw_Line
_Draw_Pixel:
;st7735.c,291 :: 		void Draw_Pixel(unsigned char x_pos, unsigned char y_pos, unsigned int colour)
;st7735.c,293 :: 		Set_Addr_Window(x_pos, y_pos, (1 + x_pos), (1 + y_pos));
0x047E	0x922F    	PUSH       R2
0x0480	0x923F    	PUSH       R3
0x0482	0x2D13    	MOV        R17, R3
0x0484	0x5F1F    	SUBI       R17, 255
0x0486	0x2D02    	MOV        R16, R2
0x0488	0x5F0F    	SUBI       R16, 255
0x048A	0x925F    	PUSH       R5
0x048C	0x924F    	PUSH       R4
0x048E	0x2E51    	MOV        R5, R17
0x0490	0x2E40    	MOV        R4, R16
0x0492	0xDDFD    	RCALL      _Set_Addr_Window+0
0x0494	0x904F    	POP        R4
0x0496	0x905F    	POP        R5
;st7735.c,294 :: 		ST7735_Word_Write(colour);
0x0498	0x0112    	MOVW       R2, R4
0x049A	0xD09D    	RCALL      _ST7735_Word_Write+0
;st7735.c,295 :: 		}
L_end_Draw_Pixel:
0x049C	0x903F    	POP        R3
0x049E	0x902F    	POP        R2
0x04A0	0x9508    	RET
; end of _Draw_Pixel
_Draw_Rectangle:
0x1424	0x93CF    	PUSH       R28
0x1426	0x93DF    	PUSH       R29
0x1428	0xB7CD    	IN         R28, SPL+0
0x142A	0xB7DE    	IN         R29, SPL+1
0x142C	0x9722    	SBIW       R28, 2
0x142E	0xBFCD    	OUT        SPL+0, R28
0x1430	0xBFDE    	OUT        SPL+1, R29
0x1432	0x9621    	ADIW       R28, 1
;st7735.c,369 :: 		void Draw_Rectangle(signed int x1, signed int y1, signed int x2, signed int y2, unsigned char fill, unsigned char type, unsigned int colour, unsigned int back_colour)
; fill start address is: 18 (R18)
0x1434	0x812E    	LDD        R18, Y+6
0x1436	0x810F    	LDD        R16, Y+7
0x1438	0x830F    	STD        Y+7, R16
0x143A	0x8508    	LDD        R16, Y+8
0x143C	0x8519    	LDD        R17, Y+9
0x143E	0x8708    	STD        Y+8, R16
0x1440	0x8719    	STD        Y+9, R17
0x1442	0x850A    	LDD        R16, Y+10
0x1444	0x851B    	LDD        R17, Y+11
0x1446	0x870A    	STD        Y+10, R16
0x1448	0x871B    	STD        Y+11, R17
;st7735.c,371 :: 		unsigned char i = 0x00;
;st7735.c,372 :: 		unsigned char xmin = 0x00;
;st7735.c,373 :: 		unsigned char xmax = 0x00;
;st7735.c,374 :: 		unsigned char ymin = 0x00;
;st7735.c,375 :: 		unsigned char ymax = 0x00;
;st7735.c,377 :: 		if(fill != NO)
0x144A	0x3020    	CPI        R18, 0
0x144C	0xF409    	BRNE       L__Draw_Rectangle225
0x144E	0xC03A    	RJMP       L_Draw_Rectangle46
L__Draw_Rectangle225:
; fill end address is: 18 (R18)
;st7735.c,379 :: 		if(x1 < x2)
0x1450	0x1426    	CP         R2, R6
0x1452	0x0437    	CPC        R3, R7
0x1454	0xF42C    	BRGE       L_Draw_Rectangle47
L__Draw_Rectangle226:
;st7735.c,381 :: 		xmin = x1;
; xmin start address is: 22 (R22)
0x1456	0x2D62    	MOV        R22, R2
;st7735.c,382 :: 		xmax = x2;
; xmax start address is: 21 (R21)
0x1458	0x2D56    	MOV        R21, R6
;st7735.c,383 :: 		}
0x145A	0x2F46    	MOV        R20, R22
; xmin end address is: 22 (R22)
; xmax end address is: 21 (R21)
0x145C	0x2F85    	MOV        R24, R21
0x145E	0xC004    	RJMP       L_Draw_Rectangle48
L_Draw_Rectangle47:
;st7735.c,386 :: 		xmin = x2;
; xmin start address is: 22 (R22)
0x1460	0x2D66    	MOV        R22, R6
;st7735.c,387 :: 		xmax = x1;
; xmax start address is: 21 (R21)
0x1462	0x2D52    	MOV        R21, R2
; xmin end address is: 22 (R22)
; xmax end address is: 21 (R21)
0x1464	0x2F46    	MOV        R20, R22
0x1466	0x2F85    	MOV        R24, R21
;st7735.c,388 :: 		}
L_Draw_Rectangle48:
;st7735.c,390 :: 		if(y1 < y2)
; xmax start address is: 24 (R24)
; xmin start address is: 20 (R20)
0x1468	0x1448    	CP         R4, R8
0x146A	0x0459    	CPC        R5, R9
0x146C	0xF41C    	BRGE       L_Draw_Rectangle49
L__Draw_Rectangle227:
;st7735.c,392 :: 		ymin = y1;
0x146E	0x8248    	STD        Y+0, R4
;st7735.c,393 :: 		ymax = y2;
0x1470	0x8289    	STD        Y+1, R8
;st7735.c,394 :: 		}
0x1472	0xC002    	RJMP       L_Draw_Rectangle50
L_Draw_Rectangle49:
;st7735.c,397 :: 		ymin = y2;
0x1474	0x8288    	STD        Y+0, R8
;st7735.c,398 :: 		ymax = y1;
0x1476	0x8249    	STD        Y+1, R4
;st7735.c,399 :: 		}
L_Draw_Rectangle50:
;st7735.c,401 :: 		for(; xmin <= xmax; ++xmin)
0x1478	0x2F08    	MOV        R16, R24
; xmin end address is: 20 (R20)
; xmax end address is: 24 (R24)
0x147A	0x2FA4    	MOV        R26, R20
L_Draw_Rectangle51:
; xmin start address is: 26 (R26)
; xmax start address is: 16 (R16)
0x147C	0x170A    	CP         R16, R26
0x147E	0xF108    	BRLO       L_Draw_Rectangle52
L__Draw_Rectangle228:
;st7735.c,403 :: 		for(i = ymin; i <= ymax; ++i)
; i start address is: 18 (R18)
0x1480	0x8128    	LDD        R18, Y+0
; xmax end address is: 16 (R16)
; i end address is: 18 (R18)
; xmin end address is: 26 (R26)
0x1482	0x2F80    	MOV        R24, R16
0x1484	0x2F12    	MOV        R17, R18
L_Draw_Rectangle54:
; i start address is: 17 (R17)
; xmax start address is: 24 (R24)
; xmin start address is: 26 (R26)
0x1486	0x8109    	LDD        R16, Y+1
0x1488	0x1701    	CP         R16, R17
0x148A	0xF0B0    	BRLO       L_Draw_Rectangle55
L__Draw_Rectangle229:
;st7735.c,405 :: 		Draw_Pixel(xmin, i, colour);
0x148C	0x931F    	PUSH       R17
0x148E	0x925F    	PUSH       R5
0x1490	0x924F    	PUSH       R4
0x1492	0x923F    	PUSH       R3
0x1494	0x922F    	PUSH       R2
0x1496	0x8448    	LDD        R4, Y+8
0x1498	0x8459    	LDD        R5, Y+9
0x149A	0x2E31    	MOV        R3, R17
0x149C	0x2E2A    	MOV        R2, R26
0x149E	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x14A0	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x14A2	0x9509    	ICALL
0x14A4	0x902F    	POP        R2
0x14A6	0x903F    	POP        R3
0x14A8	0x904F    	POP        R4
0x14AA	0x905F    	POP        R5
0x14AC	0x911F    	POP        R17
;st7735.c,403 :: 		for(i = ymin; i <= ymax; ++i)
0x14AE	0x2F01    	MOV        R16, R17
0x14B0	0x5F0F    	SUBI       R16, 255
; i end address is: 17 (R17)
; i start address is: 18 (R18)
0x14B2	0x2F20    	MOV        R18, R16
;st7735.c,406 :: 		}
; i end address is: 18 (R18)
0x14B4	0x2F12    	MOV        R17, R18
0x14B6	0xCFE7    	RJMP       L_Draw_Rectangle54
L_Draw_Rectangle55:
;st7735.c,401 :: 		for(; xmin <= xmax; ++xmin)
0x14B8	0x2F0A    	MOV        R16, R26
0x14BA	0x5F0F    	SUBI       R16, 255
0x14BC	0x2FA0    	MOV        R26, R16
;st7735.c,407 :: 		}
0x14BE	0x2F08    	MOV        R16, R24
; xmax end address is: 24 (R24)
; xmin end address is: 26 (R26)
0x14C0	0xCFDD    	RJMP       L_Draw_Rectangle51
L_Draw_Rectangle52:
;st7735.c,408 :: 		}
0x14C2	0xC054    	RJMP       L_Draw_Rectangle57
L_Draw_Rectangle46:
;st7735.c,412 :: 		Draw_Line(x1, y1, x2, y1, colour);
0x14C4	0x929F    	PUSH       R9
0x14C6	0x928F    	PUSH       R8
0x14C8	0x925F    	PUSH       R5
0x14CA	0x924F    	PUSH       R4
0x14CC	0x923F    	PUSH       R3
0x14CE	0x922F    	PUSH       R2
0x14D0	0x0142    	MOVW       R8, R4
0x14D2	0x8508    	LDD        R16, Y+8
0x14D4	0x8519    	LDD        R17, Y+9
0x14D6	0x931F    	PUSH       R17
0x14D8	0x930F    	PUSH       R16
0x14DA	0xDA33    	RCALL      _Draw_Line+0
0x14DC	0xB7AD    	IN         R26, SPL+0
0x14DE	0xB7BE    	IN         R27, SPL+1
0x14E0	0x9612    	ADIW       R26, 2
0x14E2	0xBFAD    	OUT        SPL+0, R26
0x14E4	0xBFBE    	OUT        SPL+1, R27
0x14E6	0x902F    	POP        R2
0x14E8	0x903F    	POP        R3
0x14EA	0x904F    	POP        R4
0x14EC	0x905F    	POP        R5
0x14EE	0x908F    	POP        R8
0x14F0	0x909F    	POP        R9
;st7735.c,413 :: 		Draw_Line(x1, y2, x2, y2, colour);
0x14F2	0x925F    	PUSH       R5
0x14F4	0x924F    	PUSH       R4
0x14F6	0x923F    	PUSH       R3
0x14F8	0x922F    	PUSH       R2
0x14FA	0x0124    	MOVW       R4, R8
0x14FC	0x8508    	LDD        R16, Y+8
0x14FE	0x8519    	LDD        R17, Y+9
0x1500	0x931F    	PUSH       R17
0x1502	0x930F    	PUSH       R16
0x1504	0xDA1E    	RCALL      _Draw_Line+0
0x1506	0xB7AD    	IN         R26, SPL+0
0x1508	0xB7BE    	IN         R27, SPL+1
0x150A	0x9612    	ADIW       R26, 2
0x150C	0xBFAD    	OUT        SPL+0, R26
0x150E	0xBFBE    	OUT        SPL+1, R27
0x1510	0x902F    	POP        R2
0x1512	0x903F    	POP        R3
0x1514	0x904F    	POP        R4
0x1516	0x905F    	POP        R5
;st7735.c,414 :: 		Draw_Line(x1, y1, x1, y2, colour);
0x1518	0x927F    	PUSH       R7
0x151A	0x926F    	PUSH       R6
0x151C	0x925F    	PUSH       R5
0x151E	0x924F    	PUSH       R4
0x1520	0x923F    	PUSH       R3
0x1522	0x922F    	PUSH       R2
0x1524	0x0131    	MOVW       R6, R2
0x1526	0x8508    	LDD        R16, Y+8
0x1528	0x8519    	LDD        R17, Y+9
0x152A	0x931F    	PUSH       R17
0x152C	0x930F    	PUSH       R16
0x152E	0xDA09    	RCALL      _Draw_Line+0
0x1530	0xB7AD    	IN         R26, SPL+0
0x1532	0xB7BE    	IN         R27, SPL+1
0x1534	0x9612    	ADIW       R26, 2
0x1536	0xBFAD    	OUT        SPL+0, R26
0x1538	0xBFBE    	OUT        SPL+1, R27
0x153A	0x902F    	POP        R2
0x153C	0x903F    	POP        R3
0x153E	0x904F    	POP        R4
0x1540	0x905F    	POP        R5
0x1542	0x906F    	POP        R6
0x1544	0x907F    	POP        R7
;st7735.c,415 :: 		Draw_Line(x2, y1, x2, y2, colour);
0x1546	0x925F    	PUSH       R5
0x1548	0x924F    	PUSH       R4
0x154A	0x923F    	PUSH       R3
0x154C	0x922F    	PUSH       R2
0x154E	0x0113    	MOVW       R2, R6
0x1550	0x8508    	LDD        R16, Y+8
0x1552	0x8519    	LDD        R17, Y+9
0x1554	0x931F    	PUSH       R17
0x1556	0x930F    	PUSH       R16
0x1558	0xD9F4    	RCALL      _Draw_Line+0
0x155A	0xB7AD    	IN         R26, SPL+0
0x155C	0xB7BE    	IN         R27, SPL+1
0x155E	0x9612    	ADIW       R26, 2
0x1560	0xBFAD    	OUT        SPL+0, R26
0x1562	0xBFBE    	OUT        SPL+1, R27
0x1564	0x902F    	POP        R2
0x1566	0x903F    	POP        R3
0x1568	0x904F    	POP        R4
0x156A	0x905F    	POP        R5
;st7735.c,416 :: 		}
L_Draw_Rectangle57:
;st7735.c,418 :: 		if(type != SQUARE)
0x156C	0x810F    	LDD        R16, Y+7
0x156E	0x3000    	CPI        R16, 0
0x1570	0xF171    	BREQ       L_Draw_Rectangle58
L__Draw_Rectangle230:
;st7735.c,420 :: 		Draw_Pixel(x1, y1, back_colour);
0x1572	0x925F    	PUSH       R5
0x1574	0x924F    	PUSH       R4
0x1576	0x923F    	PUSH       R3
0x1578	0x922F    	PUSH       R2
0x157A	0x2C34    	MOV        R3, R4
0x157C	0x844A    	LDD        R4, Y+10
0x157E	0x845B    	LDD        R5, Y+11
0x1580	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x1582	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x1584	0x9509    	ICALL
0x1586	0x902F    	POP        R2
0x1588	0x903F    	POP        R3
;st7735.c,421 :: 		Draw_Pixel(x1, y2, back_colour);
0x158A	0x923F    	PUSH       R3
0x158C	0x922F    	PUSH       R2
0x158E	0x844A    	LDD        R4, Y+10
0x1590	0x845B    	LDD        R5, Y+11
0x1592	0x2C38    	MOV        R3, R8
0x1594	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x1596	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x1598	0x9509    	ICALL
0x159A	0x902F    	POP        R2
0x159C	0x903F    	POP        R3
0x159E	0x904F    	POP        R4
0x15A0	0x905F    	POP        R5
;st7735.c,422 :: 		Draw_Pixel(x2, y1, back_colour);
0x15A2	0x925F    	PUSH       R5
0x15A4	0x924F    	PUSH       R4
0x15A6	0x923F    	PUSH       R3
0x15A8	0x922F    	PUSH       R2
0x15AA	0x2C34    	MOV        R3, R4
0x15AC	0x844A    	LDD        R4, Y+10
0x15AE	0x845B    	LDD        R5, Y+11
0x15B0	0x2C26    	MOV        R2, R6
0x15B2	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x15B4	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x15B6	0x9509    	ICALL
;st7735.c,423 :: 		Draw_Pixel(x2, y2, back_colour);
0x15B8	0x844A    	LDD        R4, Y+10
0x15BA	0x845B    	LDD        R5, Y+11
0x15BC	0x2C38    	MOV        R3, R8
0x15BE	0x2C26    	MOV        R2, R6
0x15C0	0xE3EF    	LDI        R30, lo_addr(_Draw_Pixel)
0x15C2	0xE0F2    	LDI        R31, hi_addr(_Draw_Pixel+0)
0x15C4	0x9509    	ICALL
0x15C6	0x902F    	POP        R2
0x15C8	0x903F    	POP        R3
0x15CA	0x904F    	POP        R4
0x15CC	0x905F    	POP        R5
;st7735.c,424 :: 		}
L_Draw_Rectangle58:
;st7735.c,425 :: 		}
L_end_Draw_Rectangle:
0x15CE	0x9621    	ADIW       R28, 1
0x15D0	0xBFCD    	OUT        SPL+0, R28
0x15D2	0xBFDE    	OUT        SPL+1, R29
0x15D4	0x91DF    	POP        R29
0x15D6	0x91CF    	POP        R28
0x15D8	0x9508    	RET
; end of _Draw_Rectangle
_print_str:
0x15DA	0x93CF    	PUSH       R28
0x15DC	0x93DF    	PUSH       R29
0x15DE	0xB7CD    	IN         R28, SPL+0
0x15E0	0xB7DE    	IN         R29, SPL+1
0x15E2	0x9625    	ADIW       R28, 5
;st7735.c,532 :: 		void print_str(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, char *ch)
0x15E4	0x929F    	PUSH       R9
; ch start address is: 19 (R19)
; ch start address is: 19 (R19)
0x15E6	0x8138    	LDD        R19, Y+0
0x15E8	0x8149    	LDD        R20, Y+1
; ch end address is: 19 (R19)
;st7735.c,534 :: 		do
L_print_str80:
;st7735.c,536 :: 		print_char(x_pos, y_pos, font_size, colour, back_colour, *ch++);
; ch start address is: 19 (R19)
0x15EA	0x2FE3    	MOV        R30, R19
0x15EC	0x2FF4    	MOV        R31, R20
0x15EE	0x8100    	LD         R16, Z
0x15F0	0x934F    	PUSH       R20
0x15F2	0x933F    	PUSH       R19
0x15F4	0x924F    	PUSH       R4
0x15F6	0x923F    	PUSH       R3
0x15F8	0x922F    	PUSH       R2
0x15FA	0x2E90    	MOV        R9, R16
0x15FC	0xE7E9    	LDI        R30, lo_addr(_print_char)
0x15FE	0xE0F2    	LDI        R31, hi_addr(_print_char+0)
0x1600	0x9509    	ICALL
0x1602	0x902F    	POP        R2
0x1604	0x903F    	POP        R3
0x1606	0x904F    	POP        R4
0x1608	0x913F    	POP        R19
0x160A	0x914F    	POP        R20
0x160C	0x2F13    	MOV        R17, R19
0x160E	0x2F24    	MOV        R18, R20
0x1610	0x5F1F    	SUBI       R17, 255
0x1612	0x4F2F    	SBCI       R18, 255
0x1614	0x2F31    	MOV        R19, R17
0x1616	0x2F42    	MOV        R20, R18
; ch end address is: 19 (R19)
;st7735.c,537 :: 		x_pos += (font_size * 0x06);
0x1618	0xE006    	LDI        R16, 6
0x161A	0x9E40    	MUL        R4, R16
0x161C	0x2D00    	MOV        R16, R0
0x161E	0x0D02    	ADD        R16, R2
0x1620	0x2E20    	MOV        R2, R16
;st7735.c,538 :: 		}while((*ch >= 0x20) && (*ch <= 0x7F));
0x1622	0x2FE1    	MOV        R30, R17
0x1624	0x2FF2    	MOV        R31, R18
0x1626	0x8100    	LD         R16, Z
0x1628	0x3200    	CPI        R16, 32
0x162A	0xF038    	BRLO       L__print_str157
L__print_str246:
; ch end address is: 19 (R19)
; ch start address is: 19 (R19)
0x162C	0x2FE3    	MOV        R30, R19
0x162E	0x2FF4    	MOV        R31, R20
0x1630	0x8110    	LD         R17, Z
0x1632	0xE70F    	LDI        R16, 127
0x1634	0x1701    	CP         R16, R17
0x1636	0xF008    	BRLO       L__print_str156
L__print_str247:
; ch end address is: 19 (R19)
0x1638	0xCFD8    	RJMP       L_print_str80
L__print_str157:
L__print_str156:
;st7735.c,539 :: 		}
L_end_print_str:
0x163A	0x909F    	POP        R9
0x163C	0x91DF    	POP        R29
0x163E	0x91CF    	POP        R28
0x1640	0x9508    	RET
; end of _print_str
_print_char:
;st7735.c,483 :: 		void print_char(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, char ch)
;st7735.c,485 :: 		unsigned char i = 0x00;
;st7735.c,486 :: 		unsigned char j = 0x00;
;st7735.c,488 :: 		unsigned char value = 0x00;
;st7735.c,490 :: 		if(font_size < 0)
0x04F2	0xE0B0    	LDI        R27, 0
0x04F4	0x164B    	CP         R4, R27
0x04F6	0xF410    	BRSH       L_print_char69
L__print_char238:
;st7735.c,492 :: 		font_size = 1;
0x04F8	0xE0B1    	LDI        R27, 1
0x04FA	0x2E4B    	MOV        R4, R27
;st7735.c,493 :: 		}
L_print_char69:
;st7735.c,495 :: 		if(x_pos < font_size)
0x04FC	0x1424    	CP         R2, R4
0x04FE	0xF408    	BRSH       L_print_char70
L__print_char239:
;st7735.c,497 :: 		x_pos = font_size;
0x0500	0x2C24    	MOV        R2, R4
;st7735.c,498 :: 		}
L_print_char70:
;st7735.c,500 :: 		for (i = 0x00; i < 0x05; i++)
; i start address is: 20 (R20)
0x0502	0xE040    	LDI        R20, 0
; i end address is: 20 (R20)
L_print_char71:
; i start address is: 20 (R20)
0x0504	0x3045    	CPI        R20, 5
0x0506	0xF008    	BRLO       L__print_char240
0x0508	0xC055    	RJMP       L_print_char72
L__print_char240:
;st7735.c,502 :: 		for (j = 0x00; j < 0x08; j++)
; j start address is: 21 (R21)
0x050A	0xE050    	LDI        R21, 0
; j end address is: 21 (R21)
; i end address is: 20 (R20)
L_print_char74:
; j start address is: 21 (R21)
; i start address is: 20 (R20)
0x050C	0x3058    	CPI        R21, 8
0x050E	0xF008    	BRLO       L__print_char241
0x0510	0xC042    	RJMP       L_print_char75
L__print_char241:
;st7735.c,505 :: 		value = ((font[((unsigned char)ch) - 0x20][i]));
0x0512	0x2D09    	MOV        R16, R9
0x0514	0xE010    	LDI        R17, 0
0x0516	0x5200    	SUBI       R16, 32
0x0518	0x4010    	SBCI       R17, 0
0x051A	0x934F    	PUSH       R20
0x051C	0x935F    	PUSH       R21
0x051E	0xE045    	LDI        R20, 5
0x0520	0xE050    	LDI        R21, 0
0x0522	0xDEBB    	RCALL      _HWMul_16x16+0
0x0524	0x915F    	POP        R21
0x0526	0x914F    	POP        R20
0x0528	0xE720    	LDI        R18, lo_addr(TFT_display_demo_font+0)
0x052A	0xE232    	LDI        R19, hi_addr(TFT_display_demo_font+0)
0x052C	0x0F02    	ADD        R16, R18
0x052E	0x1F13    	ADC        R17, R19
0x0530	0x2FE4    	MOV        R30, R20
0x0532	0xE0F0    	LDI        R31, 0
0x0534	0x0FE0    	ADD        R30, R16
0x0536	0x1FF1    	ADC        R31, R17
0x0538	0x9104    	LPM        R16, Z
;st7735.c,507 :: 		if((value >> j)  & 0x01)
0x053A	0x2FB5    	MOV        R27, R21
0x053C	0x23BB    	TST        R27
0x053E	0xF019    	BREQ       L__print_char243
L__print_char242:
0x0540	0x9506    	LSR        R16
0x0542	0x95BA    	DEC        R27
0x0544	0xF7E9    	BRNE       L__print_char242
L__print_char243:
0x0546	0xFF00    	SBRS       R16, 0
0x0548	0xC011    	RJMP       L_print_char77
;st7735.c,509 :: 		Draw_Font_Pixel(x_pos, y_pos, colour, font_size);
0x054A	0x934F    	PUSH       R20
0x054C	0x926F    	PUSH       R6
0x054E	0x925F    	PUSH       R5
0x0550	0x924F    	PUSH       R4
0x0552	0x922F    	PUSH       R2
0x0554	0x926F    	PUSH       R6
0x0556	0x925F    	PUSH       R5
0x0558	0x2C64    	MOV        R6, R4
0x055A	0x904F    	POP        R4
0x055C	0x905F    	POP        R5
0x055E	0xDE67    	RCALL      _Draw_Font_Pixel+0
0x0560	0x902F    	POP        R2
0x0562	0x904F    	POP        R4
0x0564	0x905F    	POP        R5
0x0566	0x906F    	POP        R6
0x0568	0x914F    	POP        R20
;st7735.c,510 :: 		}
0x056A	0xC00E    	RJMP       L_print_char78
L_print_char77:
;st7735.c,513 :: 		Draw_Font_Pixel(x_pos, y_pos, back_colour, font_size);
0x056C	0x934F    	PUSH       R20
0x056E	0x926F    	PUSH       R6
0x0570	0x925F    	PUSH       R5
0x0572	0x924F    	PUSH       R4
0x0574	0x922F    	PUSH       R2
0x0576	0x2C64    	MOV        R6, R4
0x0578	0x2C47    	MOV        R4, R7
0x057A	0x2C58    	MOV        R5, R8
0x057C	0xDE58    	RCALL      _Draw_Font_Pixel+0
0x057E	0x902F    	POP        R2
0x0580	0x904F    	POP        R4
0x0582	0x905F    	POP        R5
0x0584	0x906F    	POP        R6
0x0586	0x914F    	POP        R20
;st7735.c,514 :: 		}
L_print_char78:
;st7735.c,516 :: 		y_pos = y_pos + font_size;
0x0588	0x2D03    	MOV        R16, R3
0x058A	0x0D04    	ADD        R16, R4
0x058C	0x2E30    	MOV        R3, R16
;st7735.c,502 :: 		for (j = 0x00; j < 0x08; j++)
0x058E	0x2F05    	MOV        R16, R21
0x0590	0x5F0F    	SUBI       R16, 255
0x0592	0x2F50    	MOV        R21, R16
;st7735.c,517 :: 		}
; j end address is: 21 (R21)
0x0594	0xCFBB    	RJMP       L_print_char74
L_print_char75:
;st7735.c,518 :: 		y_pos -= (font_size << 0x03);
0x0596	0x2D04    	MOV        R16, R4
0x0598	0x0F00    	LSL        R16
0x059A	0x0F00    	LSL        R16
0x059C	0x0F00    	LSL        R16
0x059E	0x2E00    	MOV        R0, R16
0x05A0	0x2D03    	MOV        R16, R3
0x05A2	0x1900    	SUB        R16, R0
0x05A4	0x2E30    	MOV        R3, R16
;st7735.c,519 :: 		x_pos += font_size;
0x05A6	0x2D02    	MOV        R16, R2
0x05A8	0x0D04    	ADD        R16, R4
0x05AA	0x2E20    	MOV        R2, R16
;st7735.c,500 :: 		for (i = 0x00; i < 0x05; i++)
0x05AC	0x2F04    	MOV        R16, R20
0x05AE	0x5F0F    	SUBI       R16, 255
0x05B0	0x2F40    	MOV        R20, R16
;st7735.c,521 :: 		}
; i end address is: 20 (R20)
0x05B2	0xCFA8    	RJMP       L_print_char71
L_print_char72:
;st7735.c,522 :: 		x_pos += font_size;
0x05B4	0x2D12    	MOV        R17, R2
0x05B6	0x0D14    	ADD        R17, R4
0x05B8	0x2E21    	MOV        R2, R17
;st7735.c,524 :: 		if(x_pos > w)
0x05BA	0x01009100  	LDS        R16, _w+0
0x05BE	0x1701    	CP         R16, R17
0x05C0	0xF448    	BRSH       L_print_char79
L__print_char244:
;st7735.c,526 :: 		x_pos = (font_size + 0x01);
0x05C2	0x2D04    	MOV        R16, R4
0x05C4	0x5F0F    	SUBI       R16, 255
0x05C6	0x2E20    	MOV        R2, R16
;st7735.c,527 :: 		y_pos += (font_size << 0x03);
0x05C8	0x2D04    	MOV        R16, R4
0x05CA	0x0F00    	LSL        R16
0x05CC	0x0F00    	LSL        R16
0x05CE	0x0F00    	LSL        R16
0x05D0	0x0D03    	ADD        R16, R3
0x05D2	0x2E30    	MOV        R3, R16
;st7735.c,528 :: 		}
L_print_char79:
;st7735.c,529 :: 		}
L_end_print_char:
0x05D4	0x9508    	RET
; end of _print_char
_Draw_Font_Pixel:
;st7735.c,470 :: 		void Draw_Font_Pixel(unsigned char x_pos, unsigned char y_pos, unsigned int colour, unsigned char pixel_size)
;st7735.c,472 :: 		unsigned char i = 0x00;
;st7735.c,474 :: 		Set_Addr_Window(x_pos, y_pos, (x_pos + pixel_size - 1), (y_pos + pixel_size - 1));
0x022E	0x2D03    	MOV        R16, R3
0x0230	0x0D06    	ADD        R16, R6
0x0232	0x2F10    	MOV        R17, R16
0x0234	0x5011    	SUBI       R17, 1
0x0236	0x2D02    	MOV        R16, R2
0x0238	0x0D06    	ADD        R16, R6
0x023A	0x5001    	SUBI       R16, 1
0x023C	0x925F    	PUSH       R5
0x023E	0x924F    	PUSH       R4
0x0240	0x2E51    	MOV        R5, R17
0x0242	0x2E40    	MOV        R4, R16
0x0244	0xDF24    	RCALL      _Set_Addr_Window+0
0x0246	0x904F    	POP        R4
0x0248	0x905F    	POP        R5
;st7735.c,476 :: 		for(i = 0x00; i < (pixel_size * pixel_size); i++)
; i start address is: 20 (R20)
0x024A	0xE040    	LDI        R20, 0
; i end address is: 20 (R20)
L_Draw_Font_Pixel66:
; i start address is: 20 (R20)
0x024C	0x9C66    	MUL        R6, R6
0x024E	0x0190    	MOVW       R18, R0
0x0250	0x2F04    	MOV        R16, R20
0x0252	0xE010    	LDI        R17, 0
0x0254	0x1702    	CP         R16, R18
0x0256	0x0713    	CPC        R17, R19
0x0258	0xF454    	BRGE       L_Draw_Font_Pixel67
L__Draw_Font_Pixel236:
;st7735.c,478 :: 		ST7735_Word_Write(colour);
0x025A	0x923F    	PUSH       R3
0x025C	0x922F    	PUSH       R2
0x025E	0x0112    	MOVW       R2, R4
0x0260	0xD1BA    	RCALL      _ST7735_Word_Write+0
0x0262	0x902F    	POP        R2
0x0264	0x903F    	POP        R3
;st7735.c,476 :: 		for(i = 0x00; i < (pixel_size * pixel_size); i++)
0x0266	0x2F04    	MOV        R16, R20
0x0268	0x5F0F    	SUBI       R16, 255
0x026A	0x2F40    	MOV        R20, R16
;st7735.c,479 :: 		}
; i end address is: 20 (R20)
0x026C	0xCFEF    	RJMP       L_Draw_Font_Pixel66
L_Draw_Font_Pixel67:
;st7735.c,480 :: 		}
L_end_Draw_Font_Pixel:
0x026E	0x9508    	RET
; end of _Draw_Font_Pixel
_HWMul_16x16:
;__Lib_Math.c,398 :: 		
;__Lib_Math.c,400 :: 		
0x029A	0x0198    	MOVW       R18, R16
;__Lib_Math.c,401 :: 		
0x029C	0x9F24    	MUL        R18, R20
;__Lib_Math.c,402 :: 		
0x029E	0x0180    	MOVW       R16, R0
;__Lib_Math.c,403 :: 		
0x02A0	0x9F25    	MUL        R18, R21
;__Lib_Math.c,404 :: 		
0x02A2	0x0D10    	ADD        R17, R0
;__Lib_Math.c,405 :: 		
0x02A4	0x9F34    	MUL        R19, R20
;__Lib_Math.c,406 :: 		
0x02A6	0x0D10    	ADD        R17, R0
;__Lib_Math.c,408 :: 		
L_end_HWMul_16x16:
0x02A8	0x9508    	RET
; end of _HWMul_16x16
_print_F:
0x1642	0x93CF    	PUSH       R28
0x1644	0x93DF    	PUSH       R29
0x1646	0xB7CD    	IN         R28, SPL+0
0x1648	0xB7DE    	IN         R29, SPL+1
0x164A	0x9728    	SBIW       R28, 8
0x164C	0xBFCD    	OUT        SPL+0, R28
0x164E	0xBFDE    	OUT        SPL+1, R29
0x1650	0x9621    	ADIW       R28, 1
;st7735.c,665 :: 		void print_F(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, float value, unsigned char points)
0x1652	0x922F    	PUSH       R2
0x1654	0x929F    	PUSH       R9
0x1656	0x850C    	LDD        R16, Y+12
0x1658	0x851D    	LDD        R17, Y+13
0x165A	0x852E    	LDD        R18, Y+14
0x165C	0x853F    	LDD        R19, Y+15
0x165E	0x870C    	STD        Y+12, R16
0x1660	0x871D    	STD        Y+13, R17
0x1662	0x872E    	STD        Y+14, R18
0x1664	0x873F    	STD        Y+15, R19
;st7735.c,667 :: 		signed long tmp = 0x0000;
;st7735.c,669 :: 		tmp = value;
0x1666	0x850C    	LDD        R16, Y+12
0x1668	0x851D    	LDD        R17, Y+13
0x166A	0x852E    	LDD        R18, Y+14
0x166C	0x853F    	LDD        R19, Y+15
0x166E	0xDA1E    	RCALL      _float_fpint+0
0x1670	0x8308    	STD        Y+0, R16
0x1672	0x8319    	STD        Y+1, R17
0x1674	0x832A    	STD        Y+2, R18
0x1676	0x833B    	STD        Y+3, R19
;st7735.c,670 :: 		print_I(x_pos, y_pos, font_size, colour, back_colour, tmp);
0x1678	0x929F    	PUSH       R9
0x167A	0x928F    	PUSH       R8
0x167C	0x927F    	PUSH       R7
0x167E	0x926F    	PUSH       R6
0x1680	0x925F    	PUSH       R5
0x1682	0x924F    	PUSH       R4
0x1684	0x923F    	PUSH       R3
0x1686	0x922F    	PUSH       R2
0x1688	0x931F    	PUSH       R17
0x168A	0x930F    	PUSH       R16
0x168C	0xDAB0    	RCALL      _print_I+0
0x168E	0xB7AD    	IN         R26, SPL+0
0x1690	0xB7BE    	IN         R27, SPL+1
0x1692	0x9612    	ADIW       R26, 2
0x1694	0xBFAD    	OUT        SPL+0, R26
0x1696	0xBFBE    	OUT        SPL+1, R27
0x1698	0x902F    	POP        R2
0x169A	0x903F    	POP        R3
0x169C	0x904F    	POP        R4
0x169E	0x905F    	POP        R5
0x16A0	0x906F    	POP        R6
;st7735.c,671 :: 		tmp = ((value - tmp) * 10000);
0x16A2	0x8108    	LDD        R16, Y+0
0x16A4	0x8119    	LDD        R17, Y+1
0x16A6	0x812A    	LDD        R18, Y+2
0x16A8	0x813B    	LDD        R19, Y+3
0x16AA	0xE7E6    	LDI        R30, lo_addr(_float_slong2fp)
0x16AC	0xE0F2    	LDI        R31, hi_addr(_float_slong2fp+0)
0x16AE	0x9509    	ICALL
0x16B0	0x830C    	STD        Y+4, R16
0x16B2	0x831D    	STD        Y+5, R17
0x16B4	0x832E    	STD        Y+6, R18
0x16B6	0x833F    	STD        Y+7, R19
0x16B8	0x923F    	PUSH       R3
0x16BA	0x922F    	PUSH       R2
0x16BC	0x814C    	LDD        R20, Y+4
0x16BE	0x815D    	LDD        R21, Y+5
0x16C0	0x816E    	LDD        R22, Y+6
0x16C2	0x817F    	LDD        R23, Y+7
0x16C4	0x850C    	LDD        R16, Y+12
0x16C6	0x851D    	LDD        R17, Y+13
0x16C8	0x852E    	LDD        R18, Y+14
0x16CA	0x853F    	LDD        R19, Y+15
0x16CC	0xE5E1    	LDI        R30, lo_addr(_float_fpsub1)
0x16CE	0xE0F2    	LDI        R31, hi_addr(_float_fpsub1+0)
0x16D0	0x9509    	ICALL
0x16D2	0xE040    	LDI        R20, 0
0x16D4	0xE450    	LDI        R21, 64
0x16D6	0xE16C    	LDI        R22, 28
0x16D8	0xE476    	LDI        R23, 70
0x16DA	0xE6EC    	LDI        R30, lo_addr(_float_fpmul1)
0x16DC	0xE0F2    	LDI        R31, hi_addr(_float_fpmul1+0)
0x16DE	0x9509    	ICALL
0x16E0	0x902F    	POP        R2
0x16E2	0x903F    	POP        R3
0x16E4	0x907F    	POP        R7
0x16E6	0x908F    	POP        R8
0x16E8	0x909F    	POP        R9
0x16EA	0xD9E0    	RCALL      _float_fpint+0
0x16EC	0x8308    	STD        Y+0, R16
0x16EE	0x8319    	STD        Y+1, R17
0x16F0	0x832A    	STD        Y+2, R18
0x16F2	0x833B    	STD        Y+3, R19
;st7735.c,673 :: 		if(tmp < 0)
0x16F4	0xE040    	LDI        R20, 0
0x16F6	0xE050    	LDI        R21, 0
0x16F8	0xE060    	LDI        R22, 0
0x16FA	0xE070    	LDI        R23, 0
0x16FC	0x1704    	CP         R16, R20
0x16FE	0x0715    	CPC        R17, R21
0x1700	0x0726    	CPC        R18, R22
0x1702	0x0737    	CPC        R19, R23
0x1704	0xF484    	BRGE       L_print_F117
L__print_F270:
;st7735.c,675 :: 		tmp = -tmp;
0x1706	0x8008    	LDD        R0, Y+0
0x1708	0x8019    	LDD        R1, Y+1
0x170A	0xE000    	LDI        R16, 0
0x170C	0xE010    	LDI        R17, 0
0x170E	0x1900    	SUB        R16, R0
0x1710	0x0911    	SBC        R17, R1
0x1712	0x800A    	LDD        R0, Y+2
0x1714	0x801B    	LDD        R1, Y+3
0x1716	0xE020    	LDI        R18, 0
0x1718	0xE030    	LDI        R19, 0
0x171A	0x0920    	SBC        R18, R0
0x171C	0x0931    	SBC        R19, R1
0x171E	0x8308    	STD        Y+0, R16
0x1720	0x8319    	STD        Y+1, R17
0x1722	0x832A    	STD        Y+2, R18
0x1724	0x833B    	STD        Y+3, R19
;st7735.c,676 :: 		}
L_print_F117:
;st7735.c,678 :: 		if((value >= 9999) && (value < 99999))
0x1726	0x929F    	PUSH       R9
0x1728	0x928F    	PUSH       R8
0x172A	0x927F    	PUSH       R7
0x172C	0x923F    	PUSH       R3
0x172E	0x922F    	PUSH       R2
0x1730	0xE040    	LDI        R20, 0
0x1732	0xE35C    	LDI        R21, 60
0x1734	0xE16C    	LDI        R22, 28
0x1736	0xE476    	LDI        R23, 70
0x1738	0x850C    	LDD        R16, Y+12
0x173A	0x851D    	LDD        R17, Y+13
0x173C	0x852E    	LDD        R18, Y+14
0x173E	0x853F    	LDD        R19, Y+15
0x1740	0xE6E5    	LDI        R30, lo_addr(_float_op_gequ)
0x1742	0xE0F2    	LDI        R31, hi_addr(_float_op_gequ+0)
0x1744	0x9509    	ICALL
0x1746	0x2800    	OR         R0, R0
0x1748	0xE000    	LDI        R16, 0
0x174A	0xF009    	BREQ       L__print_F271
0x174C	0xE001    	LDI        R16, 1
L__print_F271:
0x174E	0x902F    	POP        R2
0x1750	0x903F    	POP        R3
0x1752	0x907F    	POP        R7
0x1754	0x908F    	POP        R8
0x1756	0x909F    	POP        R9
0x1758	0x2300    	TST        R16
0x175A	0xF159    	BREQ       L__print_F181
L__print_F272:
0x175C	0x929F    	PUSH       R9
0x175E	0x928F    	PUSH       R8
0x1760	0x927F    	PUSH       R7
0x1762	0x923F    	PUSH       R3
0x1764	0x922F    	PUSH       R2
0x1766	0xE840    	LDI        R20, 128
0x1768	0xE45F    	LDI        R21, 79
0x176A	0xEC63    	LDI        R22, 195
0x176C	0xE477    	LDI        R23, 71
0x176E	0x850C    	LDD        R16, Y+12
0x1770	0x851D    	LDD        R17, Y+13
0x1772	0x852E    	LDD        R18, Y+14
0x1774	0x853F    	LDD        R19, Y+15
0x1776	0xE5EE    	LDI        R30, lo_addr(_float_op_less)
0x1778	0xE0F2    	LDI        R31, hi_addr(_float_op_less+0)
0x177A	0x9509    	ICALL
0x177C	0x2800    	OR         R0, R0
0x177E	0xE000    	LDI        R16, 0
0x1780	0xF009    	BREQ       L__print_F273
0x1782	0xE001    	LDI        R16, 1
L__print_F273:
0x1784	0x902F    	POP        R2
0x1786	0x903F    	POP        R3
0x1788	0x907F    	POP        R7
0x178A	0x908F    	POP        R8
0x178C	0x909F    	POP        R9
0x178E	0x2300    	TST        R16
0x1790	0xF081    	BREQ       L__print_F180
L__print_F274:
L__print_F179:
;st7735.c,680 :: 		print_D((x_pos + (0x24 * font_size)), y_pos, font_size, colour, back_colour, tmp, points);
0x1792	0xE204    	LDI        R16, 36
0x1794	0x9D04    	MUL        R16, R4
0x1796	0x2D00    	MOV        R16, R0
0x1798	0x0D02    	ADD        R16, R2
0x179A	0x2E20    	MOV        R2, R16
0x179C	0x8108    	LDD        R16, Y+0
0x179E	0x8119    	LDD        R17, Y+1
0x17A0	0x931F    	PUSH       R17
0x17A2	0x930F    	PUSH       R16
0x17A4	0xD9A7    	RCALL      _print_D+0
0x17A6	0xB7AD    	IN         R26, SPL+0
0x17A8	0xB7BE    	IN         R27, SPL+1
0x17AA	0x9612    	ADIW       R26, 2
0x17AC	0xBFAD    	OUT        SPL+0, R26
0x17AE	0xBFBE    	OUT        SPL+1, R27
;st7735.c,681 :: 		}
0x17B0	0xC127    	RJMP       L_print_F121
;st7735.c,678 :: 		if((value >= 9999) && (value < 99999))
L__print_F181:
L__print_F180:
;st7735.c,682 :: 		else if((value >= 999) && (value < 9999))
0x17B2	0x929F    	PUSH       R9
0x17B4	0x928F    	PUSH       R8
0x17B6	0x927F    	PUSH       R7
0x17B8	0x923F    	PUSH       R3
0x17BA	0x922F    	PUSH       R2
0x17BC	0xE040    	LDI        R20, 0
0x17BE	0xEC50    	LDI        R21, 192
0x17C0	0xE769    	LDI        R22, 121
0x17C2	0xE474    	LDI        R23, 68
0x17C4	0x850C    	LDD        R16, Y+12
0x17C6	0x851D    	LDD        R17, Y+13
0x17C8	0x852E    	LDD        R18, Y+14
0x17CA	0x853F    	LDD        R19, Y+15
0x17CC	0xE6E5    	LDI        R30, lo_addr(_float_op_gequ)
0x17CE	0xE0F2    	LDI        R31, hi_addr(_float_op_gequ+0)
0x17D0	0x9509    	ICALL
0x17D2	0x2800    	OR         R0, R0
0x17D4	0xE000    	LDI        R16, 0
0x17D6	0xF009    	BREQ       L__print_F275
0x17D8	0xE001    	LDI        R16, 1
L__print_F275:
0x17DA	0x902F    	POP        R2
0x17DC	0x903F    	POP        R3
0x17DE	0x907F    	POP        R7
0x17E0	0x908F    	POP        R8
0x17E2	0x909F    	POP        R9
0x17E4	0x2300    	TST        R16
0x17E6	0xF159    	BREQ       L__print_F183
L__print_F276:
0x17E8	0x929F    	PUSH       R9
0x17EA	0x928F    	PUSH       R8
0x17EC	0x927F    	PUSH       R7
0x17EE	0x923F    	PUSH       R3
0x17F0	0x922F    	PUSH       R2
0x17F2	0xE040    	LDI        R20, 0
0x17F4	0xE35C    	LDI        R21, 60
0x17F6	0xE16C    	LDI        R22, 28
0x17F8	0xE476    	LDI        R23, 70
0x17FA	0x850C    	LDD        R16, Y+12
0x17FC	0x851D    	LDD        R17, Y+13
0x17FE	0x852E    	LDD        R18, Y+14
0x1800	0x853F    	LDD        R19, Y+15
0x1802	0xE5EE    	LDI        R30, lo_addr(_float_op_less)
0x1804	0xE0F2    	LDI        R31, hi_addr(_float_op_less+0)
0x1806	0x9509    	ICALL
0x1808	0x2800    	OR         R0, R0
0x180A	0xE000    	LDI        R16, 0
0x180C	0xF009    	BREQ       L__print_F277
0x180E	0xE001    	LDI        R16, 1
L__print_F277:
0x1810	0x902F    	POP        R2
0x1812	0x903F    	POP        R3
0x1814	0x907F    	POP        R7
0x1816	0x908F    	POP        R8
0x1818	0x909F    	POP        R9
0x181A	0x2300    	TST        R16
0x181C	0xF081    	BREQ       L__print_F182
L__print_F278:
L__print_F178:
;st7735.c,684 :: 		print_D((x_pos + (0x1E * font_size)), y_pos, font_size, colour, back_colour, tmp, points);
0x181E	0xE10E    	LDI        R16, 30
0x1820	0x9D04    	MUL        R16, R4
0x1822	0x2D00    	MOV        R16, R0
0x1824	0x0D02    	ADD        R16, R2
0x1826	0x2E20    	MOV        R2, R16
0x1828	0x8108    	LDD        R16, Y+0
0x182A	0x8119    	LDD        R17, Y+1
0x182C	0x931F    	PUSH       R17
0x182E	0x930F    	PUSH       R16
0x1830	0xD961    	RCALL      _print_D+0
0x1832	0xB7AD    	IN         R26, SPL+0
0x1834	0xB7BE    	IN         R27, SPL+1
0x1836	0x9612    	ADIW       R26, 2
0x1838	0xBFAD    	OUT        SPL+0, R26
0x183A	0xBFBE    	OUT        SPL+1, R27
;st7735.c,685 :: 		}
0x183C	0xC0E1    	RJMP       L_print_F125
;st7735.c,682 :: 		else if((value >= 999) && (value < 9999))
L__print_F183:
L__print_F182:
;st7735.c,686 :: 		else if((value >= 99) && (value < 999))
0x183E	0x929F    	PUSH       R9
0x1840	0x928F    	PUSH       R8
0x1842	0x927F    	PUSH       R7
0x1844	0x923F    	PUSH       R3
0x1846	0x922F    	PUSH       R2
0x1848	0xE040    	LDI        R20, 0
0x184A	0xE050    	LDI        R21, 0
0x184C	0xEC66    	LDI        R22, 198
0x184E	0xE472    	LDI        R23, 66
0x1850	0x850C    	LDD        R16, Y+12
0x1852	0x851D    	LDD        R17, Y+13
0x1854	0x852E    	LDD        R18, Y+14
0x1856	0x853F    	LDD        R19, Y+15
0x1858	0xE6E5    	LDI        R30, lo_addr(_float_op_gequ)
0x185A	0xE0F2    	LDI        R31, hi_addr(_float_op_gequ+0)
0x185C	0x9509    	ICALL
0x185E	0x2800    	OR         R0, R0
0x1860	0xE000    	LDI        R16, 0
0x1862	0xF009    	BREQ       L__print_F279
0x1864	0xE001    	LDI        R16, 1
L__print_F279:
0x1866	0x902F    	POP        R2
0x1868	0x903F    	POP        R3
0x186A	0x907F    	POP        R7
0x186C	0x908F    	POP        R8
0x186E	0x909F    	POP        R9
0x1870	0x2300    	TST        R16
0x1872	0xF159    	BREQ       L__print_F185
L__print_F280:
0x1874	0x929F    	PUSH       R9
0x1876	0x928F    	PUSH       R8
0x1878	0x927F    	PUSH       R7
0x187A	0x923F    	PUSH       R3
0x187C	0x922F    	PUSH       R2
0x187E	0xE040    	LDI        R20, 0
0x1880	0xEC50    	LDI        R21, 192
0x1882	0xE769    	LDI        R22, 121
0x1884	0xE474    	LDI        R23, 68
0x1886	0x850C    	LDD        R16, Y+12
0x1888	0x851D    	LDD        R17, Y+13
0x188A	0x852E    	LDD        R18, Y+14
0x188C	0x853F    	LDD        R19, Y+15
0x188E	0xE5EE    	LDI        R30, lo_addr(_float_op_less)
0x1890	0xE0F2    	LDI        R31, hi_addr(_float_op_less+0)
0x1892	0x9509    	ICALL
0x1894	0x2800    	OR         R0, R0
0x1896	0xE000    	LDI        R16, 0
0x1898	0xF009    	BREQ       L__print_F281
0x189A	0xE001    	LDI        R16, 1
L__print_F281:
0x189C	0x902F    	POP        R2
0x189E	0x903F    	POP        R3
0x18A0	0x907F    	POP        R7
0x18A2	0x908F    	POP        R8
0x18A4	0x909F    	POP        R9
0x18A6	0x2300    	TST        R16
0x18A8	0xF081    	BREQ       L__print_F184
L__print_F282:
L__print_F177:
;st7735.c,688 :: 		print_D((x_pos + (0x18 * font_size)), y_pos, font_size, colour, back_colour, tmp, points);
0x18AA	0xE108    	LDI        R16, 24
0x18AC	0x9D04    	MUL        R16, R4
0x18AE	0x2D00    	MOV        R16, R0
0x18B0	0x0D02    	ADD        R16, R2
0x18B2	0x2E20    	MOV        R2, R16
0x18B4	0x8108    	LDD        R16, Y+0
0x18B6	0x8119    	LDD        R17, Y+1
0x18B8	0x931F    	PUSH       R17
0x18BA	0x930F    	PUSH       R16
0x18BC	0xD91B    	RCALL      _print_D+0
0x18BE	0xB7AD    	IN         R26, SPL+0
0x18C0	0xB7BE    	IN         R27, SPL+1
0x18C2	0x9612    	ADIW       R26, 2
0x18C4	0xBFAD    	OUT        SPL+0, R26
0x18C6	0xBFBE    	OUT        SPL+1, R27
;st7735.c,689 :: 		}
0x18C8	0xC09B    	RJMP       L_print_F129
;st7735.c,686 :: 		else if((value >= 99) && (value < 999))
L__print_F185:
L__print_F184:
;st7735.c,690 :: 		else if((value >= 9) && (value < 99))
0x18CA	0x929F    	PUSH       R9
0x18CC	0x928F    	PUSH       R8
0x18CE	0x927F    	PUSH       R7
0x18D0	0x923F    	PUSH       R3
0x18D2	0x922F    	PUSH       R2
0x18D4	0xE040    	LDI        R20, 0
0x18D6	0xE050    	LDI        R21, 0
0x18D8	0xE160    	LDI        R22, 16
0x18DA	0xE471    	LDI        R23, 65
0x18DC	0x850C    	LDD        R16, Y+12
0x18DE	0x851D    	LDD        R17, Y+13
0x18E0	0x852E    	LDD        R18, Y+14
0x18E2	0x853F    	LDD        R19, Y+15
0x18E4	0xE6E5    	LDI        R30, lo_addr(_float_op_gequ)
0x18E6	0xE0F2    	LDI        R31, hi_addr(_float_op_gequ+0)
0x18E8	0x9509    	ICALL
0x18EA	0x2800    	OR         R0, R0
0x18EC	0xE000    	LDI        R16, 0
0x18EE	0xF009    	BREQ       L__print_F283
0x18F0	0xE001    	LDI        R16, 1
L__print_F283:
0x18F2	0x902F    	POP        R2
0x18F4	0x903F    	POP        R3
0x18F6	0x907F    	POP        R7
0x18F8	0x908F    	POP        R8
0x18FA	0x909F    	POP        R9
0x18FC	0x2300    	TST        R16
0x18FE	0xF159    	BREQ       L__print_F187
L__print_F284:
0x1900	0x929F    	PUSH       R9
0x1902	0x928F    	PUSH       R8
0x1904	0x927F    	PUSH       R7
0x1906	0x923F    	PUSH       R3
0x1908	0x922F    	PUSH       R2
0x190A	0xE040    	LDI        R20, 0
0x190C	0xE050    	LDI        R21, 0
0x190E	0xEC66    	LDI        R22, 198
0x1910	0xE472    	LDI        R23, 66
0x1912	0x850C    	LDD        R16, Y+12
0x1914	0x851D    	LDD        R17, Y+13
0x1916	0x852E    	LDD        R18, Y+14
0x1918	0x853F    	LDD        R19, Y+15
0x191A	0xE5EE    	LDI        R30, lo_addr(_float_op_less)
0x191C	0xE0F2    	LDI        R31, hi_addr(_float_op_less+0)
0x191E	0x9509    	ICALL
0x1920	0x2800    	OR         R0, R0
0x1922	0xE000    	LDI        R16, 0
0x1924	0xF009    	BREQ       L__print_F285
0x1926	0xE001    	LDI        R16, 1
L__print_F285:
0x1928	0x902F    	POP        R2
0x192A	0x903F    	POP        R3
0x192C	0x907F    	POP        R7
0x192E	0x908F    	POP        R8
0x1930	0x909F    	POP        R9
0x1932	0x2300    	TST        R16
0x1934	0xF081    	BREQ       L__print_F186
L__print_F286:
L__print_F176:
;st7735.c,692 :: 		print_D((x_pos + (0x12 * font_size)), y_pos, font_size, colour, back_colour, tmp, points);
0x1936	0xE102    	LDI        R16, 18
0x1938	0x9D04    	MUL        R16, R4
0x193A	0x2D00    	MOV        R16, R0
0x193C	0x0D02    	ADD        R16, R2
0x193E	0x2E20    	MOV        R2, R16
0x1940	0x8108    	LDD        R16, Y+0
0x1942	0x8119    	LDD        R17, Y+1
0x1944	0x931F    	PUSH       R17
0x1946	0x930F    	PUSH       R16
0x1948	0xD8D5    	RCALL      _print_D+0
0x194A	0xB7AD    	IN         R26, SPL+0
0x194C	0xB7BE    	IN         R27, SPL+1
0x194E	0x9612    	ADIW       R26, 2
0x1950	0xBFAD    	OUT        SPL+0, R26
0x1952	0xBFBE    	OUT        SPL+1, R27
;st7735.c,693 :: 		}
0x1954	0xC055    	RJMP       L_print_F133
;st7735.c,690 :: 		else if((value >= 9) && (value < 99))
L__print_F187:
L__print_F186:
;st7735.c,694 :: 		else if(value < 9)
0x1956	0x929F    	PUSH       R9
0x1958	0x928F    	PUSH       R8
0x195A	0x927F    	PUSH       R7
0x195C	0x923F    	PUSH       R3
0x195E	0x922F    	PUSH       R2
0x1960	0xE040    	LDI        R20, 0
0x1962	0xE050    	LDI        R21, 0
0x1964	0xE160    	LDI        R22, 16
0x1966	0xE471    	LDI        R23, 65
0x1968	0x850C    	LDD        R16, Y+12
0x196A	0x851D    	LDD        R17, Y+13
0x196C	0x852E    	LDD        R18, Y+14
0x196E	0x853F    	LDD        R19, Y+15
0x1970	0xE5EE    	LDI        R30, lo_addr(_float_op_less)
0x1972	0xE0F2    	LDI        R31, hi_addr(_float_op_less+0)
0x1974	0x9509    	ICALL
0x1976	0x2800    	OR         R0, R0
0x1978	0xE000    	LDI        R16, 0
0x197A	0xF009    	BREQ       L__print_F287
0x197C	0xE001    	LDI        R16, 1
L__print_F287:
0x197E	0x902F    	POP        R2
0x1980	0x903F    	POP        R3
0x1982	0x907F    	POP        R7
0x1984	0x908F    	POP        R8
0x1986	0x909F    	POP        R9
0x1988	0x2300    	TST        R16
0x198A	0xF409    	BRNE       L__print_F288
0x198C	0xC039    	RJMP       L_print_F134
L__print_F288:
;st7735.c,696 :: 		print_D((x_pos + (0x0C * font_size)), y_pos, font_size, colour, back_colour, tmp, points);
0x198E	0xE00C    	LDI        R16, 12
0x1990	0x9D04    	MUL        R16, R4
0x1992	0x2D00    	MOV        R16, R0
0x1994	0x0D02    	ADD        R16, R2
0x1996	0x924F    	PUSH       R4
0x1998	0x923F    	PUSH       R3
0x199A	0x922F    	PUSH       R2
0x199C	0x2E20    	MOV        R2, R16
0x199E	0x8108    	LDD        R16, Y+0
0x19A0	0x8119    	LDD        R17, Y+1
0x19A2	0x931F    	PUSH       R17
0x19A4	0x930F    	PUSH       R16
0x19A6	0xD8A6    	RCALL      _print_D+0
0x19A8	0xB7AD    	IN         R26, SPL+0
0x19AA	0xB7BE    	IN         R27, SPL+1
0x19AC	0x9612    	ADIW       R26, 2
0x19AE	0xBFAD    	OUT        SPL+0, R26
0x19B0	0xBFBE    	OUT        SPL+1, R27
0x19B2	0x902F    	POP        R2
0x19B4	0x903F    	POP        R3
0x19B6	0x904F    	POP        R4
;st7735.c,698 :: 		if((value) < 0)
0x19B8	0x928F    	PUSH       R8
0x19BA	0x927F    	PUSH       R7
0x19BC	0x923F    	PUSH       R3
0x19BE	0x922F    	PUSH       R2
0x19C0	0xE040    	LDI        R20, 0
0x19C2	0xE050    	LDI        R21, 0
0x19C4	0xE060    	LDI        R22, 0
0x19C6	0xE070    	LDI        R23, 0
0x19C8	0x850C    	LDD        R16, Y+12
0x19CA	0x851D    	LDD        R17, Y+13
0x19CC	0x852E    	LDD        R18, Y+14
0x19CE	0x853F    	LDD        R19, Y+15
0x19D0	0xE5EE    	LDI        R30, lo_addr(_float_op_less)
0x19D2	0xE0F2    	LDI        R31, hi_addr(_float_op_less+0)
0x19D4	0x9509    	ICALL
0x19D6	0x2800    	OR         R0, R0
0x19D8	0xE000    	LDI        R16, 0
0x19DA	0xF009    	BREQ       L__print_F289
0x19DC	0xE001    	LDI        R16, 1
L__print_F289:
0x19DE	0x902F    	POP        R2
0x19E0	0x903F    	POP        R3
0x19E2	0x907F    	POP        R7
0x19E4	0x908F    	POP        R8
0x19E6	0x2300    	TST        R16
0x19E8	0xF031    	BREQ       L_print_F135
L__print_F290:
;st7735.c,700 :: 		print_char(x_pos, y_pos, font_size, colour, back_colour, 0x2D);
0x19EA	0xE2BD    	LDI        R27, 45
0x19EC	0x2E9B    	MOV        R9, R27
0x19EE	0xE7E9    	LDI        R30, lo_addr(_print_char)
0x19F0	0xE0F2    	LDI        R31, hi_addr(_print_char+0)
0x19F2	0x9509    	ICALL
;st7735.c,701 :: 		}
0x19F4	0xC005    	RJMP       L_print_F136
L_print_F135:
;st7735.c,704 :: 		print_char(x_pos, y_pos, font_size, colour, back_colour, 0x20);
0x19F6	0xE2B0    	LDI        R27, 32
0x19F8	0x2E9B    	MOV        R9, R27
0x19FA	0xE7E9    	LDI        R30, lo_addr(_print_char)
0x19FC	0xE0F2    	LDI        R31, hi_addr(_print_char+0)
0x19FE	0x9509    	ICALL
;st7735.c,705 :: 		}
L_print_F136:
;st7735.c,706 :: 		}
L_print_F134:
L_print_F133:
L_print_F129:
L_print_F125:
L_print_F121:
;st7735.c,707 :: 		}
L_end_print_F:
0x1A00	0x909F    	POP        R9
0x1A02	0x902F    	POP        R2
0x1A04	0x9627    	ADIW       R28, 7
0x1A06	0xBFCD    	OUT        SPL+0, R28
0x1A08	0xBFDE    	OUT        SPL+1, R29
0x1A0A	0x91DF    	POP        R29
0x1A0C	0x91CF    	POP        R28
0x1A0E	0x9508    	RET
; end of _print_F
_print_I:
0x0BEE	0x93CF    	PUSH       R28
0x0BF0	0x93DF    	PUSH       R29
0x0BF2	0xB7CD    	IN         R28, SPL+0
0x0BF4	0xB7DE    	IN         R29, SPL+1
0x0BF6	0x972A    	SBIW       R28, 10
0x0BF8	0xBFCD    	OUT        SPL+0, R28
0x0BFA	0xBFDE    	OUT        SPL+1, R29
0x0BFC	0x9621    	ADIW       R28, 1
;st7735.c,580 :: 		void print_I(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, signed int value)
0x0BFE	0x850E    	LDD        R16, Y+14
0x0C00	0x851F    	LDD        R17, Y+15
0x0C02	0x870E    	STD        Y+14, R16
0x0C04	0x871F    	STD        Y+15, R17
;st7735.c,582 :: 		unsigned char ch[6] = {0x20, 0x20, 0x20, 0x20, 0x20, 0x20};
0x0C06	0xE2B0    	LDI        R27, 32
0x0C08	0x83B8    	STD        Y+0, R27
0x0C0A	0xE2B0    	LDI        R27, 32
0x0C0C	0x83B9    	STD        Y+1, R27
0x0C0E	0xE2B0    	LDI        R27, 32
0x0C10	0x83BA    	STD        Y+2, R27
0x0C12	0xE2B0    	LDI        R27, 32
0x0C14	0x83BB    	STD        Y+3, R27
0x0C16	0xE2B0    	LDI        R27, 32
0x0C18	0x83BC    	STD        Y+4, R27
0x0C1A	0xE2B0    	LDI        R27, 32
0x0C1C	0x83BD    	STD        Y+5, R27
;st7735.c,584 :: 		if(value < 0)
0x0C1E	0x852E    	LDD        R18, Y+14
0x0C20	0x853F    	LDD        R19, Y+15
0x0C22	0xE000    	LDI        R16, 0
0x0C24	0xE010    	LDI        R17, 0
0x0C26	0x1720    	CP         R18, R16
0x0C28	0x0731    	CPC        R19, R17
0x0C2A	0xF464    	BRGE       L_print_I98
L__print_I257:
;st7735.c,586 :: 		ch[0] = 0x2D;
0x0C2C	0x01FE    	MOVW       R30, R28
0x0C2E	0xE2BD    	LDI        R27, 45
0x0C30	0x83B0    	ST         Z, R27
;st7735.c,587 :: 		value = -value;
0x0C32	0x840E    	LDD        R0, Y+14
0x0C34	0x841F    	LDD        R1, Y+15
0x0C36	0xE000    	LDI        R16, 0
0x0C38	0xE010    	LDI        R17, 0
0x0C3A	0x1900    	SUB        R16, R0
0x0C3C	0x0911    	SBC        R17, R1
0x0C3E	0x870E    	STD        Y+14, R16
0x0C40	0x871F    	STD        Y+15, R17
;st7735.c,588 :: 		}
0x0C42	0xC003    	RJMP       L_print_I99
L_print_I98:
;st7735.c,591 :: 		ch[0] = 0x20;
0x0C44	0x01FE    	MOVW       R30, R28
0x0C46	0xE2B0    	LDI        R27, 32
0x0C48	0x83B0    	ST         Z, R27
;st7735.c,592 :: 		}
L_print_I99:
;st7735.c,594 :: 		if(value > 9999)
0x0C4A	0x852E    	LDD        R18, Y+14
0x0C4C	0x853F    	LDD        R19, Y+15
0x0C4E	0xE00F    	LDI        R16, 15
0x0C50	0xE217    	LDI        R17, 39
0x0C52	0x1702    	CP         R16, R18
0x0C54	0x0713    	CPC        R17, R19
0x0C56	0xF00C    	BRLT       L__print_I258
0x0C58	0xC070    	RJMP       L_print_I100
L__print_I258:
;st7735.c,596 :: 		ch[1] = ((value / 10000) + 0x30);
0x0C5A	0x018E    	MOVW       R16, R28
0x0C5C	0x5F0F    	SUBI       R16, 255
0x0C5E	0x4F1F    	SBCI       R17, 255
0x0C60	0x8708    	STD        Y+8, R16
0x0C62	0x8719    	STD        Y+9, R17
0x0C64	0x928F    	PUSH       R8
0x0C66	0x927F    	PUSH       R7
0x0C68	0x926F    	PUSH       R6
0x0C6A	0x925F    	PUSH       R5
0x0C6C	0x924F    	PUSH       R4
0x0C6E	0x923F    	PUSH       R3
0x0C70	0x922F    	PUSH       R2
0x0C72	0xE140    	LDI        R20, 16
0x0C74	0xE257    	LDI        R21, 39
0x0C76	0x850E    	LDD        R16, Y+14
0x0C78	0x851F    	LDD        R17, Y+15
0x0C7A	0xDB2B    	RCALL      _Div_16x16_S+0
0x0C7C	0x018B    	MOVW       R16, R22
0x0C7E	0x2F20    	MOV        R18, R16
0x0C80	0x5D20    	SUBI       R18, 208
0x0C82	0x8508    	LDD        R16, Y+8
0x0C84	0x8519    	LDD        R17, Y+9
0x0C86	0x01F8    	MOVW       R30, R16
0x0C88	0x8320    	ST         Z, R18
;st7735.c,597 :: 		ch[2] = (((value % 10000)/ 1000) + 0x30);
0x0C8A	0x018E    	MOVW       R16, R28
0x0C8C	0x5F0E    	SUBI       R16, 254
0x0C8E	0x4F1F    	SBCI       R17, 255
0x0C90	0x8708    	STD        Y+8, R16
0x0C92	0x8719    	STD        Y+9, R17
0x0C94	0xE140    	LDI        R20, 16
0x0C96	0xE257    	LDI        R21, 39
0x0C98	0x850E    	LDD        R16, Y+14
0x0C9A	0x851F    	LDD        R17, Y+15
0x0C9C	0xDB1A    	RCALL      _Div_16x16_S+0
0x0C9E	0x018C    	MOVW       R16, R24
0x0CA0	0xEE48    	LDI        R20, 232
0x0CA2	0xE053    	LDI        R21, 3
0x0CA4	0xDB16    	RCALL      _Div_16x16_S+0
0x0CA6	0x018B    	MOVW       R16, R22
0x0CA8	0x2F20    	MOV        R18, R16
0x0CAA	0x5D20    	SUBI       R18, 208
0x0CAC	0x8508    	LDD        R16, Y+8
0x0CAE	0x8519    	LDD        R17, Y+9
0x0CB0	0x01F8    	MOVW       R30, R16
0x0CB2	0x8320    	ST         Z, R18
;st7735.c,598 :: 		ch[3] = (((value % 1000) / 100) + 0x30);
0x0CB4	0x018E    	MOVW       R16, R28
0x0CB6	0x5F0D    	SUBI       R16, 253
0x0CB8	0x4F1F    	SBCI       R17, 255
0x0CBA	0x8708    	STD        Y+8, R16
0x0CBC	0x8719    	STD        Y+9, R17
0x0CBE	0xEE48    	LDI        R20, 232
0x0CC0	0xE053    	LDI        R21, 3
0x0CC2	0x850E    	LDD        R16, Y+14
0x0CC4	0x851F    	LDD        R17, Y+15
0x0CC6	0xDB05    	RCALL      _Div_16x16_S+0
0x0CC8	0x018C    	MOVW       R16, R24
0x0CCA	0xE644    	LDI        R20, 100
0x0CCC	0xE050    	LDI        R21, 0
0x0CCE	0xDB01    	RCALL      _Div_16x16_S+0
0x0CD0	0x018B    	MOVW       R16, R22
0x0CD2	0x2F20    	MOV        R18, R16
0x0CD4	0x5D20    	SUBI       R18, 208
0x0CD6	0x8508    	LDD        R16, Y+8
0x0CD8	0x8519    	LDD        R17, Y+9
0x0CDA	0x01F8    	MOVW       R30, R16
0x0CDC	0x8320    	ST         Z, R18
;st7735.c,599 :: 		ch[4] = (((value % 100) / 10) + 0x30);
0x0CDE	0x018E    	MOVW       R16, R28
0x0CE0	0x5F0C    	SUBI       R16, 252
0x0CE2	0x4F1F    	SBCI       R17, 255
0x0CE4	0x8708    	STD        Y+8, R16
0x0CE6	0x8719    	STD        Y+9, R17
0x0CE8	0xE644    	LDI        R20, 100
0x0CEA	0xE050    	LDI        R21, 0
0x0CEC	0x850E    	LDD        R16, Y+14
0x0CEE	0x851F    	LDD        R17, Y+15
0x0CF0	0xDAF0    	RCALL      _Div_16x16_S+0
0x0CF2	0x018C    	MOVW       R16, R24
0x0CF4	0xE04A    	LDI        R20, 10
0x0CF6	0xE050    	LDI        R21, 0
0x0CF8	0xDAEC    	RCALL      _Div_16x16_S+0
0x0CFA	0x018B    	MOVW       R16, R22
0x0CFC	0x2F20    	MOV        R18, R16
0x0CFE	0x5D20    	SUBI       R18, 208
0x0D00	0x8508    	LDD        R16, Y+8
0x0D02	0x8519    	LDD        R17, Y+9
0x0D04	0x01F8    	MOVW       R30, R16
0x0D06	0x8320    	ST         Z, R18
;st7735.c,600 :: 		ch[5] = ((value % 10) + 0x30);
0x0D08	0x018E    	MOVW       R16, R28
0x0D0A	0x5F0B    	SUBI       R16, 251
0x0D0C	0x4F1F    	SBCI       R17, 255
0x0D0E	0x8708    	STD        Y+8, R16
0x0D10	0x8719    	STD        Y+9, R17
0x0D12	0xE04A    	LDI        R20, 10
0x0D14	0xE050    	LDI        R21, 0
0x0D16	0x850E    	LDD        R16, Y+14
0x0D18	0x851F    	LDD        R17, Y+15
0x0D1A	0xDADB    	RCALL      _Div_16x16_S+0
0x0D1C	0x018C    	MOVW       R16, R24
0x0D1E	0x902F    	POP        R2
0x0D20	0x903F    	POP        R3
0x0D22	0x904F    	POP        R4
0x0D24	0x905F    	POP        R5
0x0D26	0x906F    	POP        R6
0x0D28	0x907F    	POP        R7
0x0D2A	0x908F    	POP        R8
0x0D2C	0x2F20    	MOV        R18, R16
0x0D2E	0x5D20    	SUBI       R18, 208
0x0D30	0x8508    	LDD        R16, Y+8
0x0D32	0x8519    	LDD        R17, Y+9
0x0D34	0x01F8    	MOVW       R30, R16
0x0D36	0x8320    	ST         Z, R18
;st7735.c,601 :: 		}
0x0D38	0xC15F    	RJMP       L_print_I101
L_print_I100:
;st7735.c,603 :: 		else if((value > 999) && (value <= 9999))
0x0D3A	0x852E    	LDD        R18, Y+14
0x0D3C	0x853F    	LDD        R19, Y+15
0x0D3E	0xEE07    	LDI        R16, 231
0x0D40	0xE013    	LDI        R17, 3
0x0D42	0x1702    	CP         R16, R18
0x0D44	0x0713    	CPC        R17, R19
0x0D46	0xF00C    	BRLT       L__print_I259
0x0D48	0xC06C    	RJMP       L__print_I171
L__print_I259:
0x0D4A	0x852E    	LDD        R18, Y+14
0x0D4C	0x853F    	LDD        R19, Y+15
0x0D4E	0xE00F    	LDI        R16, 15
0x0D50	0xE217    	LDI        R17, 39
0x0D52	0x1702    	CP         R16, R18
0x0D54	0x0713    	CPC        R17, R19
0x0D56	0xF40C    	BRGE       L__print_I260
0x0D58	0xC064    	RJMP       L__print_I170
L__print_I260:
L__print_I169:
;st7735.c,605 :: 		ch[1] = (((value % 10000)/ 1000) + 0x30);
0x0D5A	0x018E    	MOVW       R16, R28
0x0D5C	0x5F0F    	SUBI       R16, 255
0x0D5E	0x4F1F    	SBCI       R17, 255
0x0D60	0x8708    	STD        Y+8, R16
0x0D62	0x8719    	STD        Y+9, R17
0x0D64	0x928F    	PUSH       R8
0x0D66	0x927F    	PUSH       R7
0x0D68	0x926F    	PUSH       R6
0x0D6A	0x925F    	PUSH       R5
0x0D6C	0x924F    	PUSH       R4
0x0D6E	0x923F    	PUSH       R3
0x0D70	0x922F    	PUSH       R2
0x0D72	0xE140    	LDI        R20, 16
0x0D74	0xE257    	LDI        R21, 39
0x0D76	0x850E    	LDD        R16, Y+14
0x0D78	0x851F    	LDD        R17, Y+15
0x0D7A	0xDAAB    	RCALL      _Div_16x16_S+0
0x0D7C	0x018C    	MOVW       R16, R24
0x0D7E	0xEE48    	LDI        R20, 232
0x0D80	0xE053    	LDI        R21, 3
0x0D82	0xDAA7    	RCALL      _Div_16x16_S+0
0x0D84	0x018B    	MOVW       R16, R22
0x0D86	0x2F20    	MOV        R18, R16
0x0D88	0x5D20    	SUBI       R18, 208
0x0D8A	0x8508    	LDD        R16, Y+8
0x0D8C	0x8519    	LDD        R17, Y+9
0x0D8E	0x01F8    	MOVW       R30, R16
0x0D90	0x8320    	ST         Z, R18
;st7735.c,606 :: 		ch[2] = (((value % 1000) / 100) + 0x30);
0x0D92	0x018E    	MOVW       R16, R28
0x0D94	0x5F0E    	SUBI       R16, 254
0x0D96	0x4F1F    	SBCI       R17, 255
0x0D98	0x8708    	STD        Y+8, R16
0x0D9A	0x8719    	STD        Y+9, R17
0x0D9C	0xEE48    	LDI        R20, 232
0x0D9E	0xE053    	LDI        R21, 3
0x0DA0	0x850E    	LDD        R16, Y+14
0x0DA2	0x851F    	LDD        R17, Y+15
0x0DA4	0xDA96    	RCALL      _Div_16x16_S+0
0x0DA6	0x018C    	MOVW       R16, R24
0x0DA8	0xE644    	LDI        R20, 100
0x0DAA	0xE050    	LDI        R21, 0
0x0DAC	0xDA92    	RCALL      _Div_16x16_S+0
0x0DAE	0x018B    	MOVW       R16, R22
0x0DB0	0x2F20    	MOV        R18, R16
0x0DB2	0x5D20    	SUBI       R18, 208
0x0DB4	0x8508    	LDD        R16, Y+8
0x0DB6	0x8519    	LDD        R17, Y+9
0x0DB8	0x01F8    	MOVW       R30, R16
0x0DBA	0x8320    	ST         Z, R18
;st7735.c,607 :: 		ch[3] = (((value % 100) / 10) + 0x30);
0x0DBC	0x018E    	MOVW       R16, R28
0x0DBE	0x5F0D    	SUBI       R16, 253
0x0DC0	0x4F1F    	SBCI       R17, 255
0x0DC2	0x8708    	STD        Y+8, R16
0x0DC4	0x8719    	STD        Y+9, R17
0x0DC6	0xE644    	LDI        R20, 100
0x0DC8	0xE050    	LDI        R21, 0
0x0DCA	0x850E    	LDD        R16, Y+14
0x0DCC	0x851F    	LDD        R17, Y+15
0x0DCE	0xDA81    	RCALL      _Div_16x16_S+0
0x0DD0	0x018C    	MOVW       R16, R24
0x0DD2	0xE04A    	LDI        R20, 10
0x0DD4	0xE050    	LDI        R21, 0
0x0DD6	0xDA7D    	RCALL      _Div_16x16_S+0
0x0DD8	0x018B    	MOVW       R16, R22
0x0DDA	0x2F20    	MOV        R18, R16
0x0DDC	0x5D20    	SUBI       R18, 208
0x0DDE	0x8508    	LDD        R16, Y+8
0x0DE0	0x8519    	LDD        R17, Y+9
0x0DE2	0x01F8    	MOVW       R30, R16
0x0DE4	0x8320    	ST         Z, R18
;st7735.c,608 :: 		ch[4] = ((value % 10) + 0x30);
0x0DE6	0x018E    	MOVW       R16, R28
0x0DE8	0x5F0C    	SUBI       R16, 252
0x0DEA	0x4F1F    	SBCI       R17, 255
0x0DEC	0x8708    	STD        Y+8, R16
0x0DEE	0x8719    	STD        Y+9, R17
0x0DF0	0xE04A    	LDI        R20, 10
0x0DF2	0xE050    	LDI        R21, 0
0x0DF4	0x850E    	LDD        R16, Y+14
0x0DF6	0x851F    	LDD        R17, Y+15
0x0DF8	0xDA6C    	RCALL      _Div_16x16_S+0
0x0DFA	0x018C    	MOVW       R16, R24
0x0DFC	0x902F    	POP        R2
0x0DFE	0x903F    	POP        R3
0x0E00	0x904F    	POP        R4
0x0E02	0x905F    	POP        R5
0x0E04	0x906F    	POP        R6
0x0E06	0x907F    	POP        R7
0x0E08	0x908F    	POP        R8
0x0E0A	0x2F20    	MOV        R18, R16
0x0E0C	0x5D20    	SUBI       R18, 208
0x0E0E	0x8508    	LDD        R16, Y+8
0x0E10	0x8519    	LDD        R17, Y+9
0x0E12	0x01F8    	MOVW       R30, R16
0x0E14	0x8320    	ST         Z, R18
;st7735.c,609 :: 		ch[5] = 0x20;
0x0E16	0x018E    	MOVW       R16, R28
0x0E18	0x01F8    	MOVW       R30, R16
0x0E1A	0x9635    	ADIW       R30, 5
0x0E1C	0xE2B0    	LDI        R27, 32
0x0E1E	0x83B0    	ST         Z, R27
;st7735.c,610 :: 		}
0x0E20	0xC0EB    	RJMP       L_print_I105
;st7735.c,603 :: 		else if((value > 999) && (value <= 9999))
L__print_I171:
L__print_I170:
;st7735.c,611 :: 		else if((value > 99) && (value <= 999))
0x0E22	0x852E    	LDD        R18, Y+14
0x0E24	0x853F    	LDD        R19, Y+15
0x0E26	0xE603    	LDI        R16, 99
0x0E28	0xE010    	LDI        R17, 0
0x0E2A	0x1702    	CP         R16, R18
0x0E2C	0x0713    	CPC        R17, R19
0x0E2E	0xF00C    	BRLT       L__print_I261
0x0E30	0xC05C    	RJMP       L__print_I173
L__print_I261:
0x0E32	0x852E    	LDD        R18, Y+14
0x0E34	0x853F    	LDD        R19, Y+15
0x0E36	0xEE07    	LDI        R16, 231
0x0E38	0xE013    	LDI        R17, 3
0x0E3A	0x1702    	CP         R16, R18
0x0E3C	0x0713    	CPC        R17, R19
0x0E3E	0xF40C    	BRGE       L__print_I262
0x0E40	0xC054    	RJMP       L__print_I172
L__print_I262:
L__print_I168:
;st7735.c,613 :: 		ch[1] = (((value % 1000) / 100) + 0x30);
0x0E42	0x018E    	MOVW       R16, R28
0x0E44	0x5F0F    	SUBI       R16, 255
0x0E46	0x4F1F    	SBCI       R17, 255
0x0E48	0x8708    	STD        Y+8, R16
0x0E4A	0x8719    	STD        Y+9, R17
0x0E4C	0x928F    	PUSH       R8
0x0E4E	0x927F    	PUSH       R7
0x0E50	0x926F    	PUSH       R6
0x0E52	0x925F    	PUSH       R5
0x0E54	0x924F    	PUSH       R4
0x0E56	0x923F    	PUSH       R3
0x0E58	0x922F    	PUSH       R2
0x0E5A	0xEE48    	LDI        R20, 232
0x0E5C	0xE053    	LDI        R21, 3
0x0E5E	0x850E    	LDD        R16, Y+14
0x0E60	0x851F    	LDD        R17, Y+15
0x0E62	0xDA37    	RCALL      _Div_16x16_S+0
0x0E64	0x018C    	MOVW       R16, R24
0x0E66	0xE644    	LDI        R20, 100
0x0E68	0xE050    	LDI        R21, 0
0x0E6A	0xDA33    	RCALL      _Div_16x16_S+0
0x0E6C	0x018B    	MOVW       R16, R22
0x0E6E	0x2F20    	MOV        R18, R16
0x0E70	0x5D20    	SUBI       R18, 208
0x0E72	0x8508    	LDD        R16, Y+8
0x0E74	0x8519    	LDD        R17, Y+9
0x0E76	0x01F8    	MOVW       R30, R16
0x0E78	0x8320    	ST         Z, R18
;st7735.c,614 :: 		ch[2] = (((value % 100) / 10) + 0x30);
0x0E7A	0x018E    	MOVW       R16, R28
0x0E7C	0x5F0E    	SUBI       R16, 254
0x0E7E	0x4F1F    	SBCI       R17, 255
0x0E80	0x8708    	STD        Y+8, R16
0x0E82	0x8719    	STD        Y+9, R17
0x0E84	0xE644    	LDI        R20, 100
0x0E86	0xE050    	LDI        R21, 0
0x0E88	0x850E    	LDD        R16, Y+14
0x0E8A	0x851F    	LDD        R17, Y+15
0x0E8C	0xDA22    	RCALL      _Div_16x16_S+0
0x0E8E	0x018C    	MOVW       R16, R24
0x0E90	0xE04A    	LDI        R20, 10
0x0E92	0xE050    	LDI        R21, 0
0x0E94	0xDA1E    	RCALL      _Div_16x16_S+0
0x0E96	0x018B    	MOVW       R16, R22
0x0E98	0x2F20    	MOV        R18, R16
0x0E9A	0x5D20    	SUBI       R18, 208
0x0E9C	0x8508    	LDD        R16, Y+8
0x0E9E	0x8519    	LDD        R17, Y+9
0x0EA0	0x01F8    	MOVW       R30, R16
0x0EA2	0x8320    	ST         Z, R18
;st7735.c,615 :: 		ch[3] = ((value % 10) + 0x30);
0x0EA4	0x018E    	MOVW       R16, R28
0x0EA6	0x5F0D    	SUBI       R16, 253
0x0EA8	0x4F1F    	SBCI       R17, 255
0x0EAA	0x8708    	STD        Y+8, R16
0x0EAC	0x8719    	STD        Y+9, R17
0x0EAE	0xE04A    	LDI        R20, 10
0x0EB0	0xE050    	LDI        R21, 0
0x0EB2	0x850E    	LDD        R16, Y+14
0x0EB4	0x851F    	LDD        R17, Y+15
0x0EB6	0xDA0D    	RCALL      _Div_16x16_S+0
0x0EB8	0x018C    	MOVW       R16, R24
0x0EBA	0x902F    	POP        R2
0x0EBC	0x903F    	POP        R3
0x0EBE	0x904F    	POP        R4
0x0EC0	0x905F    	POP        R5
0x0EC2	0x906F    	POP        R6
0x0EC4	0x907F    	POP        R7
0x0EC6	0x908F    	POP        R8
0x0EC8	0x2F20    	MOV        R18, R16
0x0ECA	0x5D20    	SUBI       R18, 208
0x0ECC	0x8508    	LDD        R16, Y+8
0x0ECE	0x8519    	LDD        R17, Y+9
0x0ED0	0x01F8    	MOVW       R30, R16
0x0ED2	0x8320    	ST         Z, R18
;st7735.c,616 :: 		ch[4] = 0x20;
0x0ED4	0x018E    	MOVW       R16, R28
0x0ED6	0x01F8    	MOVW       R30, R16
0x0ED8	0x9634    	ADIW       R30, 4
0x0EDA	0xE2B0    	LDI        R27, 32
0x0EDC	0x83B0    	ST         Z, R27
;st7735.c,617 :: 		ch[5] = 0x20;
0x0EDE	0x018E    	MOVW       R16, R28
0x0EE0	0x01F8    	MOVW       R30, R16
0x0EE2	0x9635    	ADIW       R30, 5
0x0EE4	0xE2B0    	LDI        R27, 32
0x0EE6	0x83B0    	ST         Z, R27
;st7735.c,618 :: 		}
0x0EE8	0xC087    	RJMP       L_print_I109
;st7735.c,611 :: 		else if((value > 99) && (value <= 999))
L__print_I173:
L__print_I172:
;st7735.c,619 :: 		else if((value > 9) && (value <= 99))
0x0EEA	0x852E    	LDD        R18, Y+14
0x0EEC	0x853F    	LDD        R19, Y+15
0x0EEE	0xE009    	LDI        R16, 9
0x0EF0	0xE010    	LDI        R17, 0
0x0EF2	0x1702    	CP         R16, R18
0x0EF4	0x0713    	CPC        R17, R19
0x0EF6	0xF00C    	BRLT       L__print_I263
0x0EF8	0xC04C    	RJMP       L__print_I175
L__print_I263:
0x0EFA	0x852E    	LDD        R18, Y+14
0x0EFC	0x853F    	LDD        R19, Y+15
0x0EFE	0xE603    	LDI        R16, 99
0x0F00	0xE010    	LDI        R17, 0
0x0F02	0x1702    	CP         R16, R18
0x0F04	0x0713    	CPC        R17, R19
0x0F06	0xF40C    	BRGE       L__print_I264
0x0F08	0xC044    	RJMP       L__print_I174
L__print_I264:
L__print_I167:
;st7735.c,621 :: 		ch[1] = (((value % 100) / 10) + 0x30);
0x0F0A	0x018E    	MOVW       R16, R28
0x0F0C	0x5F0F    	SUBI       R16, 255
0x0F0E	0x4F1F    	SBCI       R17, 255
0x0F10	0x8708    	STD        Y+8, R16
0x0F12	0x8719    	STD        Y+9, R17
0x0F14	0x928F    	PUSH       R8
0x0F16	0x927F    	PUSH       R7
0x0F18	0x926F    	PUSH       R6
0x0F1A	0x925F    	PUSH       R5
0x0F1C	0x924F    	PUSH       R4
0x0F1E	0x923F    	PUSH       R3
0x0F20	0x922F    	PUSH       R2
0x0F22	0xE644    	LDI        R20, 100
0x0F24	0xE050    	LDI        R21, 0
0x0F26	0x850E    	LDD        R16, Y+14
0x0F28	0x851F    	LDD        R17, Y+15
0x0F2A	0xD9D3    	RCALL      _Div_16x16_S+0
0x0F2C	0x018C    	MOVW       R16, R24
0x0F2E	0xE04A    	LDI        R20, 10
0x0F30	0xE050    	LDI        R21, 0
0x0F32	0xD9CF    	RCALL      _Div_16x16_S+0
0x0F34	0x018B    	MOVW       R16, R22
0x0F36	0x2F20    	MOV        R18, R16
0x0F38	0x5D20    	SUBI       R18, 208
0x0F3A	0x8508    	LDD        R16, Y+8
0x0F3C	0x8519    	LDD        R17, Y+9
0x0F3E	0x01F8    	MOVW       R30, R16
0x0F40	0x8320    	ST         Z, R18
;st7735.c,622 :: 		ch[2] = ((value % 10) + 0x30);
0x0F42	0x018E    	MOVW       R16, R28
0x0F44	0x5F0E    	SUBI       R16, 254
0x0F46	0x4F1F    	SBCI       R17, 255
0x0F48	0x8708    	STD        Y+8, R16
0x0F4A	0x8719    	STD        Y+9, R17
0x0F4C	0xE04A    	LDI        R20, 10
0x0F4E	0xE050    	LDI        R21, 0
0x0F50	0x850E    	LDD        R16, Y+14
0x0F52	0x851F    	LDD        R17, Y+15
0x0F54	0xD9BE    	RCALL      _Div_16x16_S+0
0x0F56	0x018C    	MOVW       R16, R24
0x0F58	0x902F    	POP        R2
0x0F5A	0x903F    	POP        R3
0x0F5C	0x904F    	POP        R4
0x0F5E	0x905F    	POP        R5
0x0F60	0x906F    	POP        R6
0x0F62	0x907F    	POP        R7
0x0F64	0x908F    	POP        R8
0x0F66	0x2F20    	MOV        R18, R16
0x0F68	0x5D20    	SUBI       R18, 208
0x0F6A	0x8508    	LDD        R16, Y+8
0x0F6C	0x8519    	LDD        R17, Y+9
0x0F6E	0x01F8    	MOVW       R30, R16
0x0F70	0x8320    	ST         Z, R18
;st7735.c,623 :: 		ch[3] = 0x20;
0x0F72	0x018E    	MOVW       R16, R28
0x0F74	0x01F8    	MOVW       R30, R16
0x0F76	0x9633    	ADIW       R30, 3
0x0F78	0xE2B0    	LDI        R27, 32
0x0F7A	0x83B0    	ST         Z, R27
;st7735.c,624 :: 		ch[4] = 0x20;
0x0F7C	0x018E    	MOVW       R16, R28
0x0F7E	0x01F8    	MOVW       R30, R16
0x0F80	0x9634    	ADIW       R30, 4
0x0F82	0xE2B0    	LDI        R27, 32
0x0F84	0x83B0    	ST         Z, R27
;st7735.c,625 :: 		ch[5] = 0x20;
0x0F86	0x018E    	MOVW       R16, R28
0x0F88	0x01F8    	MOVW       R30, R16
0x0F8A	0x9635    	ADIW       R30, 5
0x0F8C	0xE2B0    	LDI        R27, 32
0x0F8E	0x83B0    	ST         Z, R27
;st7735.c,626 :: 		}
0x0F90	0xC033    	RJMP       L_print_I113
;st7735.c,619 :: 		else if((value > 9) && (value <= 99))
L__print_I175:
L__print_I174:
;st7735.c,629 :: 		ch[1] = ((value % 10) + 0x30);
0x0F92	0x018E    	MOVW       R16, R28
0x0F94	0x5F0F    	SUBI       R16, 255
0x0F96	0x4F1F    	SBCI       R17, 255
0x0F98	0x8708    	STD        Y+8, R16
0x0F9A	0x8719    	STD        Y+9, R17
0x0F9C	0x928F    	PUSH       R8
0x0F9E	0x927F    	PUSH       R7
0x0FA0	0x926F    	PUSH       R6
0x0FA2	0x925F    	PUSH       R5
0x0FA4	0x924F    	PUSH       R4
0x0FA6	0x923F    	PUSH       R3
0x0FA8	0x922F    	PUSH       R2
0x0FAA	0xE04A    	LDI        R20, 10
0x0FAC	0xE050    	LDI        R21, 0
0x0FAE	0x850E    	LDD        R16, Y+14
0x0FB0	0x851F    	LDD        R17, Y+15
0x0FB2	0xD98F    	RCALL      _Div_16x16_S+0
0x0FB4	0x018C    	MOVW       R16, R24
0x0FB6	0x902F    	POP        R2
0x0FB8	0x903F    	POP        R3
0x0FBA	0x904F    	POP        R4
0x0FBC	0x905F    	POP        R5
0x0FBE	0x906F    	POP        R6
0x0FC0	0x907F    	POP        R7
0x0FC2	0x908F    	POP        R8
0x0FC4	0x2F20    	MOV        R18, R16
0x0FC6	0x5D20    	SUBI       R18, 208
0x0FC8	0x8508    	LDD        R16, Y+8
0x0FCA	0x8519    	LDD        R17, Y+9
0x0FCC	0x01F8    	MOVW       R30, R16
0x0FCE	0x8320    	ST         Z, R18
;st7735.c,630 :: 		ch[2] = 0x20;
0x0FD0	0x018E    	MOVW       R16, R28
0x0FD2	0x01F8    	MOVW       R30, R16
0x0FD4	0x9632    	ADIW       R30, 2
0x0FD6	0xE2B0    	LDI        R27, 32
0x0FD8	0x83B0    	ST         Z, R27
;st7735.c,631 :: 		ch[3] = 0x20;
0x0FDA	0x018E    	MOVW       R16, R28
0x0FDC	0x01F8    	MOVW       R30, R16
0x0FDE	0x9633    	ADIW       R30, 3
0x0FE0	0xE2B0    	LDI        R27, 32
0x0FE2	0x83B0    	ST         Z, R27
;st7735.c,632 :: 		ch[4] = 0x20;
0x0FE4	0x018E    	MOVW       R16, R28
0x0FE6	0x01F8    	MOVW       R30, R16
0x0FE8	0x9634    	ADIW       R30, 4
0x0FEA	0xE2B0    	LDI        R27, 32
0x0FEC	0x83B0    	ST         Z, R27
;st7735.c,633 :: 		ch[5] = 0x20;
0x0FEE	0x018E    	MOVW       R16, R28
0x0FF0	0x01F8    	MOVW       R30, R16
0x0FF2	0x9635    	ADIW       R30, 5
0x0FF4	0xE2B0    	LDI        R27, 32
0x0FF6	0x83B0    	ST         Z, R27
;st7735.c,634 :: 		}
L_print_I113:
L_print_I109:
L_print_I105:
L_print_I101:
;st7735.c,636 :: 		print_str(x_pos, y_pos, font_size, colour, back_colour, ch);
0x0FF8	0x018E    	MOVW       R16, R28
0x0FFA	0x931F    	PUSH       R17
0x0FFC	0x930F    	PUSH       R16
0x0FFE	0xD2ED    	RCALL      _print_str+0
0x1000	0xB7AD    	IN         R26, SPL+0
0x1002	0xB7BE    	IN         R27, SPL+1
0x1004	0x9612    	ADIW       R26, 2
0x1006	0xBFAD    	OUT        SPL+0, R26
0x1008	0xBFBE    	OUT        SPL+1, R27
;st7735.c,637 :: 		}
L_end_print_I:
0x100A	0x9629    	ADIW       R28, 9
0x100C	0xBFCD    	OUT        SPL+0, R28
0x100E	0xBFDE    	OUT        SPL+1, R29
0x1010	0x91DF    	POP        R29
0x1012	0x91CF    	POP        R28
0x1014	0x9508    	RET
; end of _print_I
_Div_16x16_S:
;__Lib_Math.c,145 :: 		
;__Lib_Math.c,148 :: 		
0x02D2	0x01C8    	MOVW       R24, R16
;__Lib_Math.c,149 :: 		
0x02D4	0x01BA    	MOVW       R22, R20
;__Lib_Math.c,151 :: 		
0x02D6	0xFB97    	BST        R25, 7
;__Lib_Math.c,152 :: 		
0x02D8	0x2E09    	MOV        R0, R25
;__Lib_Math.c,153 :: 		
0x02DA	0x2607    	EOR        R0, R23
;__Lib_Math.c,154 :: 		
0x02DC	0xD00A    	RCALL      Div_16x16_S_L3
;__Lib_Math.c,155 :: 		
0x02DE	0xFD77    	SBRC       R23, 7
;__Lib_Math.c,156 :: 		
0x02E0	0xD004    	RCALL      Div_16x16_S_L1
;__Lib_Math.c,157 :: 		
0x02E2	0xD00C    	RCALL      Div_16x16_S_L4
;__Lib_Math.c,158 :: 		
0x02E4	0xD006    	RCALL      Div_16x16_S_L3
;__Lib_Math.c,159 :: 		
0x02E6	0x2000    	AND        R0, R0
;__Lib_Math.c,160 :: 		
0x02E8	0xF41A    	BRPL       Div_16x16_S_L2
;__Lib_Math.c,161 :: 		
Div_16x16_S_L1:
;__Lib_Math.c,162 :: 		
0x02EA	0x9570    	COM        R23
;__Lib_Math.c,163 :: 		
0x02EC	0x9561    	NEG        R22
;__Lib_Math.c,164 :: 		
0x02EE	0x4F7F    	SBCI       R23, 255
;__Lib_Math.c,165 :: 		
Div_16x16_S_L2:
;__Lib_Math.c,166 :: 		
0x02F0	0x9508    	RET
;__Lib_Math.c,167 :: 		
Div_16x16_S_L3:
;__Lib_Math.c,168 :: 		
0x02F2	0xF7F6    	BRTC       Div_16x16_S_L2
;__Lib_Math.c,169 :: 		
0x02F4	0x9590    	COM        R25
;__Lib_Math.c,170 :: 		
0x02F6	0x9581    	NEG        R24
;__Lib_Math.c,171 :: 		
0x02F8	0x4F9F    	SBCI       R25, 255
;__Lib_Math.c,172 :: 		
0x02FA	0x9508    	RET
;__Lib_Math.c,173 :: 		
Div_16x16_S_L4:
;__Lib_Math.c,174 :: 		
0x02FC	0x1BAA    	SUB        R26, R26
;__Lib_Math.c,175 :: 		
0x02FE	0x1BBB    	SUB        R27, R27
;__Lib_Math.c,176 :: 		
0x0300	0xE151    	LDI        R21, 17
;__Lib_Math.c,177 :: 		
0x0302	0xC007    	RJMP       Div_16x16_S_L6
;__Lib_Math.c,178 :: 		
Div_16x16_S_L5:
;__Lib_Math.c,179 :: 		
0x0304	0x1FAA    	ROL        R26
;__Lib_Math.c,180 :: 		
0x0306	0x1FBB    	ROL        R27
;__Lib_Math.c,181 :: 		
0x0308	0x17A6    	CP         R26, R22
;__Lib_Math.c,182 :: 		
0x030A	0x07B7    	CPC        R27, R23
;__Lib_Math.c,183 :: 		
0x030C	0xF010    	BRCS       Div_16x16_S_L6
;__Lib_Math.c,184 :: 		
0x030E	0x1BA6    	SUB        R26, R22
;__Lib_Math.c,185 :: 		
0x0310	0x0BB7    	SBC        R27, R23
;__Lib_Math.c,186 :: 		
Div_16x16_S_L6:
;__Lib_Math.c,187 :: 		
0x0312	0x1F88    	ROL        R24
;__Lib_Math.c,188 :: 		
0x0314	0x1F99    	ROL        R25
;__Lib_Math.c,189 :: 		
0x0316	0x955A    	DEC        R21
;__Lib_Math.c,190 :: 		
0x0318	0xF7A9    	BRNE       Div_16x16_S_L5
;__Lib_Math.c,191 :: 		
0x031A	0x9580    	COM        R24
;__Lib_Math.c,192 :: 		
0x031C	0x9590    	COM        R25
;__Lib_Math.c,193 :: 		
0x031E	0x01BC    	MOVW       R22, R24
;__Lib_Math.c,194 :: 		
0x0320	0x01CD    	MOVW       R24, R26
;__Lib_Math.c,195 :: 		
0x0322	0x9508    	RET
;__Lib_Math.c,198 :: 		
L_end_Div_16x16_S:
0x0324	0x9508    	RET
; end of _Div_16x16_S
_print_D:
0x0AF4	0x93CF    	PUSH       R28
0x0AF6	0x93DF    	PUSH       R29
0x0AF8	0xB7CD    	IN         R28, SPL+0
0x0AFA	0xB7DE    	IN         R29, SPL+1
0x0AFC	0x972A    	SBIW       R28, 10
0x0AFE	0xBFCD    	OUT        SPL+0, R28
0x0B00	0xBFDE    	OUT        SPL+1, R29
0x0B02	0x9621    	ADIW       R28, 1
;st7735.c,640 :: 		void print_D(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, unsigned int value, unsigned char points)
0x0B04	0x850E    	LDD        R16, Y+14
0x0B06	0x851F    	LDD        R17, Y+15
0x0B08	0x870E    	STD        Y+14, R16
0x0B0A	0x871F    	STD        Y+15, R17
;st7735.c,642 :: 		unsigned char ch[6] = {0x2E, 0x20, 0x20, 0x20, 0x20, 0x20};
0x0B0C	0xE2BE    	LDI        R27, 46
0x0B0E	0x83B8    	STD        Y+0, R27
0x0B10	0xE2B0    	LDI        R27, 32
0x0B12	0x83B9    	STD        Y+1, R27
0x0B14	0xE2B0    	LDI        R27, 32
0x0B16	0x83BA    	STD        Y+2, R27
0x0B18	0xE2B0    	LDI        R27, 32
0x0B1A	0x83BB    	STD        Y+3, R27
0x0B1C	0xE2B0    	LDI        R27, 32
0x0B1E	0x83BC    	STD        Y+4, R27
0x0B20	0xE2B0    	LDI        R27, 32
0x0B22	0x83BD    	STD        Y+5, R27
;st7735.c,644 :: 		ch[1] = ((value / 1000) + 0x30);
0x0B24	0x018E    	MOVW       R16, R28
0x0B26	0x5F0F    	SUBI       R16, 255
0x0B28	0x4F1F    	SBCI       R17, 255
0x0B2A	0x8708    	STD        Y+8, R16
0x0B2C	0x8719    	STD        Y+9, R17
0x0B2E	0xEE48    	LDI        R20, 232
0x0B30	0xE053    	LDI        R21, 3
0x0B32	0x850E    	LDD        R16, Y+14
0x0B34	0x851F    	LDD        R17, Y+15
0x0B36	0xDBB9    	RCALL      _Div_16x16_U+0
0x0B38	0x018C    	MOVW       R16, R24
0x0B3A	0x2F20    	MOV        R18, R16
0x0B3C	0x5D20    	SUBI       R18, 208
0x0B3E	0x8508    	LDD        R16, Y+8
0x0B40	0x8519    	LDD        R17, Y+9
0x0B42	0x01F8    	MOVW       R30, R16
0x0B44	0x8320    	ST         Z, R18
;st7735.c,646 :: 		if(points > 1)
0x0B46	0xE001    	LDI        R16, 1
0x0B48	0x1509    	CP         R16, R9
0x0B4A	0xF008    	BRLO       L__print_D266
0x0B4C	0xC041    	RJMP       L_print_D114
L__print_D266:
;st7735.c,648 :: 		ch[2] = (((value % 1000) / 100) + 0x30);
0x0B4E	0x018E    	MOVW       R16, R28
0x0B50	0x5F0E    	SUBI       R16, 254
0x0B52	0x4F1F    	SBCI       R17, 255
0x0B54	0x8708    	STD        Y+8, R16
0x0B56	0x8719    	STD        Y+9, R17
0x0B58	0xEE48    	LDI        R20, 232
0x0B5A	0xE053    	LDI        R21, 3
0x0B5C	0x850E    	LDD        R16, Y+14
0x0B5E	0x851F    	LDD        R17, Y+15
0x0B60	0xDBA4    	RCALL      _Div_16x16_U+0
0x0B62	0x018D    	MOVW       R16, R26
0x0B64	0xE644    	LDI        R20, 100
0x0B66	0xE050    	LDI        R21, 0
0x0B68	0xDBA0    	RCALL      _Div_16x16_U+0
0x0B6A	0x018C    	MOVW       R16, R24
0x0B6C	0x2F20    	MOV        R18, R16
0x0B6E	0x5D20    	SUBI       R18, 208
0x0B70	0x8508    	LDD        R16, Y+8
0x0B72	0x8519    	LDD        R17, Y+9
0x0B74	0x01F8    	MOVW       R30, R16
0x0B76	0x8320    	ST         Z, R18
;st7735.c,650 :: 		if(points > 2)
0x0B78	0xE002    	LDI        R16, 2
0x0B7A	0x1509    	CP         R16, R9
0x0B7C	0xF548    	BRSH       L_print_D115
L__print_D267:
;st7735.c,652 :: 		ch[3] = (((value % 100) / 10) + 0x30);
0x0B7E	0x018E    	MOVW       R16, R28
0x0B80	0x5F0D    	SUBI       R16, 253
0x0B82	0x4F1F    	SBCI       R17, 255
0x0B84	0x8708    	STD        Y+8, R16
0x0B86	0x8719    	STD        Y+9, R17
0x0B88	0xE644    	LDI        R20, 100
0x0B8A	0xE050    	LDI        R21, 0
0x0B8C	0x850E    	LDD        R16, Y+14
0x0B8E	0x851F    	LDD        R17, Y+15
0x0B90	0xDB8C    	RCALL      _Div_16x16_U+0
0x0B92	0x018D    	MOVW       R16, R26
0x0B94	0xE04A    	LDI        R20, 10
0x0B96	0xE050    	LDI        R21, 0
0x0B98	0xDB88    	RCALL      _Div_16x16_U+0
0x0B9A	0x018C    	MOVW       R16, R24
0x0B9C	0x2F20    	MOV        R18, R16
0x0B9E	0x5D20    	SUBI       R18, 208
0x0BA0	0x8508    	LDD        R16, Y+8
0x0BA2	0x8519    	LDD        R17, Y+9
0x0BA4	0x01F8    	MOVW       R30, R16
0x0BA6	0x8320    	ST         Z, R18
;st7735.c,654 :: 		if(points > 3)
0x0BA8	0xE003    	LDI        R16, 3
0x0BAA	0x1509    	CP         R16, R9
0x0BAC	0xF488    	BRSH       L_print_D116
L__print_D268:
;st7735.c,656 :: 		ch[4] = ((value % 10) + 0x30);
0x0BAE	0x018E    	MOVW       R16, R28
0x0BB0	0x5F0C    	SUBI       R16, 252
0x0BB2	0x4F1F    	SBCI       R17, 255
0x0BB4	0x8708    	STD        Y+8, R16
0x0BB6	0x8719    	STD        Y+9, R17
0x0BB8	0xE04A    	LDI        R20, 10
0x0BBA	0xE050    	LDI        R21, 0
0x0BBC	0x850E    	LDD        R16, Y+14
0x0BBE	0x851F    	LDD        R17, Y+15
0x0BC0	0xDB74    	RCALL      _Div_16x16_U+0
0x0BC2	0x018D    	MOVW       R16, R26
0x0BC4	0x2F20    	MOV        R18, R16
0x0BC6	0x5D20    	SUBI       R18, 208
0x0BC8	0x8508    	LDD        R16, Y+8
0x0BCA	0x8519    	LDD        R17, Y+9
0x0BCC	0x01F8    	MOVW       R30, R16
0x0BCE	0x8320    	ST         Z, R18
;st7735.c,657 :: 		}
L_print_D116:
;st7735.c,658 :: 		}
L_print_D115:
;st7735.c,659 :: 		}
L_print_D114:
;st7735.c,661 :: 		print_str(x_pos, y_pos, font_size, colour, back_colour, ch);
0x0BD0	0x018E    	MOVW       R16, R28
0x0BD2	0x931F    	PUSH       R17
0x0BD4	0x930F    	PUSH       R16
0x0BD6	0xD501    	RCALL      _print_str+0
0x0BD8	0xB7AD    	IN         R26, SPL+0
0x0BDA	0xB7BE    	IN         R27, SPL+1
0x0BDC	0x9612    	ADIW       R26, 2
0x0BDE	0xBFAD    	OUT        SPL+0, R26
0x0BE0	0xBFBE    	OUT        SPL+1, R27
;st7735.c,662 :: 		}
L_end_print_D:
0x0BE2	0x9629    	ADIW       R28, 9
0x0BE4	0xBFCD    	OUT        SPL+0, R28
0x0BE6	0xBFDE    	OUT        SPL+1, R29
0x0BE8	0x91DF    	POP        R29
0x0BEA	0x91CF    	POP        R28
0x0BEC	0x9508    	RET
; end of _print_D
_Div_16x16_U:
;__Lib_Math.c,208 :: 		
;__Lib_Math.c,211 :: 		
0x02AA	0x01C8    	MOVW       R24, R16
;__Lib_Math.c,212 :: 		
0x02AC	0x01BA    	MOVW       R22, R20
;__Lib_Math.c,214 :: 		
0x02AE	0x1BAA    	SUB        R26, R26
;__Lib_Math.c,215 :: 		
0x02B0	0x1BBB    	SUB        R27, R27
;__Lib_Math.c,216 :: 		
0x02B2	0xE151    	LDI        R21, 17
;__Lib_Math.c,217 :: 		
0x02B4	0xC007    	RJMP       Div_16x16_U_L2
;__Lib_Math.c,218 :: 		
Div_16x16_U_L1:
;__Lib_Math.c,219 :: 		
0x02B6	0x1FAA    	ROL        R26
;__Lib_Math.c,220 :: 		
0x02B8	0x1FBB    	ROL        R27
;__Lib_Math.c,221 :: 		
0x02BA	0x17A6    	CP         R26, R22
;__Lib_Math.c,222 :: 		
0x02BC	0x07B7    	CPC        R27, R23
;__Lib_Math.c,223 :: 		
0x02BE	0xF010    	BRCS       Div_16x16_U_L2
;__Lib_Math.c,224 :: 		
0x02C0	0x1BA6    	SUB        R26, R22
;__Lib_Math.c,225 :: 		
0x02C2	0x0BB7    	SBC        R27, R23
;__Lib_Math.c,226 :: 		
Div_16x16_U_L2:
;__Lib_Math.c,227 :: 		
0x02C4	0x1F88    	ROL        R24
;__Lib_Math.c,228 :: 		
0x02C6	0x1F99    	ROL        R25
;__Lib_Math.c,229 :: 		
0x02C8	0x955A    	DEC        R21
;__Lib_Math.c,230 :: 		
0x02CA	0xF7A9    	BRNE       Div_16x16_U_L1
;__Lib_Math.c,231 :: 		
0x02CC	0x9580    	COM        R24
;__Lib_Math.c,232 :: 		
0x02CE	0x9590    	COM        R25
;__Lib_Math.c,235 :: 		
L_end_Div_16x16_U:
0x02D0	0x9508    	RET
; end of _Div_16x16_U
_float_fpint:
;__Lib_MathDouble.c,190 :: 		
;__Lib_MathDouble.c,191 :: 		
0x0AAC	0xDBE1    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,193 :: 		
0x0AAE	0xF0F1    	BREQ       L0077
;__Lib_MathDouble.c,194 :: 		
0x0AB0	0x2355    	TST        R21
;__Lib_MathDouble.c,195 :: 		
0x0AB2	0xF0C2    	BRMI       L0073
;__Lib_MathDouble.c,196 :: 		
0x0AB4	0x314F    	CPI        R20, 31
;__Lib_MathDouble.c,197 :: 		
0x0AB6	0xF4A8    	BRCC       L0072int
;__Lib_MathDouble.c,198 :: 		
0x0AB8	0x3147    	CPI        R20, 23
;__Lib_MathDouble.c,199 :: 		
0x0ABA	0xF0C1    	BREQ       L0077
;__Lib_MathDouble.c,200 :: 		
0x0ABC	0xF450    	BRCC       L006A
;__Lib_MathDouble.c,201 :: 		
0x0ABE	0x9541    	NEG        R20
;__Lib_MathDouble.c,202 :: 		
0x0AC0	0x5E49    	SUBI       R20, 233
;__Lib_MathDouble.c,203 :: 		
0x0AC2	0xC005    	RJMP       L0068
;__Lib_MathDouble.c,204 :: 		
L0063:
;__Lib_MathDouble.c,205 :: 		
0x0AC4	0x9535    	ASR        R19
;__Lib_MathDouble.c,206 :: 		
0x0AC6	0x9527    	ROR        R18
;__Lib_MathDouble.c,207 :: 		
0x0AC8	0x9517    	ROR        R17
;__Lib_MathDouble.c,208 :: 		
0x0ACA	0x9507    	ROR        R16
;__Lib_MathDouble.c,209 :: 		
0x0ACC	0x954A    	DEC        R20
;__Lib_MathDouble.c,210 :: 		
L0068:
;__Lib_MathDouble.c,211 :: 		
0x0ACE	0xF7D1    	BRNE       L0063
;__Lib_MathDouble.c,212 :: 		
0x0AD0	0xC00D    	RJMP       L0077
;__Lib_MathDouble.c,213 :: 		
L006A:
;__Lib_MathDouble.c,214 :: 		
0x0AD2	0x5147    	SUBI       R20, 23
;__Lib_MathDouble.c,215 :: 		
L006B:
;__Lib_MathDouble.c,216 :: 		
0x0AD4	0x0F00    	LSL        R16
;__Lib_MathDouble.c,217 :: 		
0x0AD6	0x1F11    	ROL        R17
;__Lib_MathDouble.c,218 :: 		
0x0AD8	0x1F22    	ROL        R18
;__Lib_MathDouble.c,219 :: 		
0x0ADA	0x1F33    	ROL        R19
;__Lib_MathDouble.c,220 :: 		
0x0ADC	0x954A    	DEC        R20
;__Lib_MathDouble.c,221 :: 		
0x0ADE	0xF7D1    	BRNE       L006B
;__Lib_MathDouble.c,222 :: 		
0x0AE0	0xC005    	RJMP       L0077
;__Lib_MathDouble.c,223 :: 		
L0072int:
;__Lib_MathDouble.c,224 :: 		
0x0AE2	0xE73F    	LDI        R19, 127
;__Lib_MathDouble.c,225 :: 		
L0073:
;__Lib_MathDouble.c,226 :: 		
0x0AE4	0x2F23    	MOV        R18, R19
;__Lib_MathDouble.c,227 :: 		
0x0AE6	0x2F13    	MOV        R17, R19
;__Lib_MathDouble.c,228 :: 		
0x0AE8	0x2F03    	MOV        R16, R19
;__Lib_MathDouble.c,229 :: 		
0x0AEA	0xC003    	RJMP       L007A
;__Lib_MathDouble.c,230 :: 		
L0077:
;__Lib_MathDouble.c,231 :: 		
0x0AEC	0x2366    	TST        R22
;__Lib_MathDouble.c,232 :: 		
0x0AEE	0xF009    	BREQ       L007A
;__Lib_MathDouble.c,234 :: 		
0x0AF0	0xDC1A    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,236 :: 		
L007A:
;__Lib_MathDouble.c,238 :: 		
L_end_float_fpint:
0x0AF2	0x9508    	RET
; end of _float_fpint
_float_unpacku:
;__Lib_MathDouble.c,148 :: 		
;__Lib_MathDouble.c,149 :: 		
0x0270	0xDFD6    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,151 :: 		
0x0272	0xF079    	BREQ       L016E
;__Lib_MathDouble.c,152 :: 		
0x0274	0x2F63    	MOV        R22, R19
;__Lib_MathDouble.c,153 :: 		
0x0276	0x7860    	ANDI       R22, 128
;__Lib_MathDouble.c,154 :: 		
0x0278	0x0F22    	LSL        R18
;__Lib_MathDouble.c,155 :: 		
0x027A	0x1F33    	ROL        R19
;__Lib_MathDouble.c,156 :: 		
0x027C	0x2F43    	MOV        R20, R19
;__Lib_MathDouble.c,157 :: 		
0x027E	0xE75F    	LDI        R21, 127
;__Lib_MathDouble.c,158 :: 		
0x0280	0x1B45    	SUB        R20, R21
;__Lib_MathDouble.c,159 :: 		
0x0282	0x2755    	CLR        R21
;__Lib_MathDouble.c,160 :: 		
0x0284	0x4050    	SBCI       R21, 0
;__Lib_MathDouble.c,161 :: 		
0x0286	0x9526    	LSR        R18
;__Lib_MathDouble.c,162 :: 		
0x0288	0xE830    	LDI        R19, 128
;__Lib_MathDouble.c,163 :: 		
0x028A	0x2B23    	OR         R18, R19
;__Lib_MathDouble.c,164 :: 		
0x028C	0x2733    	CLR        R19
;__Lib_MathDouble.c,165 :: 		
0x028E	0x9498    	CLZ
;__Lib_MathDouble.c,166 :: 		
0x0290	0xC003    	RJMP       L016Ex
;__Lib_MathDouble.c,167 :: 		
L016E:
;__Lib_MathDouble.c,168 :: 		
0x0292	0x2744    	CLR        R20
;__Lib_MathDouble.c,169 :: 		
0x0294	0x2755    	CLR        R21
;__Lib_MathDouble.c,170 :: 		
0x0296	0x2766    	CLR        R22
;__Lib_MathDouble.c,171 :: 		
L016Ex:
;__Lib_MathDouble.c,173 :: 		
L_end_float_unpacku:
0x0298	0x9508    	RET
; end of _float_unpacku
_float_tstr16_r19:
;__Lib_MathDouble.c,17 :: 		
;__Lib_MathDouble.c,19 :: 		
0x021E	0x2300    	TST        R16
;__Lib_MathDouble.c,20 :: 		
0x0220	0xF429    	BRNE       L015C
;__Lib_MathDouble.c,21 :: 		
0x0222	0x2311    	TST        R17
;__Lib_MathDouble.c,22 :: 		
0x0224	0xF419    	BRNE       L015C
;__Lib_MathDouble.c,23 :: 		
0x0226	0x2322    	TST        R18
;__Lib_MathDouble.c,24 :: 		
0x0228	0xF409    	BRNE       L015C
;__Lib_MathDouble.c,25 :: 		
0x022A	0x2333    	TST        R19
;__Lib_MathDouble.c,26 :: 		
L015C:
;__Lib_MathDouble.c,28 :: 		
L_end_float_tstr16_r19:
0x022C	0x9508    	RET
; end of _float_tstr16_r19
_float_neg32:
;__Lib_MathDouble.c,4 :: 		
;__Lib_MathDouble.c,6 :: 		
0x0326	0x9500    	COM        R16
;__Lib_MathDouble.c,7 :: 		
0x0328	0x9510    	COM        R17
;__Lib_MathDouble.c,8 :: 		
0x032A	0x9520    	COM        R18
;__Lib_MathDouble.c,9 :: 		
0x032C	0x9530    	COM        R19
;__Lib_MathDouble.c,10 :: 		
0x032E	0x5F0F    	SUBI       R16, 255
;__Lib_MathDouble.c,11 :: 		
0x0330	0x4F1F    	SBCI       R17, 255
;__Lib_MathDouble.c,12 :: 		
0x0332	0x4F2F    	SBCI       R18, 255
;__Lib_MathDouble.c,13 :: 		
0x0334	0x4F3F    	SBCI       R19, 255
;__Lib_MathDouble.c,15 :: 		
L_end_float_neg32:
0x0336	0x9508    	RET
; end of _float_neg32
_float_slong2fp:
;__Lib_MathDouble.c,122 :: 		
;__Lib_MathDouble.c,124 :: 		
0x04EC	0x94E8    	BCLR       6
;__Lib_MathDouble.c,126 :: 		
0x04EE	0xDF24    	RCALL      _float_long2fp+0
;__Lib_MathDouble.c,127 :: 		
L_end_float_slong2fp:
0x04F0	0x9508    	RET
; end of _float_slong2fp
_float_long2fp:
;__Lib_MathDouble.c,105 :: 		
;__Lib_MathDouble.c,107 :: 		
0x0338	0xE147    	LDI        R20, 23
;__Lib_MathDouble.c,108 :: 		
0x033A	0x2766    	CLR        R22
;__Lib_MathDouble.c,109 :: 		
0x033C	0x2755    	CLR        R21
;__Lib_MathDouble.c,110 :: 		
0x033E	0xF026    	BRTS       L00FC
;__Lib_MathDouble.c,111 :: 		
0x0340	0x2333    	TST        R19
;__Lib_MathDouble.c,112 :: 		
0x0342	0xF412    	BRPL       L00FC
;__Lib_MathDouble.c,114 :: 		
0x0344	0xDFF0    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,116 :: 		
0x0346	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,117 :: 		
L00FC:
;__Lib_MathDouble.c,119 :: 		
0x0348	0xDED6    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,120 :: 		
L_end_float_long2fp:
0x034A	0x9508    	RET
; end of _float_long2fp
_float_normalize_and_pack:
;__Lib_MathDouble.c,45 :: 		
;__Lib_MathDouble.c,46 :: 		
0x00F6	0xD093    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,48 :: 		
0x00F8	0xF111    	BREQ       L0196
;__Lib_MathDouble.c,49 :: 		
0x00FA	0x939F    	PUSH       R25
;__Lib_MathDouble.c,50 :: 		
0x00FC	0x938F    	PUSH       R24
;__Lib_MathDouble.c,51 :: 		
0x00FE	0xE78E    	LDI        R24, 126
;__Lib_MathDouble.c,52 :: 		
0x0100	0xE090    	LDI        R25, 0
;__Lib_MathDouble.c,53 :: 		
L0178:
;__Lib_MathDouble.c,54 :: 		
0x0102	0x2333    	TST        R19
;__Lib_MathDouble.c,55 :: 		
0x0104	0xF051    	BREQ       L0184
;__Lib_MathDouble.c,56 :: 		
0x0106	0x9536    	LSR        R19
;__Lib_MathDouble.c,57 :: 		
0x0108	0x9527    	ROR        R18
;__Lib_MathDouble.c,58 :: 		
0x010A	0x9517    	ROR        R17
;__Lib_MathDouble.c,59 :: 		
0x010C	0x9507    	ROR        R16
;__Lib_MathDouble.c,60 :: 		
0x010E	0x1748    	CP         R20, R24
;__Lib_MathDouble.c,61 :: 		
0x0110	0x0759    	CPC        R21, R25
;__Lib_MathDouble.c,62 :: 		
0x0112	0xF4B4    	BRGE       L0197
;__Lib_MathDouble.c,63 :: 		
0x0114	0x5F4F    	SUBI       R20, 255
;__Lib_MathDouble.c,64 :: 		
0x0116	0x4F5F    	SBCI       R21, 255
;__Lib_MathDouble.c,65 :: 		
0x0118	0xCFF4    	RJMP       L0178
;__Lib_MathDouble.c,66 :: 		
L0184:
;__Lib_MathDouble.c,67 :: 		
0x011A	0x9580    	COM        R24
;__Lib_MathDouble.c,68 :: 		
0x011C	0x9590    	COM        R25
;__Lib_MathDouble.c,69 :: 		
0x011E	0x9601    	ADIW       R24, 1
;__Lib_MathDouble.c,70 :: 		
L0187:
;__Lib_MathDouble.c,71 :: 		
0x0120	0x2322    	TST        R18
;__Lib_MathDouble.c,72 :: 		
0x0122	0xF09A    	BRMI       L019C
;__Lib_MathDouble.c,73 :: 		
0x0124	0x0F00    	LSL        R16
;__Lib_MathDouble.c,74 :: 		
0x0126	0x1F11    	ROL        R17
;__Lib_MathDouble.c,75 :: 		
0x0128	0x1F22    	ROL        R18
;__Lib_MathDouble.c,76 :: 		
0x012A	0x1748    	CP         R20, R24
;__Lib_MathDouble.c,77 :: 		
0x012C	0x0759    	CPC        R21, R25
;__Lib_MathDouble.c,78 :: 		
0x012E	0xF01C    	BRLT       L0192
;__Lib_MathDouble.c,79 :: 		
0x0130	0x5041    	SUBI       R20, 1
;__Lib_MathDouble.c,80 :: 		
0x0132	0x4050    	SBCI       R21, 0
;__Lib_MathDouble.c,81 :: 		
0x0134	0xCFF5    	RJMP       L0187
;__Lib_MathDouble.c,82 :: 		
L0192:
;__Lib_MathDouble.c,83 :: 		
0x0136	0x2700    	CLR        R16
;__Lib_MathDouble.c,84 :: 		
0x0138	0x2711    	CLR        R17
;__Lib_MathDouble.c,85 :: 		
0x013A	0x2722    	CLR        R18
;__Lib_MathDouble.c,86 :: 		
0x013C	0x2733    	CLR        R19
;__Lib_MathDouble.c,87 :: 		
L0196:
;__Lib_MathDouble.c,88 :: 		
0x013E	0xC008    	RJMP       L0196x
;__Lib_MathDouble.c,89 :: 		
L0197:
;__Lib_MathDouble.c,90 :: 		
0x0140	0x2733    	CLR        R19
;__Lib_MathDouble.c,91 :: 		
0x0142	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,92 :: 		
0x0144	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,93 :: 		
0x0146	0xE72F    	LDI        R18, 127
;__Lib_MathDouble.c,94 :: 		
0x0148	0x2F32    	MOV        R19, R18
;__Lib_MathDouble.c,95 :: 		
L019C:
;__Lib_MathDouble.c,96 :: 		
0x014A	0x918F    	POP        R24
;__Lib_MathDouble.c,97 :: 		
0x014C	0x919F    	POP        R25
;__Lib_MathDouble.c,99 :: 		
0x014E	0xDF95    	RCALL      _float_pack+0
;__Lib_MathDouble.c,101 :: 		
L0196x:
;__Lib_MathDouble.c,103 :: 		
L_end_float_normalize_and_pack:
0x0150	0x9508    	RET
; end of _float_normalize_and_pack
_float_pack:
;__Lib_MathDouble.c,30 :: 		
;__Lib_MathDouble.c,31 :: 		
0x007A	0xD0D1    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,33 :: 		
0x007C	0xF039    	BREQ       L01A7
;__Lib_MathDouble.c,34 :: 		
0x007E	0x5841    	SUBI       R20, 129
;__Lib_MathDouble.c,35 :: 		
0x0080	0x4F5F    	SBCI       R21, 255
;__Lib_MathDouble.c,36 :: 		
0x0082	0x2F34    	MOV        R19, R20
;__Lib_MathDouble.c,37 :: 		
0x0084	0x0F22    	LSL        R18
;__Lib_MathDouble.c,38 :: 		
0x0086	0x9536    	LSR        R19
;__Lib_MathDouble.c,39 :: 		
0x0088	0x9527    	ROR        R18
;__Lib_MathDouble.c,40 :: 		
0x008A	0x2B36    	OR         R19, R22
;__Lib_MathDouble.c,41 :: 		
L01A7:
;__Lib_MathDouble.c,43 :: 		
L_end_float_pack:
0x008C	0x9508    	RET
; end of _float_pack
_float_fpsub1:
;__Lib_MathDouble.c,391 :: 		
;__Lib_MathDouble.c,393 :: 		
0x04A2	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,394 :: 		
0x04A4	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,395 :: 		
0x04A6	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,396 :: 		
0x04A8	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,398 :: 		
0x04AA	0xDF50    	RCALL      _float_fpsub+0
;__Lib_MathDouble.c,400 :: 		
0x04AC	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,401 :: 		
0x04AE	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,402 :: 		
0x04B0	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,403 :: 		
0x04B2	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,405 :: 		
L_end_float_fpsub1:
0x04B4	0x9508    	RET
; end of _float_fpsub1
_float_fpsub:
;__Lib_MathDouble.c,384 :: 		
;__Lib_MathDouble.c,386 :: 		
0x034C	0x9468    	SET
;__Lib_MathDouble.c,388 :: 		
0x034E	0xDF01    	RCALL      _float_fpadd_alt+0
;__Lib_MathDouble.c,389 :: 		
L_end_float_fpsub:
0x0350	0x9508    	RET
; end of _float_fpsub
_float_fpadd_alt:
;__Lib_MathDouble.c,240 :: 		
;__Lib_MathDouble.c,241 :: 		
0x0152	0xDF8C    	RCALL      _float_unpacks+0
;__Lib_MathDouble.c,243 :: 		
0x0154	0xF409    	BRNE       L008A
;__Lib_MathDouble.c,244 :: 		
0x0156	0xC041    	RJMP       L00CC
;__Lib_MathDouble.c,245 :: 		
L008A:
;__Lib_MathDouble.c,246 :: 		
0x0158	0x2EE6    	MOV        R14, R22
;__Lib_MathDouble.c,247 :: 		
0x015A	0x2ED5    	MOV        R13, R21
;__Lib_MathDouble.c,248 :: 		
0x015C	0x2EC4    	MOV        R12, R20
;__Lib_MathDouble.c,249 :: 		
0x015E	0x2EB3    	MOV        R11, R19
;__Lib_MathDouble.c,250 :: 		
0x0160	0x2EA2    	MOV        R10, R18
;__Lib_MathDouble.c,251 :: 		
0x0162	0x2E91    	MOV        R9, R17
;__Lib_MathDouble.c,252 :: 		
0x0164	0x2E80    	MOV        R8, R16
;__Lib_MathDouble.c,253 :: 		
0x0166	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,254 :: 		
0x0168	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,255 :: 		
0x016A	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,256 :: 		
0x016C	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,258 :: 		
0x016E	0xDF7E    	RCALL      _float_unpacks+0
;__Lib_MathDouble.c,260 :: 		
0x0170	0xF409    	BRNE       L0098
;__Lib_MathDouble.c,261 :: 		
0x0172	0xC03D    	RJMP       L00D6
;__Lib_MathDouble.c,262 :: 		
L0098:
;__Lib_MathDouble.c,263 :: 		
0x0174	0x2F84    	MOV        R24, R20
;__Lib_MathDouble.c,264 :: 		
0x0176	0x2F95    	MOV        R25, R21
;__Lib_MathDouble.c,265 :: 		
0x0178	0x198C    	SUB        R24, R12
;__Lib_MathDouble.c,266 :: 		
0x017A	0x099D    	SBC        R25, R13
;__Lib_MathDouble.c,267 :: 		
0x017C	0xF0B9    	BREQ       L00B4
;__Lib_MathDouble.c,268 :: 		
0x017E	0xF472    	BRPL       L00AC
;__Lib_MathDouble.c,269 :: 		
0x0180	0x9590    	COM        R25
;__Lib_MathDouble.c,270 :: 		
0x0182	0x9580    	COM        R24
;__Lib_MathDouble.c,271 :: 		
0x0184	0x9601    	ADIW       R24, 1
;__Lib_MathDouble.c,272 :: 		
0x0186	0x2D4C    	MOV        R20, R12
;__Lib_MathDouble.c,273 :: 		
0x0188	0x2D5D    	MOV        R21, R13
;__Lib_MathDouble.c,274 :: 		
0x018A	0x3188    	CPI        R24, 24
;__Lib_MathDouble.c,275 :: 		
0x018C	0xF580    	BRCC       L00D6
;__Lib_MathDouble.c,276 :: 		
L00A5:
;__Lib_MathDouble.c,277 :: 		
0x018E	0x9535    	ASR        R19
;__Lib_MathDouble.c,278 :: 		
0x0190	0x9527    	ROR        R18
;__Lib_MathDouble.c,279 :: 		
0x0192	0x9517    	ROR        R17
;__Lib_MathDouble.c,280 :: 		
0x0194	0x9507    	ROR        R16
;__Lib_MathDouble.c,281 :: 		
0x0196	0x9701    	SBIW       R24, 1
;__Lib_MathDouble.c,282 :: 		
0x0198	0xF7D1    	BRNE       L00A5
;__Lib_MathDouble.c,283 :: 		
0x019A	0xC008    	RJMP       L00B4
;__Lib_MathDouble.c,284 :: 		
L00AC:
;__Lib_MathDouble.c,285 :: 		
0x019C	0x3188    	CPI        R24, 24
;__Lib_MathDouble.c,286 :: 		
0x019E	0xF4E8    	BRCC       L00CC
;__Lib_MathDouble.c,287 :: 		
L00AE:
;__Lib_MathDouble.c,288 :: 		
0x01A0	0x94B5    	ASR        R11
;__Lib_MathDouble.c,289 :: 		
0x01A2	0x94A7    	ROR        R10
;__Lib_MathDouble.c,290 :: 		
0x01A4	0x9497    	ROR        R9
;__Lib_MathDouble.c,291 :: 		
0x01A6	0x9487    	ROR        R8
;__Lib_MathDouble.c,292 :: 		
0x01A8	0x9701    	SBIW       R24, 1
;__Lib_MathDouble.c,293 :: 		
0x01AA	0xF7D1    	BRNE       L00AE
;__Lib_MathDouble.c,294 :: 		
L00B4:
;__Lib_MathDouble.c,295 :: 		
0x01AC	0x2766    	CLR        R22
;__Lib_MathDouble.c,296 :: 		
0x01AE	0xF02E    	BRTS       L00BB
;__Lib_MathDouble.c,297 :: 		
0x01B0	0x0D08    	ADD        R16, R8
;__Lib_MathDouble.c,298 :: 		
0x01B2	0x1D19    	ADC        R17, R9
;__Lib_MathDouble.c,299 :: 		
0x01B4	0x1D2A    	ADC        R18, R10
;__Lib_MathDouble.c,300 :: 		
0x01B6	0x1D3B    	ADC        R19, R11
;__Lib_MathDouble.c,301 :: 		
0x01B8	0xC009    	RJMP       L00C4
;__Lib_MathDouble.c,302 :: 		
L00BB:
;__Lib_MathDouble.c,303 :: 		
0x01BA	0x1A80    	SUB        R8, R16
;__Lib_MathDouble.c,304 :: 		
0x01BC	0x0A91    	SBC        R9, R17
;__Lib_MathDouble.c,305 :: 		
0x01BE	0x0AA2    	SBC        R10, R18
;__Lib_MathDouble.c,306 :: 		
0x01C0	0x0AB3    	SBC        R11, R19
;__Lib_MathDouble.c,307 :: 		
0x01C2	0x2D08    	MOV        R16, R8
;__Lib_MathDouble.c,308 :: 		
0x01C4	0x2D19    	MOV        R17, R9
;__Lib_MathDouble.c,309 :: 		
0x01C6	0x2D2A    	MOV        R18, R10
;__Lib_MathDouble.c,310 :: 		
0x01C8	0x2D3B    	MOV        R19, R11
;__Lib_MathDouble.c,311 :: 		
0x01CA	0x2333    	TST        R19
;__Lib_MathDouble.c,312 :: 		
L00C4:
;__Lib_MathDouble.c,313 :: 		
0x01CC	0xF412    	BRPL       L00C7
;__Lib_MathDouble.c,315 :: 		
0x01CE	0xD0AB    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,317 :: 		
0x01D0	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,318 :: 		
L00C7:
;__Lib_MathDouble.c,320 :: 		
0x01D2	0xDF91    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,322 :: 		
0x01D4	0xC001    	RJMP       L00CA
;__Lib_MathDouble.c,323 :: 		
L00C9:
;__Lib_MathDouble.c,325 :: 		
0x01D6	0xDF51    	RCALL      _float_pack+0
;__Lib_MathDouble.c,327 :: 		
L00CA:
;__Lib_MathDouble.c,328 :: 		
0x01D8	0xC016    	RJMP       L00D6x
;__Lib_MathDouble.c,329 :: 		
L00CC:
;__Lib_MathDouble.c,330 :: 		
0x01DA	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,331 :: 		
0x01DC	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,332 :: 		
0x01DE	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,333 :: 		
0x01E0	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,334 :: 		
0x01E2	0xF7D6    	BRTC       L00CA
;__Lib_MathDouble.c,336 :: 		
0x01E4	0xD01C    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,338 :: 		
0x01E6	0xF3C1    	BREQ       L00CA
;__Lib_MathDouble.c,339 :: 		
0x01E8	0xE840    	LDI        R20, 128
;__Lib_MathDouble.c,340 :: 		
0x01EA	0x2734    	EOR        R19, R20
;__Lib_MathDouble.c,341 :: 		
0x01EC	0xCFF5    	RJMP       L00CA
;__Lib_MathDouble.c,342 :: 		
L00D6:
;__Lib_MathDouble.c,343 :: 		
0x01EE	0x2D08    	MOV        R16, R8
;__Lib_MathDouble.c,344 :: 		
0x01F0	0x2D19    	MOV        R17, R9
;__Lib_MathDouble.c,345 :: 		
0x01F2	0x2D2A    	MOV        R18, R10
;__Lib_MathDouble.c,346 :: 		
0x01F4	0x2D3B    	MOV        R19, R11
;__Lib_MathDouble.c,347 :: 		
0x01F6	0x2D4C    	MOV        R20, R12
;__Lib_MathDouble.c,348 :: 		
0x01F8	0x2D5D    	MOV        R21, R13
;__Lib_MathDouble.c,349 :: 		
0x01FA	0x2D6E    	MOV        R22, R14
;__Lib_MathDouble.c,350 :: 		
0x01FC	0x2333    	TST        R19
;__Lib_MathDouble.c,351 :: 		
0x01FE	0xF75A    	BRPL       L00C9
;__Lib_MathDouble.c,353 :: 		
0x0200	0xD092    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,355 :: 		
0x0202	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,356 :: 		
0x0204	0xCFE8    	RJMP       L00C9
;__Lib_MathDouble.c,357 :: 		
L00D6x:
;__Lib_MathDouble.c,359 :: 		
L_end_float_fpadd_alt:
0x0206	0x9508    	RET
; end of _float_fpadd_alt
_float_unpacks:
;__Lib_MathDouble.c,175 :: 		
;__Lib_MathDouble.c,176 :: 		
0x006C	0xD101    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,178 :: 		
0x006E	0xF021    	BREQ       L0154
;__Lib_MathDouble.c,179 :: 		
0x0070	0x2366    	TST        R22
;__Lib_MathDouble.c,180 :: 		
0x0072	0xF009    	BREQ       L0153
;__Lib_MathDouble.c,182 :: 		
0x0074	0xD158    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,184 :: 		
L0153:
;__Lib_MathDouble.c,185 :: 		
0x0076	0x9498    	CLZ
;__Lib_MathDouble.c,186 :: 		
L0154:
;__Lib_MathDouble.c,188 :: 		
L_end_float_unpacks:
0x0078	0x9508    	RET
; end of _float_unpacks
_float_fpmul1:
;__Lib_MathDouble.c,483 :: 		
;__Lib_MathDouble.c,485 :: 		
0x04D8	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,486 :: 		
0x04DA	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,487 :: 		
0x04DC	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,488 :: 		
0x04DE	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,490 :: 		
0x04E0	0xDF90    	RCALL      _float_fpmul+0
;__Lib_MathDouble.c,492 :: 		
0x04E2	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,493 :: 		
0x04E4	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,494 :: 		
0x04E6	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,495 :: 		
0x04E8	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,497 :: 		
L_end_float_fpmul1:
0x04EA	0x9508    	RET
; end of _float_fpmul1
_float_fpmul:
;__Lib_MathDouble.c,407 :: 		
;__Lib_MathDouble.c,408 :: 		
0x0402	0xDF36    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,410 :: 		
0x0404	0xF181    	BREQ       L0097
;__Lib_MathDouble.c,411 :: 		
0x0406	0x2EE6    	MOV        R14, R22
;__Lib_MathDouble.c,412 :: 		
0x0408	0x2ED5    	MOV        R13, R21
;__Lib_MathDouble.c,413 :: 		
0x040A	0x2EC4    	MOV        R12, R20
;__Lib_MathDouble.c,414 :: 		
0x040C	0x2EB3    	MOV        R11, R19
;__Lib_MathDouble.c,415 :: 		
0x040E	0x2EA2    	MOV        R10, R18
;__Lib_MathDouble.c,416 :: 		
0x0410	0x2E91    	MOV        R9, R17
;__Lib_MathDouble.c,417 :: 		
0x0412	0x2E80    	MOV        R8, R16
;__Lib_MathDouble.c,418 :: 		
0x0414	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,419 :: 		
0x0416	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,420 :: 		
0x0418	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,421 :: 		
0x041A	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,423 :: 		
0x041C	0xDF29    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,425 :: 		
0x041E	0xF119    	BREQ       L0097
;__Lib_MathDouble.c,426 :: 		
0x0420	0x256E    	EOR        R22, R14
;__Lib_MathDouble.c,427 :: 		
0x0422	0x0D4C    	ADD        R20, R12
;__Lib_MathDouble.c,428 :: 		
0x0424	0x1D5D    	ADC        R21, R13
;__Lib_MathDouble.c,429 :: 		
0x0426	0x3840    	CPI        R20, 128
;__Lib_MathDouble.c,430 :: 		
0x0428	0x0753    	CPC        R21, R19
;__Lib_MathDouble.c,431 :: 		
0x042A	0xF4F4    	BRGE       L009B
;__Lib_MathDouble.c,432 :: 		
0x042C	0x3841    	CPI        R20, 129
;__Lib_MathDouble.c,433 :: 		
0x042E	0xEF7F    	LDI        R23, 255
;__Lib_MathDouble.c,434 :: 		
0x0430	0x0757    	CPC        R21, R23
;__Lib_MathDouble.c,435 :: 		
0x0432	0xF0FC    	BRLT       L00A0mul
;__Lib_MathDouble.c,436 :: 		
0x0434	0x2788    	CLR        R24
;__Lib_MathDouble.c,437 :: 		
0x0436	0x2799    	CLR        R25
;__Lib_MathDouble.c,438 :: 		
0x0438	0x27AA    	CLR        R26
;__Lib_MathDouble.c,439 :: 		
0x043A	0x27BB    	CLR        R27
;__Lib_MathDouble.c,440 :: 		
0x043C	0xE270    	LDI        R23, 32
;__Lib_MathDouble.c,441 :: 		
L0083:
;__Lib_MathDouble.c,442 :: 		
0x043E	0x95B6    	LSR        R27
;__Lib_MathDouble.c,443 :: 		
0x0440	0x95A7    	ROR        R26
;__Lib_MathDouble.c,444 :: 		
0x0442	0x9597    	ROR        R25
;__Lib_MathDouble.c,445 :: 		
0x0444	0x9587    	ROR        R24
;__Lib_MathDouble.c,446 :: 		
0x0446	0x9537    	ROR        R19
;__Lib_MathDouble.c,447 :: 		
0x0448	0x9527    	ROR        R18
;__Lib_MathDouble.c,448 :: 		
0x044A	0x9517    	ROR        R17
;__Lib_MathDouble.c,449 :: 		
0x044C	0x9507    	ROR        R16
;__Lib_MathDouble.c,450 :: 		
0x044E	0xF420    	BRCC       L0090
;__Lib_MathDouble.c,451 :: 		
0x0450	0x0D88    	ADD        R24, R8
;__Lib_MathDouble.c,452 :: 		
0x0452	0x1D99    	ADC        R25, R9
;__Lib_MathDouble.c,453 :: 		
0x0454	0x1DAA    	ADC        R26, R10
;__Lib_MathDouble.c,454 :: 		
0x0456	0x1DBB    	ADC        R27, R11
;__Lib_MathDouble.c,455 :: 		
L0090:
;__Lib_MathDouble.c,456 :: 		
0x0458	0x957A    	DEC        R23
;__Lib_MathDouble.c,457 :: 		
0x045A	0xF789    	BRNE       L0083
;__Lib_MathDouble.c,458 :: 		
0x045C	0x2F03    	MOV        R16, R19
;__Lib_MathDouble.c,459 :: 		
0x045E	0x2F3A    	MOV        R19, R26
;__Lib_MathDouble.c,460 :: 		
0x0460	0x2F29    	MOV        R18, R25
;__Lib_MathDouble.c,461 :: 		
0x0462	0x2F18    	MOV        R17, R24
;__Lib_MathDouble.c,463 :: 		
0x0464	0xDE48    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,465 :: 		
L0097:
;__Lib_MathDouble.c,466 :: 		
0x0466	0xC00A    	RJMP       L00A0x
;__Lib_MathDouble.c,467 :: 		
L009B:
;__Lib_MathDouble.c,468 :: 		
0x0468	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,469 :: 		
0x046A	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,470 :: 		
0x046C	0xE72F    	LDI        R18, 127
;__Lib_MathDouble.c,471 :: 		
0x046E	0xE73F    	LDI        R19, 127
;__Lib_MathDouble.c,472 :: 		
0x0470	0xCFFA    	RJMP       L0097
;__Lib_MathDouble.c,473 :: 		
L00A0mul:
;__Lib_MathDouble.c,474 :: 		
0x0472	0x2700    	CLR        R16
;__Lib_MathDouble.c,475 :: 		
0x0474	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,476 :: 		
0x0476	0x2F20    	MOV        R18, R16
;__Lib_MathDouble.c,477 :: 		
0x0478	0x2F30    	MOV        R19, R16
;__Lib_MathDouble.c,478 :: 		
0x047A	0xCFF5    	RJMP       L0097
;__Lib_MathDouble.c,479 :: 		
L00A0x:
;__Lib_MathDouble.c,481 :: 		
L_end_float_fpmul:
0x047C	0x9508    	RET
; end of _float_fpmul
_float_op_gequ:
;__Lib_MathDouble.c,691 :: 		
;__Lib_MathDouble.c,692 :: 		
0x04CA	0xDF53    	RCALL      _float_fpcmp1+0
;__Lib_MathDouble.c,694 :: 		
0x04CC	0xF01C    	BRLT       op_gequ_false
;__Lib_MathDouble.c,695 :: 		
0x04CE	0x2400    	CLR        R0
;__Lib_MathDouble.c,696 :: 		
0x04D0	0x9403    	INC        R0
;__Lib_MathDouble.c,697 :: 		
0x04D2	0xC001    	RJMP       op_gequ_exit
;__Lib_MathDouble.c,698 :: 		
op_gequ_false:
;__Lib_MathDouble.c,699 :: 		
0x04D4	0x2400    	CLR        R0
;__Lib_MathDouble.c,700 :: 		
op_gequ_exit:
;__Lib_MathDouble.c,702 :: 		
L_end_float_op_gequ:
0x04D6	0x9508    	RET
; end of _float_op_gequ
_float_fpcmp1:
;__Lib_MathDouble.c,652 :: 		
;__Lib_MathDouble.c,654 :: 		
0x0372	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,655 :: 		
0x0374	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,656 :: 		
0x0376	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,657 :: 		
0x0378	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,659 :: 		
0x037A	0xDF46    	RCALL      _float_fpcmp+0
;__Lib_MathDouble.c,661 :: 		
0x037C	0x2300    	TST        R16
;__Lib_MathDouble.c,663 :: 		
L_end_float_fpcmp1:
0x037E	0x9508    	RET
; end of _float_fpcmp1
_float_fpcmp:
;__Lib_MathDouble.c,632 :: 		
;__Lib_MathDouble.c,633 :: 		
0x0208	0xD0A1    	RCALL      _float_fpsub+0
;__Lib_MathDouble.c,635 :: 		
0x020A	0x2333    	TST        R19
;__Lib_MathDouble.c,636 :: 		
0x020C	0xF032    	BRMI       L011A
;__Lib_MathDouble.c,638 :: 		
0x020E	0xD007    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,640 :: 		
0x0210	0xF011    	BREQ       L0118
;__Lib_MathDouble.c,641 :: 		
0x0212	0xE001    	LDI        R16, 1
;__Lib_MathDouble.c,642 :: 		
0x0214	0xC003    	RJMP       L011Aexit
;__Lib_MathDouble.c,643 :: 		
L0118:
;__Lib_MathDouble.c,644 :: 		
0x0216	0x2700    	CLR        R16
;__Lib_MathDouble.c,645 :: 		
0x0218	0xC001    	RJMP       L011Aexit
;__Lib_MathDouble.c,646 :: 		
L011A:
;__Lib_MathDouble.c,647 :: 		
0x021A	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,648 :: 		
L011Aexit:
;__Lib_MathDouble.c,650 :: 		
L_end_float_fpcmp:
0x021C	0x9508    	RET
; end of _float_fpcmp
_float_op_less:
;__Lib_MathDouble.c,729 :: 		
;__Lib_MathDouble.c,730 :: 		
0x04BC	0xDF5A    	RCALL      _float_fpcmp1+0
;__Lib_MathDouble.c,732 :: 		
0x04BE	0xF41C    	BRGE       op_less_false
;__Lib_MathDouble.c,733 :: 		
0x04C0	0x2400    	CLR        R0
;__Lib_MathDouble.c,734 :: 		
0x04C2	0x9403    	INC        R0
;__Lib_MathDouble.c,735 :: 		
0x04C4	0xC001    	RJMP       op_less_exit
;__Lib_MathDouble.c,736 :: 		
op_less_false:
;__Lib_MathDouble.c,737 :: 		
0x04C6	0x2400    	CLR        R0
;__Lib_MathDouble.c,738 :: 		
op_less_exit:
;__Lib_MathDouble.c,740 :: 		
L_end_float_op_less:
0x04C8	0x9508    	RET
; end of _float_op_less
_print_C:
0x11A4	0x93CF    	PUSH       R28
0x11A6	0x93DF    	PUSH       R29
0x11A8	0xB7CD    	IN         R28, SPL+0
0x11AA	0xB7DE    	IN         R29, SPL+1
0x11AC	0x9728    	SBIW       R28, 8
0x11AE	0xBFCD    	OUT        SPL+0, R28
0x11B0	0xBFDE    	OUT        SPL+1, R29
0x11B2	0x9621    	ADIW       R28, 1
;st7735.c,542 :: 		void print_C(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, signed int value)
; value start address is: 19 (R19)
0x11B4	0x853C    	LDD        R19, Y+12
0x11B6	0x854D    	LDD        R20, Y+13
;st7735.c,544 :: 		unsigned char ch[6] = {0x20, 0x20, 0x20, 0x20, 0x20, 0x20};
0x11B8	0xE2B0    	LDI        R27, 32
0x11BA	0x83B8    	STD        Y+0, R27
0x11BC	0xE2B0    	LDI        R27, 32
0x11BE	0x83B9    	STD        Y+1, R27
0x11C0	0xE2B0    	LDI        R27, 32
0x11C2	0x83BA    	STD        Y+2, R27
0x11C4	0xE2B0    	LDI        R27, 32
0x11C6	0x83BB    	STD        Y+3, R27
0x11C8	0xE2B0    	LDI        R27, 32
0x11CA	0x83BC    	STD        Y+4, R27
0x11CC	0xE2B0    	LDI        R27, 32
0x11CE	0x83BD    	STD        Y+5, R27
;st7735.c,546 :: 		if(value < 0x00)
0x11D0	0xE000    	LDI        R16, 0
0x11D2	0xE010    	LDI        R17, 0
0x11D4	0x1730    	CP         R19, R16
0x11D6	0x0741    	CPC        R20, R17
0x11D8	0xF454    	BRGE       L_print_C85
L__print_C249:
;st7735.c,549 :: 		ch[0] = 0x2D;
0x11DA	0x01FE    	MOVW       R30, R28
0x11DC	0xE2BD    	LDI        R27, 45
0x11DE	0x83B0    	ST         Z, R27
;st7735.c,550 :: 		value = -value;
0x11E0	0xE000    	LDI        R16, 0
0x11E2	0xE010    	LDI        R17, 0
0x11E4	0x1B03    	SUB        R16, R19
0x11E6	0x0B14    	SBC        R17, R20
0x11E8	0x2F30    	MOV        R19, R16
0x11EA	0x2F41    	MOV        R20, R17
;st7735.c,551 :: 		}
0x11EC	0xC003    	RJMP       L_print_C86
L_print_C85:
;st7735.c,554 :: 		ch[0] = 0x20;
0x11EE	0x01FE    	MOVW       R30, R28
0x11F0	0xE2B0    	LDI        R27, 32
0x11F2	0x83B0    	ST         Z, R27
; value end address is: 19 (R19)
;st7735.c,555 :: 		}
L_print_C86:
;st7735.c,557 :: 		if((value > 99) && (value <= 999))
; value start address is: 19 (R19)
0x11F4	0xE603    	LDI        R16, 99
0x11F6	0xE010    	LDI        R17, 0
0x11F8	0x1703    	CP         R16, R19
0x11FA	0x0714    	CPC        R17, R20
0x11FC	0xF00C    	BRLT       L__print_C250
0x11FE	0xC070    	RJMP       L__print_C162
L__print_C250:
0x1200	0xEE07    	LDI        R16, 231
0x1202	0xE013    	LDI        R17, 3
0x1204	0x1703    	CP         R16, R19
0x1206	0x0714    	CPC        R17, R20
0x1208	0xF40C    	BRGE       L__print_C251
0x120A	0xC06A    	RJMP       L__print_C161
L__print_C251:
L__print_C160:
;st7735.c,559 :: 		ch[1] = ((value / 100) + 0x30);
0x120C	0x018E    	MOVW       R16, R28
0x120E	0x5F0F    	SUBI       R16, 255
0x1210	0x4F1F    	SBCI       R17, 255
0x1212	0x830E    	STD        Y+6, R16
0x1214	0x831F    	STD        Y+7, R17
0x1216	0x934F    	PUSH       R20
0x1218	0x933F    	PUSH       R19
0x121A	0x928F    	PUSH       R8
0x121C	0x927F    	PUSH       R7
0x121E	0x926F    	PUSH       R6
0x1220	0x925F    	PUSH       R5
0x1222	0x924F    	PUSH       R4
0x1224	0x923F    	PUSH       R3
0x1226	0x922F    	PUSH       R2
0x1228	0x2F03    	MOV        R16, R19
0x122A	0x2F14    	MOV        R17, R20
0x122C	0xE644    	LDI        R20, 100
0x122E	0xE050    	LDI        R21, 0
0x1230	0xD850    	RCALL      _Div_16x16_S+0
0x1232	0x018B    	MOVW       R16, R22
0x1234	0x902F    	POP        R2
0x1236	0x903F    	POP        R3
0x1238	0x904F    	POP        R4
0x123A	0x905F    	POP        R5
0x123C	0x906F    	POP        R6
0x123E	0x907F    	POP        R7
0x1240	0x908F    	POP        R8
0x1242	0x913F    	POP        R19
0x1244	0x914F    	POP        R20
0x1246	0x2F20    	MOV        R18, R16
0x1248	0x5D20    	SUBI       R18, 208
0x124A	0x810E    	LDD        R16, Y+6
0x124C	0x811F    	LDD        R17, Y+7
0x124E	0x01F8    	MOVW       R30, R16
0x1250	0x8320    	ST         Z, R18
;st7735.c,560 :: 		ch[2] = (((value % 100) / 10) + 0x30);
0x1252	0x018E    	MOVW       R16, R28
0x1254	0x5F0E    	SUBI       R16, 254
0x1256	0x4F1F    	SBCI       R17, 255
0x1258	0x830E    	STD        Y+6, R16
0x125A	0x831F    	STD        Y+7, R17
0x125C	0x934F    	PUSH       R20
0x125E	0x933F    	PUSH       R19
0x1260	0x928F    	PUSH       R8
0x1262	0x927F    	PUSH       R7
0x1264	0x926F    	PUSH       R6
0x1266	0x925F    	PUSH       R5
0x1268	0x924F    	PUSH       R4
0x126A	0x923F    	PUSH       R3
0x126C	0x922F    	PUSH       R2
0x126E	0x2F03    	MOV        R16, R19
0x1270	0x2F14    	MOV        R17, R20
0x1272	0xE644    	LDI        R20, 100
0x1274	0xE050    	LDI        R21, 0
0x1276	0xD82D    	RCALL      _Div_16x16_S+0
0x1278	0x018C    	MOVW       R16, R24
0x127A	0xE04A    	LDI        R20, 10
0x127C	0xE050    	LDI        R21, 0
0x127E	0xD829    	RCALL      _Div_16x16_S+0
0x1280	0x018B    	MOVW       R16, R22
0x1282	0x902F    	POP        R2
0x1284	0x903F    	POP        R3
0x1286	0x904F    	POP        R4
0x1288	0x905F    	POP        R5
0x128A	0x906F    	POP        R6
0x128C	0x907F    	POP        R7
0x128E	0x908F    	POP        R8
0x1290	0x913F    	POP        R19
0x1292	0x914F    	POP        R20
0x1294	0x2F20    	MOV        R18, R16
0x1296	0x5D20    	SUBI       R18, 208
0x1298	0x810E    	LDD        R16, Y+6
0x129A	0x811F    	LDD        R17, Y+7
0x129C	0x01F8    	MOVW       R30, R16
0x129E	0x8320    	ST         Z, R18
;st7735.c,561 :: 		ch[3] = ((value % 10) + 0x30);
0x12A0	0x018E    	MOVW       R16, R28
0x12A2	0x5F0D    	SUBI       R16, 253
0x12A4	0x4F1F    	SBCI       R17, 255
0x12A6	0x830E    	STD        Y+6, R16
0x12A8	0x831F    	STD        Y+7, R17
0x12AA	0x928F    	PUSH       R8
0x12AC	0x927F    	PUSH       R7
; value end address is: 19 (R19)
0x12AE	0x926F    	PUSH       R6
0x12B0	0x925F    	PUSH       R5
0x12B2	0x924F    	PUSH       R4
0x12B4	0x923F    	PUSH       R3
0x12B6	0x922F    	PUSH       R2
0x12B8	0x2F03    	MOV        R16, R19
0x12BA	0x2F14    	MOV        R17, R20
0x12BC	0xE04A    	LDI        R20, 10
0x12BE	0xE050    	LDI        R21, 0
0x12C0	0xD808    	RCALL      _Div_16x16_S+0
0x12C2	0x018C    	MOVW       R16, R24
0x12C4	0x902F    	POP        R2
0x12C6	0x903F    	POP        R3
0x12C8	0x904F    	POP        R4
0x12CA	0x905F    	POP        R5
0x12CC	0x906F    	POP        R6
0x12CE	0x907F    	POP        R7
0x12D0	0x908F    	POP        R8
0x12D2	0x2F20    	MOV        R18, R16
0x12D4	0x5D20    	SUBI       R18, 208
0x12D6	0x810E    	LDD        R16, Y+6
0x12D8	0x811F    	LDD        R17, Y+7
0x12DA	0x01F8    	MOVW       R30, R16
0x12DC	0x8320    	ST         Z, R18
;st7735.c,562 :: 		}
0x12DE	0xC093    	RJMP       L_print_C90
;st7735.c,557 :: 		if((value > 99) && (value <= 999))
L__print_C162:
; value start address is: 19 (R19)
L__print_C161:
;st7735.c,563 :: 		else if((value > 9) && (value <= 99))
0x12E0	0xE009    	LDI        R16, 9
0x12E2	0xE010    	LDI        R17, 0
0x12E4	0x1703    	CP         R16, R19
0x12E6	0x0714    	CPC        R17, R20
0x12E8	0xF00C    	BRLT       L__print_C252
0x12EA	0xC058    	RJMP       L__print_C164
L__print_C252:
0x12EC	0xE603    	LDI        R16, 99
0x12EE	0xE010    	LDI        R17, 0
0x12F0	0x1703    	CP         R16, R19
0x12F2	0x0714    	CPC        R17, R20
0x12F4	0xF40C    	BRGE       L__print_C253
0x12F6	0xC052    	RJMP       L__print_C163
L__print_C253:
L__print_C159:
;st7735.c,565 :: 		ch[1] = (((value % 100) / 10) + 0x30);
0x12F8	0x018E    	MOVW       R16, R28
0x12FA	0x5F0F    	SUBI       R16, 255
0x12FC	0x4F1F    	SBCI       R17, 255
0x12FE	0x830E    	STD        Y+6, R16
0x1300	0x831F    	STD        Y+7, R17
0x1302	0x934F    	PUSH       R20
0x1304	0x933F    	PUSH       R19
0x1306	0x928F    	PUSH       R8
0x1308	0x927F    	PUSH       R7
0x130A	0x926F    	PUSH       R6
0x130C	0x925F    	PUSH       R5
0x130E	0x924F    	PUSH       R4
0x1310	0x923F    	PUSH       R3
0x1312	0x922F    	PUSH       R2
0x1314	0x2F03    	MOV        R16, R19
0x1316	0x2F14    	MOV        R17, R20
0x1318	0xE644    	LDI        R20, 100
0x131A	0xE050    	LDI        R21, 0
0x131C	0xE6E9    	LDI        R30, lo_addr(_Div_16x16_S)
0x131E	0xE0F1    	LDI        R31, hi_addr(_Div_16x16_S+0)
0x1320	0x9509    	ICALL
0x1322	0x018C    	MOVW       R16, R24
0x1324	0xE04A    	LDI        R20, 10
0x1326	0xE050    	LDI        R21, 0
0x1328	0xE6E9    	LDI        R30, lo_addr(_Div_16x16_S)
0x132A	0xE0F1    	LDI        R31, hi_addr(_Div_16x16_S+0)
0x132C	0x9509    	ICALL
0x132E	0x018B    	MOVW       R16, R22
0x1330	0x902F    	POP        R2
0x1332	0x903F    	POP        R3
0x1334	0x904F    	POP        R4
0x1336	0x905F    	POP        R5
0x1338	0x906F    	POP        R6
0x133A	0x907F    	POP        R7
0x133C	0x908F    	POP        R8
0x133E	0x913F    	POP        R19
0x1340	0x914F    	POP        R20
0x1342	0x2F20    	MOV        R18, R16
0x1344	0x5D20    	SUBI       R18, 208
0x1346	0x810E    	LDD        R16, Y+6
0x1348	0x811F    	LDD        R17, Y+7
0x134A	0x01F8    	MOVW       R30, R16
0x134C	0x8320    	ST         Z, R18
;st7735.c,566 :: 		ch[2] = ((value % 10) + 0x30);
0x134E	0x018E    	MOVW       R16, R28
0x1350	0x5F0E    	SUBI       R16, 254
0x1352	0x4F1F    	SBCI       R17, 255
0x1354	0x830E    	STD        Y+6, R16
0x1356	0x831F    	STD        Y+7, R17
0x1358	0x928F    	PUSH       R8
0x135A	0x927F    	PUSH       R7
; value end address is: 19 (R19)
0x135C	0x926F    	PUSH       R6
0x135E	0x925F    	PUSH       R5
0x1360	0x924F    	PUSH       R4
0x1362	0x923F    	PUSH       R3
0x1364	0x922F    	PUSH       R2
0x1366	0x2F03    	MOV        R16, R19
0x1368	0x2F14    	MOV        R17, R20
0x136A	0xE04A    	LDI        R20, 10
0x136C	0xE050    	LDI        R21, 0
0x136E	0xE6E9    	LDI        R30, lo_addr(_Div_16x16_S)
0x1370	0xE0F1    	LDI        R31, hi_addr(_Div_16x16_S+0)
0x1372	0x9509    	ICALL
0x1374	0x018C    	MOVW       R16, R24
0x1376	0x902F    	POP        R2
0x1378	0x903F    	POP        R3
0x137A	0x904F    	POP        R4
0x137C	0x905F    	POP        R5
0x137E	0x906F    	POP        R6
0x1380	0x907F    	POP        R7
0x1382	0x908F    	POP        R8
0x1384	0x2F20    	MOV        R18, R16
0x1386	0x5D20    	SUBI       R18, 208
0x1388	0x810E    	LDD        R16, Y+6
0x138A	0x811F    	LDD        R17, Y+7
0x138C	0x01F8    	MOVW       R30, R16
0x138E	0x8320    	ST         Z, R18
;st7735.c,567 :: 		ch[3] = 0x20;
0x1390	0x018E    	MOVW       R16, R28
0x1392	0x01F8    	MOVW       R30, R16
0x1394	0x9633    	ADIW       R30, 3
0x1396	0xE2B0    	LDI        R27, 32
0x1398	0x83B0    	ST         Z, R27
;st7735.c,568 :: 		}
0x139A	0xC035    	RJMP       L_print_C94
;st7735.c,563 :: 		else if((value > 9) && (value <= 99))
L__print_C164:
; value start address is: 19 (R19)
L__print_C163:
;st7735.c,569 :: 		else if((value >= 0) && (value <= 9))
0x139C	0xE000    	LDI        R16, 0
0x139E	0xE010    	LDI        R17, 0
0x13A0	0x1730    	CP         R19, R16
0x13A2	0x0741    	CPC        R20, R17
0x13A4	0xF184    	BRLT       L__print_C166
L__print_C254:
0x13A6	0xE009    	LDI        R16, 9
0x13A8	0xE010    	LDI        R17, 0
0x13AA	0x1703    	CP         R16, R19
0x13AC	0x0714    	CPC        R17, R20
0x13AE	0xF15C    	BRLT       L__print_C165
L__print_C255:
L__print_C158:
;st7735.c,571 :: 		ch[1] = ((value % 10) + 0x30);
0x13B0	0x018E    	MOVW       R16, R28
0x13B2	0x5F0F    	SUBI       R16, 255
0x13B4	0x4F1F    	SBCI       R17, 255
0x13B6	0x830E    	STD        Y+6, R16
0x13B8	0x831F    	STD        Y+7, R17
0x13BA	0x928F    	PUSH       R8
0x13BC	0x927F    	PUSH       R7
; value end address is: 19 (R19)
0x13BE	0x926F    	PUSH       R6
0x13C0	0x925F    	PUSH       R5
0x13C2	0x924F    	PUSH       R4
0x13C4	0x923F    	PUSH       R3
0x13C6	0x922F    	PUSH       R2
0x13C8	0x2F03    	MOV        R16, R19
0x13CA	0x2F14    	MOV        R17, R20
0x13CC	0xE04A    	LDI        R20, 10
0x13CE	0xE050    	LDI        R21, 0
0x13D0	0xE6E9    	LDI        R30, lo_addr(_Div_16x16_S)
0x13D2	0xE0F1    	LDI        R31, hi_addr(_Div_16x16_S+0)
0x13D4	0x9509    	ICALL
0x13D6	0x018C    	MOVW       R16, R24
0x13D8	0x902F    	POP        R2
0x13DA	0x903F    	POP        R3
0x13DC	0x904F    	POP        R4
0x13DE	0x905F    	POP        R5
0x13E0	0x906F    	POP        R6
0x13E2	0x907F    	POP        R7
0x13E4	0x908F    	POP        R8
0x13E6	0x2F20    	MOV        R18, R16
0x13E8	0x5D20    	SUBI       R18, 208
0x13EA	0x810E    	LDD        R16, Y+6
0x13EC	0x811F    	LDD        R17, Y+7
0x13EE	0x01F8    	MOVW       R30, R16
0x13F0	0x8320    	ST         Z, R18
;st7735.c,572 :: 		ch[2] = 0x20;
0x13F2	0x018E    	MOVW       R16, R28
0x13F4	0x01F8    	MOVW       R30, R16
0x13F6	0x9632    	ADIW       R30, 2
0x13F8	0xE2B0    	LDI        R27, 32
0x13FA	0x83B0    	ST         Z, R27
;st7735.c,573 :: 		ch[3] = 0x20;
0x13FC	0x018E    	MOVW       R16, R28
0x13FE	0x01F8    	MOVW       R30, R16
0x1400	0x9633    	ADIW       R30, 3
0x1402	0xE2B0    	LDI        R27, 32
0x1404	0x83B0    	ST         Z, R27
;st7735.c,569 :: 		else if((value >= 0) && (value <= 9))
L__print_C166:
L__print_C165:
;st7735.c,574 :: 		}
L_print_C94:
L_print_C90:
;st7735.c,576 :: 		print_str(x_pos, y_pos, font_size, colour, back_colour, ch);
0x1406	0x018E    	MOVW       R16, R28
0x1408	0x931F    	PUSH       R17
0x140A	0x930F    	PUSH       R16
0x140C	0xD0E6    	RCALL      _print_str+0
0x140E	0xB7AD    	IN         R26, SPL+0
0x1410	0xB7BE    	IN         R27, SPL+1
0x1412	0x9612    	ADIW       R26, 2
0x1414	0xBFAD    	OUT        SPL+0, R26
0x1416	0xBFBE    	OUT        SPL+1, R27
;st7735.c,577 :: 		}
L_end_print_C:
0x1418	0x9627    	ADIW       R28, 7
0x141A	0xBFCD    	OUT        SPL+0, R28
0x141C	0xBFDE    	OUT        SPL+1, R29
0x141E	0x91DF    	POP        R29
0x1420	0x91CF    	POP        R28
0x1422	0x9508    	RET
; end of _print_C
___CC2DW:
;__Lib_System.c,25 :: 		
;__Lib_System.c,27 :: 		
L_loopDW:
;__Lib_System.c,28 :: 		
0x119A	0x9005    	LPM        R0, Z+
;__Lib_System.c,29 :: 		
0x119C	0x920D    	ST         X+, R0
;__Lib_System.c,30 :: 		
0x119E	0x9701    	SBIW       R24, 1
;__Lib_System.c,31 :: 		
0x11A0	0xF7E1    	BRNE       L_loopDW
;__Lib_System.c,33 :: 		
L_end___CC2DW:
0x11A2	0x9508    	RET
; end of ___CC2DW
_float_fpadd1:
;__Lib_MathDouble.c,368 :: 		
;__Lib_MathDouble.c,370 :: 		
0x1186	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,371 :: 		
0x1188	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,372 :: 		
0x118A	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,373 :: 		
0x118C	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,375 :: 		
0x118E	0xD993    	RCALL      _float_fpadd+0
;__Lib_MathDouble.c,377 :: 		
0x1190	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,378 :: 		
0x1192	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,379 :: 		
0x1194	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,380 :: 		
0x1196	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,382 :: 		
L_end_float_fpadd1:
0x1198	0x9508    	RET
; end of _float_fpadd1
_float_fpadd:
;__Lib_MathDouble.c,361 :: 		
;__Lib_MathDouble.c,363 :: 		
0x04B6	0x94E8    	CLT
;__Lib_MathDouble.c,365 :: 		
0x04B8	0xDE4C    	RCALL      _float_fpadd_alt+0
;__Lib_MathDouble.c,366 :: 		
L_end_float_fpadd:
0x04BA	0x9508    	RET
; end of _float_fpadd
0x247A	0xE0A0    	LDI        R26, 0
0x247C	0xE0B1    	LDI        R27, 1
0x247E	0xE7E8    	LDI        R30, 120
0x2480	0xE2F4    	LDI        R31, 36
0x2482	0xE082    	LDI        R24, 2
0x2484	0xE090    	LDI        R25, 0
0x2486	0xE40C    	LDI        R16, $+9
0x2488	0x930F    	PUSH       R16
0x248A	0xE102    	LDI        R16, hi_addr($+7)
0x248C	0x930F    	PUSH       R16
0x248E	0xEC0D    	LDI        R16, 205
0x2490	0x930F    	PUSH       R16
0x2492	0xE008    	LDI        R16, 8
0x2494	0x930F    	PUSH       R16
0x2496	0x9508    	RET
0x2498	0x9508    	RET
;TFT_display_demo.c,1 :: TFT_display_demo_font
0x2270	0x0000 ;TFT_display_demo_font+0
0x2272	0x0000 ;TFT_display_demo_font+2
0x2274	0x0000 ;TFT_display_demo_font+4
0x2276	0x5F00 ;TFT_display_demo_font+6
0x2278	0x0000 ;TFT_display_demo_font+8
0x227A	0x0700 ;TFT_display_demo_font+10
0x227C	0x0700 ;TFT_display_demo_font+12
0x227E	0x1400 ;TFT_display_demo_font+14
0x2280	0x147F ;TFT_display_demo_font+16
0x2282	0x147F ;TFT_display_demo_font+18
0x2284	0x2A24 ;TFT_display_demo_font+20
0x2286	0x2A7F ;TFT_display_demo_font+22
0x2288	0x2312 ;TFT_display_demo_font+24
0x228A	0x0813 ;TFT_display_demo_font+26
0x228C	0x6264 ;TFT_display_demo_font+28
0x228E	0x4936 ;TFT_display_demo_font+30
0x2290	0x2255 ;TFT_display_demo_font+32
0x2292	0x0050 ;TFT_display_demo_font+34
0x2294	0x0305 ;TFT_display_demo_font+36
0x2296	0x0000 ;TFT_display_demo_font+38
0x2298	0x1C00 ;TFT_display_demo_font+40
0x229A	0x4122 ;TFT_display_demo_font+42
0x229C	0x0000 ;TFT_display_demo_font+44
0x229E	0x2241 ;TFT_display_demo_font+46
0x22A0	0x001C ;TFT_display_demo_font+48
0x22A2	0x0814 ;TFT_display_demo_font+50
0x22A4	0x083E ;TFT_display_demo_font+52
0x22A6	0x0814 ;TFT_display_demo_font+54
0x22A8	0x3E08 ;TFT_display_demo_font+56
0x22AA	0x0808 ;TFT_display_demo_font+58
0x22AC	0x5000 ;TFT_display_demo_font+60
0x22AE	0x0030 ;TFT_display_demo_font+62
0x22B0	0x0800 ;TFT_display_demo_font+64
0x22B2	0x0808 ;TFT_display_demo_font+66
0x22B4	0x0808 ;TFT_display_demo_font+68
0x22B6	0x6000 ;TFT_display_demo_font+70
0x22B8	0x0060 ;TFT_display_demo_font+72
0x22BA	0x2000 ;TFT_display_demo_font+74
0x22BC	0x0810 ;TFT_display_demo_font+76
0x22BE	0x0204 ;TFT_display_demo_font+78
0x22C0	0x513E ;TFT_display_demo_font+80
0x22C2	0x4549 ;TFT_display_demo_font+82
0x22C4	0x003E ;TFT_display_demo_font+84
0x22C6	0x7F42 ;TFT_display_demo_font+86
0x22C8	0x0040 ;TFT_display_demo_font+88
0x22CA	0x6142 ;TFT_display_demo_font+90
0x22CC	0x4951 ;TFT_display_demo_font+92
0x22CE	0x2146 ;TFT_display_demo_font+94
0x22D0	0x4541 ;TFT_display_demo_font+96
0x22D2	0x314B ;TFT_display_demo_font+98
0x22D4	0x1418 ;TFT_display_demo_font+100
0x22D6	0x7F12 ;TFT_display_demo_font+102
0x22D8	0x2710 ;TFT_display_demo_font+104
0x22DA	0x4545 ;TFT_display_demo_font+106
0x22DC	0x3945 ;TFT_display_demo_font+108
0x22DE	0x4A3C ;TFT_display_demo_font+110
0x22E0	0x4949 ;TFT_display_demo_font+112
0x22E2	0x0130 ;TFT_display_demo_font+114
0x22E4	0x0971 ;TFT_display_demo_font+116
0x22E6	0x0305 ;TFT_display_demo_font+118
0x22E8	0x4936 ;TFT_display_demo_font+120
0x22EA	0x4949 ;TFT_display_demo_font+122
0x22EC	0x0636 ;TFT_display_demo_font+124
0x22EE	0x4949 ;TFT_display_demo_font+126
0x22F0	0x1E29 ;TFT_display_demo_font+128
0x22F2	0x3600 ;TFT_display_demo_font+130
0x22F4	0x0036 ;TFT_display_demo_font+132
0x22F6	0x0000 ;TFT_display_demo_font+134
0x22F8	0x3656 ;TFT_display_demo_font+136
0x22FA	0x0000 ;TFT_display_demo_font+138
0x22FC	0x1408 ;TFT_display_demo_font+140
0x22FE	0x4122 ;TFT_display_demo_font+142
0x2300	0x1400 ;TFT_display_demo_font+144
0x2302	0x1414 ;TFT_display_demo_font+146
0x2304	0x1414 ;TFT_display_demo_font+148
0x2306	0x4100 ;TFT_display_demo_font+150
0x2308	0x1422 ;TFT_display_demo_font+152
0x230A	0x0208 ;TFT_display_demo_font+154
0x230C	0x5101 ;TFT_display_demo_font+156
0x230E	0x0609 ;TFT_display_demo_font+158
0x2310	0x4932 ;TFT_display_demo_font+160
0x2312	0x4179 ;TFT_display_demo_font+162
0x2314	0x7E3E ;TFT_display_demo_font+164
0x2316	0x1111 ;TFT_display_demo_font+166
0x2318	0x7E11 ;TFT_display_demo_font+168
0x231A	0x497F ;TFT_display_demo_font+170
0x231C	0x4949 ;TFT_display_demo_font+172
0x231E	0x3E36 ;TFT_display_demo_font+174
0x2320	0x4141 ;TFT_display_demo_font+176
0x2322	0x2241 ;TFT_display_demo_font+178
0x2324	0x417F ;TFT_display_demo_font+180
0x2326	0x2241 ;TFT_display_demo_font+182
0x2328	0x7F1C ;TFT_display_demo_font+184
0x232A	0x4949 ;TFT_display_demo_font+186
0x232C	0x4149 ;TFT_display_demo_font+188
0x232E	0x097F ;TFT_display_demo_font+190
0x2330	0x0909 ;TFT_display_demo_font+192
0x2332	0x3E01 ;TFT_display_demo_font+194
0x2334	0x4941 ;TFT_display_demo_font+196
0x2336	0x7A49 ;TFT_display_demo_font+198
0x2338	0x087F ;TFT_display_demo_font+200
0x233A	0x0808 ;TFT_display_demo_font+202
0x233C	0x007F ;TFT_display_demo_font+204
0x233E	0x7F41 ;TFT_display_demo_font+206
0x2340	0x0041 ;TFT_display_demo_font+208
0x2342	0x4020 ;TFT_display_demo_font+210
0x2344	0x3F41 ;TFT_display_demo_font+212
0x2346	0x7F01 ;TFT_display_demo_font+214
0x2348	0x1408 ;TFT_display_demo_font+216
0x234A	0x4122 ;TFT_display_demo_font+218
0x234C	0x407F ;TFT_display_demo_font+220
0x234E	0x4040 ;TFT_display_demo_font+222
0x2350	0x7F40 ;TFT_display_demo_font+224
0x2352	0x0C02 ;TFT_display_demo_font+226
0x2354	0x7F02 ;TFT_display_demo_font+228
0x2356	0x047F ;TFT_display_demo_font+230
0x2358	0x1008 ;TFT_display_demo_font+232
0x235A	0x3E7F ;TFT_display_demo_font+234
0x235C	0x4141 ;TFT_display_demo_font+236
0x235E	0x3E41 ;TFT_display_demo_font+238
0x2360	0x097F ;TFT_display_demo_font+240
0x2362	0x0909 ;TFT_display_demo_font+242
0x2364	0x3E06 ;TFT_display_demo_font+244
0x2366	0x5141 ;TFT_display_demo_font+246
0x2368	0x5E21 ;TFT_display_demo_font+248
0x236A	0x097F ;TFT_display_demo_font+250
0x236C	0x2919 ;TFT_display_demo_font+252
0x236E	0x4646 ;TFT_display_demo_font+254
0x2370	0x4949 ;TFT_display_demo_font+256
0x2372	0x3149 ;TFT_display_demo_font+258
0x2374	0x0101 ;TFT_display_demo_font+260
0x2376	0x017F ;TFT_display_demo_font+262
0x2378	0x3F01 ;TFT_display_demo_font+264
0x237A	0x4040 ;TFT_display_demo_font+266
0x237C	0x3F40 ;TFT_display_demo_font+268
0x237E	0x201F ;TFT_display_demo_font+270
0x2380	0x2040 ;TFT_display_demo_font+272
0x2382	0x3F1F ;TFT_display_demo_font+274
0x2384	0x3840 ;TFT_display_demo_font+276
0x2386	0x3F40 ;TFT_display_demo_font+278
0x2388	0x1463 ;TFT_display_demo_font+280
0x238A	0x1408 ;TFT_display_demo_font+282
0x238C	0x0763 ;TFT_display_demo_font+284
0x238E	0x7008 ;TFT_display_demo_font+286
0x2390	0x0708 ;TFT_display_demo_font+288
0x2392	0x5161 ;TFT_display_demo_font+290
0x2394	0x4549 ;TFT_display_demo_font+292
0x2396	0x0043 ;TFT_display_demo_font+294
0x2398	0x417F ;TFT_display_demo_font+296
0x239A	0x0041 ;TFT_display_demo_font+298
0x239C	0x0402 ;TFT_display_demo_font+300
0x239E	0x1008 ;TFT_display_demo_font+302
0x23A0	0x0020 ;TFT_display_demo_font+304
0x23A2	0x4141 ;TFT_display_demo_font+306
0x23A4	0x007F ;TFT_display_demo_font+308
0x23A6	0x0204 ;TFT_display_demo_font+310
0x23A8	0x0201 ;TFT_display_demo_font+312
0x23AA	0x4004 ;TFT_display_demo_font+314
0x23AC	0x4040 ;TFT_display_demo_font+316
0x23AE	0x4040 ;TFT_display_demo_font+318
0x23B0	0x0100 ;TFT_display_demo_font+320
0x23B2	0x0402 ;TFT_display_demo_font+322
0x23B4	0x2000 ;TFT_display_demo_font+324
0x23B6	0x5454 ;TFT_display_demo_font+326
0x23B8	0x7854 ;TFT_display_demo_font+328
0x23BA	0x487F ;TFT_display_demo_font+330
0x23BC	0x4444 ;TFT_display_demo_font+332
0x23BE	0x3838 ;TFT_display_demo_font+334
0x23C0	0x4444 ;TFT_display_demo_font+336
0x23C2	0x2044 ;TFT_display_demo_font+338
0x23C4	0x4438 ;TFT_display_demo_font+340
0x23C6	0x4844 ;TFT_display_demo_font+342
0x23C8	0x387F ;TFT_display_demo_font+344
0x23CA	0x5454 ;TFT_display_demo_font+346
0x23CC	0x1854 ;TFT_display_demo_font+348
0x23CE	0x7E08 ;TFT_display_demo_font+350
0x23D0	0x0109 ;TFT_display_demo_font+352
0x23D2	0x0C02 ;TFT_display_demo_font+354
0x23D4	0x5252 ;TFT_display_demo_font+356
0x23D6	0x3E52 ;TFT_display_demo_font+358
0x23D8	0x087F ;TFT_display_demo_font+360
0x23DA	0x0404 ;TFT_display_demo_font+362
0x23DC	0x0078 ;TFT_display_demo_font+364
0x23DE	0x7D44 ;TFT_display_demo_font+366
0x23E0	0x0040 ;TFT_display_demo_font+368
0x23E2	0x4020 ;TFT_display_demo_font+370
0x23E4	0x3D44 ;TFT_display_demo_font+372
0x23E6	0x7F00 ;TFT_display_demo_font+374
0x23E8	0x2810 ;TFT_display_demo_font+376
0x23EA	0x0044 ;TFT_display_demo_font+378
0x23EC	0x4100 ;TFT_display_demo_font+380
0x23EE	0x407F ;TFT_display_demo_font+382
0x23F0	0x7C00 ;TFT_display_demo_font+384
0x23F2	0x1804 ;TFT_display_demo_font+386
0x23F4	0x7804 ;TFT_display_demo_font+388
0x23F6	0x087C ;TFT_display_demo_font+390
0x23F8	0x0404 ;TFT_display_demo_font+392
0x23FA	0x3878 ;TFT_display_demo_font+394
0x23FC	0x4444 ;TFT_display_demo_font+396
0x23FE	0x3844 ;TFT_display_demo_font+398
0x2400	0x147C ;TFT_display_demo_font+400
0x2402	0x1414 ;TFT_display_demo_font+402
0x2404	0x0808 ;TFT_display_demo_font+404
0x2406	0x1414 ;TFT_display_demo_font+406
0x2408	0x7C18 ;TFT_display_demo_font+408
0x240A	0x087C ;TFT_display_demo_font+410
0x240C	0x0404 ;TFT_display_demo_font+412
0x240E	0x4808 ;TFT_display_demo_font+414
0x2410	0x5454 ;TFT_display_demo_font+416
0x2412	0x2054 ;TFT_display_demo_font+418
0x2414	0x3F04 ;TFT_display_demo_font+420
0x2416	0x4044 ;TFT_display_demo_font+422
0x2418	0x3C20 ;TFT_display_demo_font+424
0x241A	0x4040 ;TFT_display_demo_font+426
0x241C	0x7C20 ;TFT_display_demo_font+428
0x241E	0x201C ;TFT_display_demo_font+430
0x2420	0x2040 ;TFT_display_demo_font+432
0x2422	0x3C1C ;TFT_display_demo_font+434
0x2424	0x3040 ;TFT_display_demo_font+436
0x2426	0x3C40 ;TFT_display_demo_font+438
0x2428	0x2844 ;TFT_display_demo_font+440
0x242A	0x2810 ;TFT_display_demo_font+442
0x242C	0x0C44 ;TFT_display_demo_font+444
0x242E	0x5050 ;TFT_display_demo_font+446
0x2430	0x3C50 ;TFT_display_demo_font+448
0x2432	0x6444 ;TFT_display_demo_font+450
0x2434	0x4C54 ;TFT_display_demo_font+452
0x2436	0x0044 ;TFT_display_demo_font+454
0x2438	0x3608 ;TFT_display_demo_font+456
0x243A	0x0041 ;TFT_display_demo_font+458
0x243C	0x0000 ;TFT_display_demo_font+460
0x243E	0x007F ;TFT_display_demo_font+462
0x2440	0x0000 ;TFT_display_demo_font+464
0x2442	0x3641 ;TFT_display_demo_font+466
0x2444	0x0008 ;TFT_display_demo_font+468
0x2446	0x0810 ;TFT_display_demo_font+470
0x2448	0x1008 ;TFT_display_demo_font+472
0x244A	0x7808 ;TFT_display_demo_font+474
0x244C	0x4146 ;TFT_display_demo_font+476
0x244E	0x7846 ;TFT_display_demo_font+478
; end of TFT_display_demo_font
;TFT_display_demo.c,0 :: ?ICS_w
0x2478	0x80 ;?ICS_w+0
; end of ?ICS_w
;TFT_display_demo.c,0 :: ?ICS_l
0x2479	0xA0 ;?ICS_l+0
; end of ?ICS_l
;TFT_display_demo.c,0 :: ?ICS?lstr1_TFT_display_demo
0x2450	0x694D ;?ICS?lstr1_TFT_display_demo+0
0x2452	0x7263 ;?ICS?lstr1_TFT_display_demo+2
0x2454	0x416F ;?ICS?lstr1_TFT_display_demo+4
0x2456	0x6572 ;?ICS?lstr1_TFT_display_demo+6
0x2458	0x616E ;?ICS?lstr1_TFT_display_demo+8
0x245A	0x00 ;?ICS?lstr1_TFT_display_demo+10
; end of ?ICS?lstr1_TFT_display_demo
;TFT_display_demo.c,0 :: ?ICS?lstr2_TFT_display_demo
0x245B	0x7777 ;?ICS?lstr2_TFT_display_demo+0
0x245D	0x2E77 ;?ICS?lstr2_TFT_display_demo+2
0x245F	0x6266 ;?ICS?lstr2_TFT_display_demo+4
0x2461	0x632E ;?ICS?lstr2_TFT_display_demo+6
0x2463	0x6D6F ;?ICS?lstr2_TFT_display_demo+8
0x2465	0x4D2F ;?ICS?lstr2_TFT_display_demo+10
0x2467	0x6369 ;?ICS?lstr2_TFT_display_demo+12
0x2469	0x6F72 ;?ICS?lstr2_TFT_display_demo+14
0x246B	0x7241 ;?ICS?lstr2_TFT_display_demo+16
0x246D	0x6E65 ;?ICS?lstr2_TFT_display_demo+18
0x246F	0x0061 ;?ICS?lstr2_TFT_display_demo+20
; end of ?ICS?lstr2_TFT_display_demo
;TFT_display_demo.c,0 :: ?ICSmain_f_L0
0x2471	0x51EC ;?ICSmain_f_L0+0
0x2473	0xBDB8 ;?ICSmain_f_L0+2
; end of ?ICSmain_f_L0
;TFT_display_demo.c,0 :: ?ICSmain_i_L0
0x2475	0xFFF7 ;?ICSmain_i_L0+0
; end of ?ICSmain_i_L0
;TFT_display_demo.c,0 :: ?ICSmain_c_L0
0x2477	0x7F ;?ICSmain_c_L0+0
; end of ?ICSmain_c_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0036       [7]    _float_unpacks
0x003D      [10]    _float_pack
0x0047      [52]    _Set_Addr_Window
0x007B      [46]    _float_normalize_and_pack
0x00A9      [91]    _float_fpadd_alt
0x0104      [11]    _float_fpcmp
0x010F       [8]    _float_tstr16_r19
0x0117      [33]    _Draw_Font_Pixel
0x0138      [21]    _float_unpacku
0x014D       [8]    _HWMul_16x16
0x0155      [20]    _Div_16x16_U
0x0169      [42]    _Div_16x16_S
0x0193       [9]    _float_neg32
0x019C      [10]    _float_long2fp
0x01A6       [3]    _float_fpsub
0x01A9      [16]    _RAM_Address_Set
0x01B9       [7]    _float_fpcmp1
0x01C0      [21]    _ST7735_Reset
0x01D5      [44]    _ST7735_Write
0x0201      [62]    _float_fpmul
0x023F      [18]    _Draw_Pixel
0x0251      [10]    _float_fpsub1
0x025B       [3]    _float_fpadd
0x025E       [7]    _float_op_less
0x0265       [7]    _float_op_gequ
0x026C      [10]    _float_fpmul1
0x0276       [3]    _float_slong2fp
0x0279     [114]    _print_char
0x02EB      [22]    _ST7735_Word_Write
0x0301     [416]    _ST7735_init
0x04A1     [181]    _Draw_Line
0x0556      [36]    _float_fpint
0x057A     [125]    _print_D
0x05F7     [532]    _print_I
0x080B      [70]    _Set_Rotation
0x0851     [114]    _setup
0x08C3      [10]    _float_fpadd1
0x08CD       [5]    ___CC2DW
0x08D2     [320]    _print_C
0x0A12     [219]    _Draw_Rectangle
0x0AED      [52]    _print_str
0x0B21     [487]    _print_F
0x0D08      [50]    _TFT_fill
0x0D3A      [20]    _Swap_Colour
0x0D4E     [438]    _Draw_Circle
0x0F04     [564]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    Delay_Cyc_loc_L0
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [2]    FARG_Swap_Colour_colour
0x0002       [2]    FARG_Draw_Rectangle_x1
0x0002       [1]    FARG_print_I_x_pos
0x0002       [1]    FARG_ST7735_Write_value
0x0002       [1]    FARG_Draw_Font_Pixel_x_pos
0x0002       [2]    FARG_Draw_Circle_xc
0x0002       [1]    FARG_print_D_x_pos
0x0002       [1]    FARG_Color565_r
0x0002       [1]    FARG_print_char_x_pos
0x0002       [2]    FARG_Draw_Line_x1
0x0002       [1]    FARG_Delay_Cyc_cycles_div_by_10
0x0002       [1]    FARG_print_F_x_pos
0x0002       [1]    FARG_Set_Addr_Window_xs
0x0002       [2]    FARG_VDelay_ms_Time_ms
0x0002       [2]    FARG_VDelay_Advanced_ms_Time_ms
0x0002       [2]    FARG_ST7735_Word_Write_value
0x0002       [1]    FARG_Invert_Display_i
0x0002       [1]    FARG_ST7735_Data_Write_DataH
0x0002       [1]    FARG_ST7735_Data_Write_4k_DataH
0x0002       [1]    FARG_print_str_x_pos
0x0002       [1]    FARG_print_C_x_pos
0x0002       [2]    FARG_TFT_fill_colour
0x0002       [1]    R2
0x0002       [1]    FARG_Draw_Pixel_x_pos
0x0002       [1]    FARG_Set_Rotation_m
0x0003       [1]    FARG_print_str_y_pos
0x0003       [1]    R3
0x0003       [1]    FARG_print_C_y_pos
0x0003       [1]    FARG_ST7735_Write_mode
0x0003       [1]    FARG_ST7735_Data_Write_DataL
0x0003       [1]    FARG_print_F_y_pos
0x0003       [1]    FARG_Set_Addr_Window_ys
0x0003       [1]    FARG_print_D_y_pos
0x0003       [1]    FARG_print_I_y_pos
0x0003       [1]    FARG_Draw_Pixel_y_pos
0x0003       [1]    FARG_Color565_g
0x0003       [1]    FARG_print_char_y_pos
0x0003       [1]    FARG_ST7735_Data_Write_4k_DataM
0x0003       [1]    FARG_Draw_Font_Pixel_y_pos
0x0004       [1]    FARG_print_str_font_size
0x0004       [1]    R4
0x0004       [2]    FARG_VDelay_Advanced_ms_Current_Fosc_kHz
0x0004       [1]    FARG_ST7735_Data_Write_4k_DataL
0x0004       [1]    FARG_print_char_font_size
0x0004       [1]    FARG_print_C_font_size
0x0004       [1]    FARG_print_I_font_size
0x0004       [2]    FARG_Draw_Font_Pixel_colour
0x0004       [2]    FARG_Draw_Circle_yc
0x0004       [2]    FARG_Draw_Line_y1
0x0004       [1]    FARG_print_F_font_size
0x0004       [1]    FARG_Color565_b
0x0004       [2]    FARG_Draw_Pixel_colour
0x0004       [2]    FARG_Draw_Rectangle_y1
0x0004       [1]    FARG_Set_Addr_Window_xe
0x0004       [1]    FARG_print_D_font_size
0x0005       [2]    FARG_print_I_colour
0x0005       [2]    FARG_print_str_colour
0x0005       [2]    FARG_print_F_colour
0x0005       [1]    FARG_Set_Addr_Window_ye
0x0005       [1]    R5
0x0005       [2]    FARG_print_char_colour
0x0005       [2]    FARG_print_D_colour
0x0005       [2]    FARG_print_C_colour
0x0006       [2]    FARG_Draw_Circle_radius
0x0006       [1]    FARG_Draw_Font_Pixel_pixel_size
0x0006       [2]    FARG_Draw_Rectangle_x2
0x0006       [2]    FARG_Draw_Line_x2
0x0006       [1]    R6
0x0007       [1]    R7
0x0007       [2]    FARG_print_str_back_colour
0x0007       [2]    FARG_print_C_back_colour
0x0007       [2]    FARG_print_char_back_colour
0x0007       [2]    FARG_print_I_back_colour
0x0007       [2]    FARG_print_D_back_colour
0x0007       [2]    FARG_print_F_back_colour
0x0008       [1]    R8
0x0008       [2]    FARG_Draw_Rectangle_y2
0x0008       [2]    FARG_Draw_Line_y2
0x0008       [1]    FARG_Draw_Circle_fill
0x0009       [1]    FARG_print_F_points
0x0009       [1]    R9
0x0009       [1]    FARG_print_D_points
0x0009       [1]    FARG_print_char_ch
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    R21
0x0016       [1]    R22
0x0017       [1]    R23
0x0018       [1]    R24
0x0019       [1]    R25
0x001A       [1]    R26
0x001A       [2]    X
0x001A       [1]    XL
0x001B       [1]    R27
0x001B       [1]    XH
0x001C       [1]    YL
0x001C       [2]    Y
0x001C       [1]    R28
0x001D       [1]    YH
0x001D       [1]    R29
0x001E       [2]    Z
0x001E       [1]    ZL
0x001E       [1]    R30
0x001F       [1]    R31
0x001F       [1]    ZH
0x0023       [0]    PINB1_bit
0x0023       [0]    PINB4_bit
0x0023       [0]    PINB5_bit
0x0023       [0]    PINB6_bit
0x0023       [1]    PINB
0x0023       [0]    PINB2_bit
0x0023       [0]    PINB3_bit
0x0023       [0]    PINB0_bit
0x0023       [0]    PINB7_bit
0x0024       [0]    DDB0_bit
0x0024       [0]    DDB7_bit
0x0024       [0]    DDB3_bit
0x0024       [0]    DDB6_bit
0x0024       [1]    DDRB
0x0024       [0]    DDB1_bit
0x0024       [0]    DDB2_bit
0x0024       [0]    DDB4_bit
0x0024       [0]    DDB5_bit
0x0025       [1]    PORTB
0x0025       [0]    PORTB4_bit
0x0025       [0]    PORTB5_bit
0x0025       [0]    PORTB2_bit
0x0025       [0]    PORTB1_bit
0x0025       [0]    PORTB6_bit
0x0025       [0]    PORTB7_bit
0x0025       [0]    PORTB3_bit
0x0025       [0]    PORTB0_bit
0x0026       [1]    PINC
0x0026       [0]    PINC4_bit
0x0026       [0]    PINC6_bit
0x0026       [0]    PINC2_bit
0x0026       [0]    PINC0_bit
0x0026       [0]    PINC1_bit
0x0026       [0]    PINC3_bit
0x0026       [0]    PINC5_bit
0x0027       [0]    DDC2_bit
0x0027       [0]    DDC1_bit
0x0027       [0]    DDC4_bit
0x0027       [0]    DDC5_bit
0x0027       [0]    DDC3_bit
0x0027       [1]    DDRC
0x0027       [0]    DDC6_bit
0x0027       [0]    DDC0_bit
0x0028       [0]    PORTC2_bit
0x0028       [0]    PORTC4_bit
0x0028       [1]    PORTC
0x0028       [0]    PORTC3_bit
0x0028       [0]    PORTC0_bit
0x0028       [0]    PORTC6_bit
0x0028       [0]    PORTC1_bit
0x0028       [0]    PORTC5_bit
0x0029       [0]    PIND5_bit
0x0029       [0]    PIND6_bit
0x0029       [0]    PIND2_bit
0x0029       [0]    PIND1_bit
0x0029       [0]    PIND3_bit
0x0029       [0]    PIND0_bit
0x0029       [1]    PIND
0x0029       [0]    PIND4_bit
0x0029       [0]    PIND7_bit
0x002A       [0]    DDD6_bit
0x002A       [0]    DDD3_bit
0x002A       [0]    DDD2_bit
0x002A       [0]    DDD0_bit
0x002A       [0]    DDD4_bit
0x002A       [0]    DDD1_bit
0x002A       [1]    DDRD
0x002A       [0]    DDD5_bit
0x002A       [0]    DDD7_bit
0x002B       [0]    PORTD6_bit
0x002B       [0]    PORTD3_bit
0x002B       [0]    PORTD2_bit
0x002B       [0]    PORTD1_bit
0x002B       [0]    PORTD5_bit
0x002B       [0]    PORTD7_bit
0x002B       [0]    PORTD4_bit
0x002B       [0]    PORTD0_bit
0x002B       [1]    PORTD
0x0035       [1]    TIFR0
0x0035       [0]    OCF0A_bit
0x0035       [0]    OCF0B_bit
0x0035       [0]    TOV0_bit
0x0036       [0]    OCF1B_bit
0x0036       [1]    TIFR1
0x0036       [0]    ICF1_bit
0x0036       [0]    TOV1_bit
0x0036       [0]    OCF1A_bit
0x0037       [0]    OCF2B_bit
0x0037       [0]    OCF2A_bit
0x0037       [1]    TIFR2
0x0037       [0]    TOV2_bit
0x003B       [0]    PCIF2_bit
0x003B       [0]    PCIF0_bit
0x003B       [0]    PCIF1_bit
0x003B       [1]    PCIFR
0x003C       [0]    INTF1_bit
0x003C       [1]    EIFR
0x003C       [0]    INTF0_bit
0x003D       [0]    INT0_bit
0x003D       [0]    INT1_bit
0x003D       [1]    EIMSK
0x003E       [0]    GPIOR00_bit
0x003E       [1]    GPIOR0
0x003E       [0]    GPIOR03_bit
0x003E       [0]    GPIOR06_bit
0x003E       [0]    GPIOR04_bit
0x003E       [0]    GPIOR05_bit
0x003E       [0]    GPIOR07_bit
0x003E       [0]    GPIOR02_bit
0x003E       [0]    GPIOR01_bit
0x003F       [1]    EECR
0x003F       [0]    EEMPE_bit
0x003F       [0]    EEPM0_bit
0x003F       [0]    EEPM1_bit
0x003F       [0]    EEPE_bit
0x003F       [0]    EERIE_bit
0x003F       [0]    EERE_bit
0x0040       [0]    EEDR1_bit
0x0040       [0]    EEDR4_bit
0x0040       [0]    EEDR3_bit
0x0040       [0]    EEDR2_bit
0x0040       [0]    EEDR5_bit
0x0040       [0]    EEDR7_bit
0x0040       [1]    EEDR
0x0040       [0]    EEDR0_bit
0x0040       [0]    EEDR6_bit
0x0041       [0]    EEAR4_bit
0x0041       [0]    EEAR3_bit
0x0041       [0]    EEAR2_bit
0x0041       [0]    EEAR7_bit
0x0041       [0]    EEAR6_bit
0x0041       [0]    EEAR5_bit
0x0041       [1]    EEARL
0x0041       [0]    EEAR0_bit
0x0041       [0]    EEAR1_bit
0x0042       [1]    EEARH
0x0042       [0]    EEAR8_bit
0x0042       [0]    EEAR9_bit
0x0043       [0]    TSM_bit
0x0043       [0]    PSRASY_bit
0x0043       [1]    GTCCR
0x0043       [0]    PSRSYNC_bit
0x0044       [0]    WGM01_bit
0x0044       [0]    COM0B0_bit
0x0044       [0]    COM0B1_bit
0x0044       [0]    WGM00_bit
0x0044       [0]    COM0A1_bit
0x0044       [0]    COM0A0_bit
0x0044       [1]    TCCR0A
0x0045       [0]    CS01_bit
0x0045       [0]    CS00_bit
0x0045       [1]    TCCR0B
0x0045       [0]    CS02_bit
0x0045       [0]    FOC0A_bit
0x0045       [0]    FOC0B_bit
0x0045       [0]    WGM02_bit
0x0046       [0]    TCNT0_6_bit
0x0046       [0]    TCNT0_7_bit
0x0046       [1]    TCNT0
0x0046       [0]    TCNT0_3_bit
0x0046       [0]    TCNT0_0_bit
0x0046       [0]    TCNT0_1_bit
0x0046       [0]    TCNT0_2_bit
0x0046       [0]    TCNT0_4_bit
0x0046       [0]    TCNT0_5_bit
0x0047       [0]    OCR0A_6_bit
0x0047       [0]    OCR0A_3_bit
0x0047       [1]    OCR0A
0x0047       [0]    OCR0A_1_bit
0x0047       [0]    OCR0A_7_bit
0x0047       [0]    OCR0A_0_bit
0x0047       [0]    OCR0A_5_bit
0x0047       [0]    OCR0A_2_bit
0x0047       [0]    OCR0A_4_bit
0x0048       [0]    OCR0B_5_bit
0x0048       [0]    OCR0B_4_bit
0x0048       [0]    OCR0B_7_bit
0x0048       [0]    OCR0B_6_bit
0x0048       [0]    OCR0B_3_bit
0x0048       [0]    OCR0B_0_bit
0x0048       [1]    OCR0B
0x0048       [0]    OCR0B_2_bit
0x0048       [0]    OCR0B_1_bit
0x004A       [0]    GPIOR11_bit
0x004A       [0]    GPIOR12_bit
0x004A       [1]    GPIOR1
0x004A       [0]    GPIOR10_bit
0x004A       [0]    GPIOR13_bit
0x004A       [0]    GPIOR16_bit
0x004A       [0]    GPIOR17_bit
0x004A       [0]    GPIOR14_bit
0x004A       [0]    GPIOR15_bit
0x004B       [0]    GPIOR21_bit
0x004B       [0]    GPIOR22_bit
0x004B       [1]    GPIOR2
0x004B       [0]    GPIOR20_bit
0x004B       [0]    GPIOR23_bit
0x004B       [0]    GPIOR26_bit
0x004B       [0]    GPIOR27_bit
0x004B       [0]    GPIOR24_bit
0x004B       [0]    GPIOR25_bit
0x004C       [0]    SPR1_bit
0x004C       [0]    CPHA_bit
0x004C       [1]    SPCR
0x004C       [0]    SPR0_bit
0x004C       [0]    CPOL_bit
0x004C       [0]    SPE_bit
0x004C       [0]    SPIE_bit
0x004C       [0]    MSTR_bit
0x004C       [0]    DORD_bit
0x004D       [0]    SPI2X_bit
0x004D       [1]    SPSR
0x004D       [0]    SPIF_bit
0x004D       [0]    WCOL_bit
0x004E       [0]    SPDR1_bit
0x004E       [0]    SPDR2_bit
0x004E       [1]    SPDR
0x004E       [0]    SPDR0_bit
0x004E       [0]    SPDR3_bit
0x004E       [0]    SPDR6_bit
0x004E       [0]    SPDR7_bit
0x004E       [0]    SPDR4_bit
0x004E       [0]    SPDR5_bit
0x0050       [0]    ACIS1_bit
0x0050       [0]    ACIC_bit
0x0050       [1]    ACSR
0x0050       [0]    ACIS0_bit
0x0050       [0]    ACIE_bit
0x0050       [0]    ACBG_bit
0x0050       [0]    ACD_bit
0x0050       [0]    ACI_bit
0x0050       [0]    ACO_bit
0x0053       [0]    SE_bit
0x0053       [1]    SMCR
0x0053       [0]    SM0_bit
0x0053       [0]    SM2_bit
0x0053       [0]    SM1_bit
0x0054       [0]    PORF_bit
0x0054       [1]    MCUSR
0x0054       [0]    EXTRF_bit
0x0054       [0]    WDRF_bit
0x0054       [0]    BORF_bit
0x0055       [0]    IVSEL_bit
0x0055       [0]    IVCE_bit
0x0055       [1]    MCUCR
0x0055       [0]    BODS_bit
0x0055       [0]    BODSE_bit
0x0055       [0]    PUD_bit
0x0057       [0]    SELFPRGEN_bit
0x0057       [0]    PGERS_bit
0x0057       [1]    SPMCSR
0x0057       [0]    SPMEN_bit
0x0057       [0]    PGWRT_bit
0x0057       [0]    RWWSB_bit
0x0057       [0]    SPMIE_bit
0x0057       [0]    BLBSET_bit
0x0057       [0]    RWWSRE_bit
0x005D       [0]    SP1_bit
0x005D       [0]    SP2_bit
0x005D       [1]    SPL
0x005D       [0]    SP0_bit
0x005D       [0]    SP3_bit
0x005D       [0]    SP6_bit
0x005D       [0]    SP7_bit
0x005D       [0]    SP4_bit
0x005D       [0]    SP5_bit
0x005E       [0]    SP8_bit
0x005E       [1]    SPH
0x005E       [0]    SP9_bit
0x005E       [0]    SP11_bit
0x005E       [0]    SP10_bit
0x005F       [0]    SREG_Z_bit
0x005F       [0]    SREG_N_bit
0x005F       [1]    SREG
0x005F       [0]    SREG_C_bit
0x005F       [0]    SREG_V_bit
0x005F       [0]    SREG_T_bit
0x005F       [0]    SREG_I_bit
0x005F       [0]    SREG_S_bit
0x005F       [0]    SREG_H_bit
0x0061       [1]    CLKPR
0x0068       [1]    PCICR
0x0069       [1]    EICRA
0x006E       [1]    TIMSK0
0x006F       [1]    TIMSK1
0x0070       [1]    TIMSK2
0x007A       [1]    ADCSRA
0x007B       [1]    ADCSRB
0x007F       [1]    DIDR1
0x0080       [1]    TCCR1A
0x0081       [1]    TCCR1B
0x0084       [1]    TCNT1L
0x0085       [1]    TCNT1H
0x0086       [1]    ICR1L
0x0087       [1]    ICR1H
0x0088       [1]    OCR1AL
0x0089       [1]    OCR1AH
0x008A       [1]    OCR1BL
0x008B       [1]    OCR1BH
0x00B0       [1]    TCCR2A
0x00B1       [1]    TCCR2B
0x00B2       [1]    TCNT2
0x00B3       [1]    OCR2A
0x00B4       [1]    OCR2B
0x00B6       [1]    ASSR
0x00BC       [1]    TWCR
0x00C1       [1]    UCSR0B
0x0100       [1]    _w
0x0101       [1]    _l
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2270     [480]    TFT_display_demo_font
0x2450      [11]    ?ICS?lstr1_TFT_display_demo
0x245B      [22]    ?ICS?lstr2_TFT_display_demo
0x2471       [4]    ?ICSmain_f_L0
0x2475       [2]    ?ICSmain_i_L0
0x2477       [1]    ?ICSmain_c_L0
0x2478       [1]    ?ICS_w
0x2479       [1]    ?ICS_l
