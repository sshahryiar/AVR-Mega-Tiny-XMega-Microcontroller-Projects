;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08-Oct-16 04:02:02 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x1575940C  	JMP        _main
0x0004	0x0000940C  	JMP        0
0x0008	0x0000940C  	JMP        0
0x000C	0x0000940C  	JMP        0
0x0010	0x0000940C  	JMP        0
0x0014	0x0000940C  	JMP        0
0x0018	0x0000940C  	JMP        0
0x001C	0x0000940C  	JMP        0
0x0020	0x0000940C  	JMP        0
0x0024	0x0000940C  	JMP        0
0x0028	0x0000940C  	JMP        0
0x002C	0x0000940C  	JMP        0
0x0030	0x0000940C  	JMP        0
0x0034	0x0000940C  	JMP        0
0x0038	0x0000940C  	JMP        0
0x003C	0x0000940C  	JMP        0
0x0040	0x0000940C  	JMP        0
0x0044	0x0000940C  	JMP        0
0x0048	0x0000940C  	JMP        0
0x004C	0x0000940C  	JMP        0
0x0050	0x0000940C  	JMP        0
0x0054	0x0000940C  	JMP        0
0x0058	0x0000940C  	JMP        0
0x005C	0x0000940C  	JMP        0
0x0060	0x0000940C  	JMP        0
0x0064	0x0000940C  	JMP        0
0x0068	0x0000940C  	JMP        0
0x006C	0x0000940C  	JMP        0
0x0070	0x0000940C  	JMP        0
0x0074	0x0000940C  	JMP        0
0x0078	0x0000940C  	JMP        0
0x007C	0x0000940C  	JMP        0
0x0080	0x0000940C  	JMP        0
0x0084	0x0000940C  	JMP        0
0x0088	0x0000940C  	JMP        0
0x008C	0x0000940C  	JMP        0
0x0090	0x0000    	NOP
0x0092	0x0000    	NOP
0x0094	0x0000    	NOP
0x0096	0x0000    	NOP
0x0098	0x0000    	NOP
0x009A	0x0000    	NOP
0x009C	0x0000    	NOP
0x009E	0x0000    	NOP
0x00A0	0x0000    	NOP
0x00A2	0x0000    	NOP
0x00A4	0x0000    	NOP
0x00A6	0x0000    	NOP
0x00A8	0x0000    	NOP
0x00AA	0x0000    	NOP
0x00AC	0x0000940C  	JMP        0
0x00B0	0x0000940C  	JMP        0
0x00B4	0x0000940C  	JMP        0
0x00B8	0x0000940C  	JMP        0
0x00BC	0x0000940C  	JMP        0
0x00C0	0x0000940C  	JMP        0
0x00C4	0x0000940C  	JMP        0
0x00C8	0x0000940C  	JMP        0
0x00CC	0x0000940C  	JMP        0
0x00D0	0x0000940C  	JMP        0
0x00D4	0x0000    	NOP
0x00D6	0x0000    	NOP
0x00D8	0x0000    	NOP
0x00DA	0x0000    	NOP
0x00DC	0x0000    	NOP
0x00DE	0x0000    	NOP
0x00E0	0x0000    	NOP
0x00E2	0x0000    	NOP
0x00E4	0x0000    	NOP
0x00E6	0x0000    	NOP
0x00E8	0x0000940C  	JMP        0
0x00EC	0x0000940C  	JMP        0
0x00F0	0x0000940C  	JMP        0
0x00F4	0x0000    	NOP
0x00F6	0x0000    	NOP
0x00F8	0x0000    	NOP
0x00FA	0x0000    	NOP
0x00FC	0x0000    	NOP
0x00FE	0x0000    	NOP
0x0100	0x0000940C  	JMP        0
0x0104	0x0000940C  	JMP        0
0x0108	0x0000940C  	JMP        0
0x010C	0x0000940C  	JMP        0
0x0110	0x0000940C  	JMP        0
0x0114	0x0000940C  	JMP        0
0x0118	0x0000940C  	JMP        0
0x011C	0x0000940C  	JMP        0
0x0120	0x0000940C  	JMP        0
0x0124	0x0000940C  	JMP        0
0x0128	0x0000940C  	JMP        0
0x012C	0x0000    	NOP
0x012E	0x0000    	NOP
0x0130	0x0000    	NOP
0x0132	0x0000    	NOP
0x0134	0x0000940C  	JMP        0
0x0138	0x0000940C  	JMP        0
0x013C	0x0000940C  	JMP        0
0x0140	0x0000940C  	JMP        0
0x0144	0x0000940C  	JMP        0
0x0148	0x0000940C  	JMP        0
0x014C	0x0000940C  	JMP        0
0x0150	0x0000940C  	JMP        0
0x0154	0x0000940C  	JMP        0
0x0158	0x0000940C  	JMP        0
0x015C	0x0000940C  	JMP        0
0x0160	0x0000940C  	JMP        0
0x0164	0x0000940C  	JMP        0
0x0168	0x0000940C  	JMP        0
0x016C	0x0000940C  	JMP        0
0x0170	0x0000940C  	JMP        0
0x0174	0x0000940C  	JMP        0
0x0178	0x0000    	NOP
0x017A	0x0000    	NOP
0x017C	0x0000    	NOP
0x017E	0x0000    	NOP
0x0180	0x0000    	NOP
0x0182	0x0000    	NOP
0x0184	0x0000    	NOP
0x0186	0x0000    	NOP
0x0188	0x0000    	NOP
0x018A	0x0000    	NOP
0x018C	0x0000    	NOP
0x018E	0x0000    	NOP
0x0190	0x0000    	NOP
0x0192	0x0000    	NOP
0x0194	0x0000    	NOP
0x0196	0x0000    	NOP
0x0198	0x0000    	NOP
0x019A	0x0000    	NOP
0x019C	0x0000    	NOP
0x019E	0x0000    	NOP
0x01A0	0x0000    	NOP
0x01A2	0x0000    	NOP
0x01A4	0x0000    	NOP
0x01A6	0x0000    	NOP
0x01A8	0x0000    	NOP
0x01AA	0x0000    	NOP
0x01AC	0x0000    	NOP
0x01AE	0x0000    	NOP
0x01B0	0x0000    	NOP
0x01B2	0x0000    	NOP
0x01B4	0x0000    	NOP
0x01B6	0x0000    	NOP
0x01B8	0x0000    	NOP
0x01BA	0x0000    	NOP
0x01BC	0x0000    	NOP
0x01BE	0x0000    	NOP
0x01C0	0x0000    	NOP
0x01C2	0x0000    	NOP
0x01C4	0x0000    	NOP
0x01C6	0x0000    	NOP
0x01C8	0x0000    	NOP
0x01CA	0x0000    	NOP
0x01CC	0x0000    	NOP
0x01CE	0x0000    	NOP
0x01D0	0x0000    	NOP
0x01D2	0x0000    	NOP
0x01D4	0x0000    	NOP
0x01D6	0x0000    	NOP
0x01D8	0x0000    	NOP
0x01DA	0x0000    	NOP
0x01DC	0x0000    	NOP
0x01DE	0x0000    	NOP
0x01E0	0x0000    	NOP
0x01E2	0x0000    	NOP
0x01E4	0x0000    	NOP
0x01E6	0x0000    	NOP
0x01E8	0x0000    	NOP
0x01EA	0x0000    	NOP
0x01EC	0x0000    	NOP
0x01EE	0x0000    	NOP
0x01F0	0x0000    	NOP
0x01F2	0x0000    	NOP
0x01F4	0x0000940C  	JMP        0
0x01F8	0x0000940C  	JMP        0
_main:
0x2AEA	0xEFBF    	LDI        R27, 255
0x2AEC	0xBFBD    	OUT        SPL+0, R27
0x2AEE	0xE2BF    	LDI        R27, 47
0x2AF0	0xBFBE    	OUT        SPL+1, R27
0x2AF2	0x184F940E  	CALL       6223
0x2AF6	0xB7CD    	IN         R28, SPL+0
0x2AF8	0xB7DE    	IN         R29, SPL+1
0x2AFA	0x9768    	SBIW       R28, 24
0x2AFC	0xBFCD    	OUT        SPL+0, R28
0x2AFE	0xBFDE    	OUT        SPL+1, R29
0x2B00	0x9621    	ADIW       R28, 1
;comms_demo.c,19 :: 		void main()
;comms_demo.c,21 :: 		unsigned char sample = 0;
0x2B02	0x922F    	PUSH       R2
0x2B04	0x923F    	PUSH       R3
0x2B06	0x924F    	PUSH       R4
0x2B08	0x925F    	PUSH       R5
0x2B0A	0x926F    	PUSH       R6
0x2B0C	0x927F    	PUSH       R7
0x2B0E	0x928F    	PUSH       R8
0x2B10	0x929F    	PUSH       R9
0x2B12	0xE0B0    	LDI        R27, 0
0x2B14	0x87BD    	STD        Y+13, R27
;comms_demo.c,22 :: 		unsigned char tp = 0;
;comms_demo.c,23 :: 		unsigned char pp = 0;
;comms_demo.c,25 :: 		float T = 0.0;
;comms_demo.c,26 :: 		float P = 0.0;
;comms_demo.c,28 :: 		setup();
0x2B16	0xD958    	RCALL      _setup+0
;comms_demo.c,29 :: 		draw_background();
0x2B18	0xD968    	RCALL      _draw_background+0
;comms_demo.c,31 :: 		while(1)
L_main206:
;comms_demo.c,33 :: 		T = read_uncompensated_temperature();
0x2B1A	0xDBD5    	RCALL      _read_uncompensated_temperature+0
0x2B1C	0xE020    	LDI        R18, 0
0x2B1E	0x2F32    	MOV        R19, R18
0x2B20	0xD8FE    	RCALL      _float_ulong2fp+0
;comms_demo.c,34 :: 		T = get_temperature(T);
0x2B22	0x05CC940E  	CALL       _float_fpint+0
0x2B26	0x0118    	MOVW       R2, R16
0x2B28	0xDB68    	RCALL      _get_temperature+0
0x2B2A	0x8B08    	STD        Y+16, R16
0x2B2C	0x8B19    	STD        Y+17, R17
0x2B2E	0x8B2A    	STD        Y+18, R18
0x2B30	0x8B3B    	STD        Y+19, R19
;comms_demo.c,35 :: 		P = read_uncompensated_pressure(OSS_value);
0x2B32	0xE0B3    	LDI        R27, 3
0x2B34	0x2E2B    	MOV        R2, R27
0x2B36	0xD86F    	RCALL      _read_uncompensated_pressure+0
0x2B38	0xD8F2    	RCALL      _float_ulong2fp+0
;comms_demo.c,36 :: 		P = get_pressure(P, OSS_value);
0x2B3A	0x05CC940E  	CALL       _float_fpint+0
0x2B3E	0xE0B3    	LDI        R27, 3
0x2B40	0x2E6B    	MOV        R6, R27
0x2B42	0x0118    	MOVW       R2, R16
0x2B44	0x0129    	MOVW       R4, R18
0x2B46	0xDC53    	RCALL      _get_pressure+0
0x2B48	0xD80F    	RCALL      _float_slong2fp+0
;comms_demo.c,37 :: 		P *= 0.001;
0x2B4A	0xE64F    	LDI        R20, 111
0x2B4C	0xE152    	LDI        R21, 18
0x2B4E	0xE863    	LDI        R22, 131
0x2B50	0xE37A    	LDI        R23, 58
0x2B52	0x0D8B940E  	CALL       _float_fpmul1+0
0x2B56	0x8B0C    	STD        Y+20, R16
0x2B58	0x8B1D    	STD        Y+21, R17
0x2B5A	0x8B2E    	STD        Y+22, R18
0x2B5C	0x8B3F    	STD        Y+23, R19
;comms_demo.c,39 :: 		print_str(1, 120, 1, Red, Black, "T/ C:");
0x2B5E	0xE5B4    	LDI        R27, 84
0x2B60	0x83B8    	STD        Y+0, R27
0x2B62	0xE2BF    	LDI        R27, 47
0x2B64	0x83B9    	STD        Y+1, R27
0x2B66	0xE2B0    	LDI        R27, 32
0x2B68	0x83BA    	STD        Y+2, R27
0x2B6A	0xE4B3    	LDI        R27, 67
0x2B6C	0x83BB    	STD        Y+3, R27
0x2B6E	0xE3BA    	LDI        R27, 58
0x2B70	0x83BC    	STD        Y+4, R27
0x2B72	0xE0B0    	LDI        R27, 0
0x2B74	0x83BD    	STD        Y+5, R27
0x2B76	0x018E    	MOVW       R16, R28
0x2B78	0xE0B0    	LDI        R27, 0
0x2B7A	0x2E7B    	MOV        R7, R27
0x2B7C	0xEFB8    	LDI        R27, 248
0x2B7E	0x2E8B    	MOV        R8, R27
0x2B80	0xE0B1    	LDI        R27, 1
0x2B82	0x2E6B    	MOV        R6, R27
0x2B84	0xE7B8    	LDI        R27, 120
0x2B86	0x2E4B    	MOV        R4, R27
0x2B88	0xE0B0    	LDI        R27, 0
0x2B8A	0x2E5B    	MOV        R5, R27
0x2B8C	0xE0B1    	LDI        R27, 1
0x2B8E	0x2E2B    	MOV        R2, R27
0x2B90	0xE0B0    	LDI        R27, 0
0x2B92	0x2E3B    	MOV        R3, R27
0x2B94	0x931F    	PUSH       R17
0x2B96	0x930F    	PUSH       R16
0x2B98	0xE0B0    	LDI        R27, 0
0x2B9A	0x93BF    	PUSH       R27
0x2B9C	0x93BF    	PUSH       R27
0x2B9E	0x0906940E  	CALL       _print_str+0
0x2BA2	0xB7AD    	IN         R26, SPL+0
0x2BA4	0xB7BE    	IN         R27, SPL+1
0x2BA6	0x9614    	ADIW       R26, 4
0x2BA8	0xBFAD    	OUT        SPL+0, R26
0x2BAA	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,40 :: 		print_symbol(13, 120, 1, Red, Black, 0);
0x2BAC	0x2499    	CLR        R9
0x2BAE	0xE0B0    	LDI        R27, 0
0x2BB0	0x2E7B    	MOV        R7, R27
0x2BB2	0xEFB8    	LDI        R27, 248
0x2BB4	0x2E8B    	MOV        R8, R27
0x2BB6	0xE0B1    	LDI        R27, 1
0x2BB8	0x2E6B    	MOV        R6, R27
0x2BBA	0xE7B8    	LDI        R27, 120
0x2BBC	0x2E4B    	MOV        R4, R27
0x2BBE	0xE0B0    	LDI        R27, 0
0x2BC0	0x2E5B    	MOV        R5, R27
0x2BC2	0xE0BD    	LDI        R27, 13
0x2BC4	0x2E2B    	MOV        R2, R27
0x2BC6	0xE0B0    	LDI        R27, 0
0x2BC8	0x2E3B    	MOV        R3, R27
0x2BCA	0xE0B0    	LDI        R27, 0
0x2BCC	0x93BF    	PUSH       R27
0x2BCE	0x93BF    	PUSH       R27
0x2BD0	0x0959940E  	CALL       _print_symbol+0
0x2BD4	0xB7AD    	IN         R26, SPL+0
0x2BD6	0xB7BE    	IN         R27, SPL+1
0x2BD8	0x9612    	ADIW       R26, 2
0x2BDA	0xBFAD    	OUT        SPL+0, R26
0x2BDC	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,41 :: 		print_F(36, 120, 1, Red, Black, T, 2);
0x2BDE	0xE0B2    	LDI        R27, 2
0x2BE0	0x2E9B    	MOV        R9, R27
0x2BE2	0xE0B0    	LDI        R27, 0
0x2BE4	0x2E7B    	MOV        R7, R27
0x2BE6	0xEFB8    	LDI        R27, 248
0x2BE8	0x2E8B    	MOV        R8, R27
0x2BEA	0xE0B1    	LDI        R27, 1
0x2BEC	0x2E6B    	MOV        R6, R27
0x2BEE	0xE7B8    	LDI        R27, 120
0x2BF0	0x2E4B    	MOV        R4, R27
0x2BF2	0xE0B0    	LDI        R27, 0
0x2BF4	0x2E5B    	MOV        R5, R27
0x2BF6	0xE2B4    	LDI        R27, 36
0x2BF8	0x2E2B    	MOV        R2, R27
0x2BFA	0xE0B0    	LDI        R27, 0
0x2BFC	0x2E3B    	MOV        R3, R27
0x2BFE	0x8908    	LDD        R16, Y+16
0x2C00	0x8919    	LDD        R17, Y+17
0x2C02	0x892A    	LDD        R18, Y+18
0x2C04	0x893B    	LDD        R19, Y+19
0x2C06	0x933F    	PUSH       R19
0x2C08	0x932F    	PUSH       R18
0x2C0A	0x931F    	PUSH       R17
0x2C0C	0x930F    	PUSH       R16
0x2C0E	0xE0B0    	LDI        R27, 0
0x2C10	0x93BF    	PUSH       R27
0x2C12	0x93BF    	PUSH       R27
0x2C14	0xDD5D    	RCALL      _print_F+0
0x2C16	0xB7AD    	IN         R26, SPL+0
0x2C18	0xB7BE    	IN         R27, SPL+1
0x2C1A	0x9616    	ADIW       R26, 6
0x2C1C	0xBFAD    	OUT        SPL+0, R26
0x2C1E	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,43 :: 		print_str(80, 120, 1, Green, Black, "P/kPa:");
0x2C20	0xE5B0    	LDI        R27, 80
0x2C22	0x83BE    	STD        Y+6, R27
0x2C24	0xE2BF    	LDI        R27, 47
0x2C26	0x83BF    	STD        Y+7, R27
0x2C28	0xE6BB    	LDI        R27, 107
0x2C2A	0x87B8    	STD        Y+8, R27
0x2C2C	0xE5B0    	LDI        R27, 80
0x2C2E	0x87B9    	STD        Y+9, R27
0x2C30	0xE6B1    	LDI        R27, 97
0x2C32	0x87BA    	STD        Y+10, R27
0x2C34	0xE3BA    	LDI        R27, 58
0x2C36	0x87BB    	STD        Y+11, R27
0x2C38	0xE0B0    	LDI        R27, 0
0x2C3A	0x87BC    	STD        Y+12, R27
0x2C3C	0x018E    	MOVW       R16, R28
0x2C3E	0x5F0A    	SUBI       R16, 250
0x2C40	0x4F1F    	SBCI       R17, 255
0x2C42	0xEEB0    	LDI        R27, 224
0x2C44	0x2E7B    	MOV        R7, R27
0x2C46	0xE0B7    	LDI        R27, 7
0x2C48	0x2E8B    	MOV        R8, R27
0x2C4A	0xE0B1    	LDI        R27, 1
0x2C4C	0x2E6B    	MOV        R6, R27
0x2C4E	0xE7B8    	LDI        R27, 120
0x2C50	0x2E4B    	MOV        R4, R27
0x2C52	0xE0B0    	LDI        R27, 0
0x2C54	0x2E5B    	MOV        R5, R27
0x2C56	0xE5B0    	LDI        R27, 80
0x2C58	0x2E2B    	MOV        R2, R27
0x2C5A	0xE0B0    	LDI        R27, 0
0x2C5C	0x2E3B    	MOV        R3, R27
0x2C5E	0x931F    	PUSH       R17
0x2C60	0x930F    	PUSH       R16
0x2C62	0xE0B0    	LDI        R27, 0
0x2C64	0x93BF    	PUSH       R27
0x2C66	0x93BF    	PUSH       R27
0x2C68	0x0906940E  	CALL       _print_str+0
0x2C6C	0xB7AD    	IN         R26, SPL+0
0x2C6E	0xB7BE    	IN         R27, SPL+1
0x2C70	0x9614    	ADIW       R26, 4
0x2C72	0xBFAD    	OUT        SPL+0, R26
0x2C74	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,44 :: 		print_F(116, 120, 1, Green, Black, P, 2);
0x2C76	0xE0B2    	LDI        R27, 2
0x2C78	0x2E9B    	MOV        R9, R27
0x2C7A	0xEEB0    	LDI        R27, 224
0x2C7C	0x2E7B    	MOV        R7, R27
0x2C7E	0xE0B7    	LDI        R27, 7
0x2C80	0x2E8B    	MOV        R8, R27
0x2C82	0xE0B1    	LDI        R27, 1
0x2C84	0x2E6B    	MOV        R6, R27
0x2C86	0xE7B8    	LDI        R27, 120
0x2C88	0x2E4B    	MOV        R4, R27
0x2C8A	0xE0B0    	LDI        R27, 0
0x2C8C	0x2E5B    	MOV        R5, R27
0x2C8E	0xE7B4    	LDI        R27, 116
0x2C90	0x2E2B    	MOV        R2, R27
0x2C92	0xE0B0    	LDI        R27, 0
0x2C94	0x2E3B    	MOV        R3, R27
0x2C96	0x890C    	LDD        R16, Y+20
0x2C98	0x891D    	LDD        R17, Y+21
0x2C9A	0x892E    	LDD        R18, Y+22
0x2C9C	0x893F    	LDD        R19, Y+23
0x2C9E	0x933F    	PUSH       R19
0x2CA0	0x932F    	PUSH       R18
0x2CA2	0x931F    	PUSH       R17
0x2CA4	0x930F    	PUSH       R16
0x2CA6	0xE0B0    	LDI        R27, 0
0x2CA8	0x93BF    	PUSH       R27
0x2CAA	0x93BF    	PUSH       R27
0x2CAC	0xDD11    	RCALL      _print_F+0
0x2CAE	0xB7AD    	IN         R26, SPL+0
0x2CB0	0xB7BE    	IN         R27, SPL+1
0x2CB2	0x9616    	ADIW       R26, 6
0x2CB4	0xBFAD    	OUT        SPL+0, R26
0x2CB6	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,46 :: 		tp = map(T, 0, 100, 10, 110);
0x2CB8	0x2466    	CLR        R6
0x2CBA	0x2477    	CLR        R7
0x2CBC	0x2488    	CLR        R8
0x2CBE	0x2499    	CLR        R9
0x2CC0	0x8828    	LDD        R2, Y+16
0x2CC2	0x8839    	LDD        R3, Y+17
0x2CC4	0x884A    	LDD        R4, Y+18
0x2CC6	0x885B    	LDD        R5, Y+19
0x2CC8	0xE4B2    	LDI        R27, 66
0x2CCA	0x93BF    	PUSH       R27
0x2CCC	0xEDBC    	LDI        R27, 220
0x2CCE	0x93BF    	PUSH       R27
0x2CD0	0xE0B0    	LDI        R27, 0
0x2CD2	0x93BF    	PUSH       R27
0x2CD4	0x93BF    	PUSH       R27
0x2CD6	0xE4B1    	LDI        R27, 65
0x2CD8	0x93BF    	PUSH       R27
0x2CDA	0xE2B0    	LDI        R27, 32
0x2CDC	0x93BF    	PUSH       R27
0x2CDE	0xE0B0    	LDI        R27, 0
0x2CE0	0x93BF    	PUSH       R27
0x2CE2	0x93BF    	PUSH       R27
0x2CE4	0xE4B2    	LDI        R27, 66
0x2CE6	0x93BF    	PUSH       R27
0x2CE8	0xECB8    	LDI        R27, 200
0x2CEA	0x93BF    	PUSH       R27
0x2CEC	0xE0B0    	LDI        R27, 0
0x2CEE	0x93BF    	PUSH       R27
0x2CF0	0x93BF    	PUSH       R27
0x2CF2	0xDAFE    	RCALL      _map+0
0x2CF4	0xB7AD    	IN         R26, SPL+0
0x2CF6	0xB7BE    	IN         R27, SPL+1
0x2CF8	0x961C    	ADIW       R26, 12
0x2CFA	0xBFAD    	OUT        SPL+0, R26
0x2CFC	0xBFBE    	OUT        SPL+1, R27
0x2CFE	0x05CC940E  	CALL       _float_fpint+0
;comms_demo.c,47 :: 		tp = constrain(tp, 10, 110);
0x2D02	0xE010    	LDI        R17, 0
0x2D04	0x2F21    	MOV        R18, R17
0x2D06	0x2F31    	MOV        R19, R17
0x2D08	0xD80A    	RCALL      _float_ulong2fp+0
0x2D0A	0xE0B0    	LDI        R27, 0
0x2D0C	0x2E6B    	MOV        R6, R27
0x2D0E	0x2E7B    	MOV        R7, R27
0x2D10	0xE2B0    	LDI        R27, 32
0x2D12	0x2E8B    	MOV        R8, R27
0x2D14	0xE4B1    	LDI        R27, 65
0x2D16	0x2E9B    	MOV        R9, R27
0x2D18	0x0118    	MOVW       R2, R16
0x2D1A	0x0129    	MOVW       R4, R18
0x2D1C	0xE4B2    	LDI        R27, 66
0x2D1E	0x93BF    	PUSH       R27
0x2D20	0xEDBC    	LDI        R27, 220
0x2D22	0x93BF    	PUSH       R27
0x2D24	0xE0B0    	LDI        R27, 0
0x2D26	0x93BF    	PUSH       R27
0x2D28	0x93BF    	PUSH       R27
0x2D2A	0x0E93940E  	CALL       _constrain+0
0x2D2E	0xB7AD    	IN         R26, SPL+0
0x2D30	0xB7BE    	IN         R27, SPL+1
0x2D32	0x9614    	ADIW       R26, 4
0x2D34	0xBFAD    	OUT        SPL+0, R26
0x2D36	0xBFBE    	OUT        SPL+1, R27
0x2D38	0x05CC940E  	CALL       _float_fpint+0
0x2D3C	0x870E    	STD        Y+14, R16
;comms_demo.c,48 :: 		pp = map(P, 50, 150, 10, 110);
0x2D3E	0xE0B0    	LDI        R27, 0
0x2D40	0x2E6B    	MOV        R6, R27
0x2D42	0x2E7B    	MOV        R7, R27
0x2D44	0xE4B8    	LDI        R27, 72
0x2D46	0x2E8B    	MOV        R8, R27
0x2D48	0xE4B2    	LDI        R27, 66
0x2D4A	0x2E9B    	MOV        R9, R27
0x2D4C	0x882C    	LDD        R2, Y+20
0x2D4E	0x883D    	LDD        R3, Y+21
0x2D50	0x884E    	LDD        R4, Y+22
0x2D52	0x885F    	LDD        R5, Y+23
0x2D54	0xE4B2    	LDI        R27, 66
0x2D56	0x93BF    	PUSH       R27
0x2D58	0xEDBC    	LDI        R27, 220
0x2D5A	0x93BF    	PUSH       R27
0x2D5C	0xE0B0    	LDI        R27, 0
0x2D5E	0x93BF    	PUSH       R27
0x2D60	0x93BF    	PUSH       R27
0x2D62	0xE4B1    	LDI        R27, 65
0x2D64	0x93BF    	PUSH       R27
0x2D66	0xE2B0    	LDI        R27, 32
0x2D68	0x93BF    	PUSH       R27
0x2D6A	0xE0B0    	LDI        R27, 0
0x2D6C	0x93BF    	PUSH       R27
0x2D6E	0x93BF    	PUSH       R27
0x2D70	0xE4B3    	LDI        R27, 67
0x2D72	0x93BF    	PUSH       R27
0x2D74	0xE1B6    	LDI        R27, 22
0x2D76	0x93BF    	PUSH       R27
0x2D78	0xE0B0    	LDI        R27, 0
0x2D7A	0x93BF    	PUSH       R27
0x2D7C	0x93BF    	PUSH       R27
0x2D7E	0xDAB8    	RCALL      _map+0
0x2D80	0xB7AD    	IN         R26, SPL+0
0x2D82	0xB7BE    	IN         R27, SPL+1
0x2D84	0x961C    	ADIW       R26, 12
0x2D86	0xBFAD    	OUT        SPL+0, R26
0x2D88	0xBFBE    	OUT        SPL+1, R27
0x2D8A	0x05CC940E  	CALL       _float_fpint+0
;comms_demo.c,49 :: 		pp = constrain(pp, 10, 110);
0x2D8E	0xE010    	LDI        R17, 0
0x2D90	0x2F21    	MOV        R18, R17
0x2D92	0x2F31    	MOV        R19, R17
0x2D94	0x0E8F940E  	CALL       _float_ulong2fp+0
0x2D98	0xE0B0    	LDI        R27, 0
0x2D9A	0x2E6B    	MOV        R6, R27
0x2D9C	0x2E7B    	MOV        R7, R27
0x2D9E	0xE2B0    	LDI        R27, 32
0x2DA0	0x2E8B    	MOV        R8, R27
0x2DA2	0xE4B1    	LDI        R27, 65
0x2DA4	0x2E9B    	MOV        R9, R27
0x2DA6	0x0118    	MOVW       R2, R16
0x2DA8	0x0129    	MOVW       R4, R18
0x2DAA	0xE4B2    	LDI        R27, 66
0x2DAC	0x93BF    	PUSH       R27
0x2DAE	0xEDBC    	LDI        R27, 220
0x2DB0	0x93BF    	PUSH       R27
0x2DB2	0xE0B0    	LDI        R27, 0
0x2DB4	0x93BF    	PUSH       R27
0x2DB6	0x93BF    	PUSH       R27
0x2DB8	0x0E93940E  	CALL       _constrain+0
0x2DBC	0xB7AD    	IN         R26, SPL+0
0x2DBE	0xB7BE    	IN         R27, SPL+1
0x2DC0	0x9614    	ADIW       R26, 4
0x2DC2	0xBFAD    	OUT        SPL+0, R26
0x2DC4	0xBFBE    	OUT        SPL+1, R27
0x2DC6	0x05CC940E  	CALL       _float_fpint+0
0x2DCA	0x870F    	STD        Y+15, R16
;comms_demo.c,51 :: 		Draw_V_Line((58 + sample), 10, 110, Black);
0x2DCC	0x850D    	LDD        R16, Y+13
0x2DCE	0xE010    	LDI        R17, 0
0x2DD0	0x5C06    	SUBI       R16, 198
0x2DD2	0x4F1F    	SBCI       R17, 255
0x2DD4	0x2488    	CLR        R8
0x2DD6	0x2499    	CLR        R9
0x2DD8	0xE6BE    	LDI        R27, 110
0x2DDA	0x2E6B    	MOV        R6, R27
0x2DDC	0xE0B0    	LDI        R27, 0
0x2DDE	0x2E7B    	MOV        R7, R27
0x2DE0	0xE0BA    	LDI        R27, 10
0x2DE2	0x2E4B    	MOV        R4, R27
0x2DE4	0xE0B0    	LDI        R27, 0
0x2DE6	0x2E5B    	MOV        R5, R27
0x2DE8	0x0118    	MOVW       R2, R16
0x2DEA	0x0370940E  	CALL       _Draw_V_Line+0
;comms_demo.c,53 :: 		Draw_Pixel((sample + 58), (120 - tp), Red);
0x2DEE	0x840E    	LDD        R0, Y+14
0x2DF0	0xE718    	LDI        R17, 120
0x2DF2	0x1910    	SUB        R17, R0
0x2DF4	0x850D    	LDD        R16, Y+13
0x2DF6	0x5C06    	SUBI       R16, 198
0x2DF8	0xE0B0    	LDI        R27, 0
0x2DFA	0x2E4B    	MOV        R4, R27
0x2DFC	0xEFB8    	LDI        R27, 248
0x2DFE	0x2E5B    	MOV        R5, R27
0x2E00	0x2E31    	MOV        R3, R17
0x2E02	0x2E20    	MOV        R2, R16
0x2E04	0x0357940E  	CALL       _Draw_Pixel+0
;comms_demo.c,54 :: 		Draw_Pixel((sample + 58), (120 - pp), Green);
0x2E08	0x840F    	LDD        R0, Y+15
0x2E0A	0xE718    	LDI        R17, 120
0x2E0C	0x1910    	SUB        R17, R0
0x2E0E	0x850D    	LDD        R16, Y+13
0x2E10	0x5C06    	SUBI       R16, 198
0x2E12	0xEEB0    	LDI        R27, 224
0x2E14	0x2E4B    	MOV        R4, R27
0x2E16	0xE0B7    	LDI        R27, 7
0x2E18	0x2E5B    	MOV        R5, R27
0x2E1A	0x2E31    	MOV        R3, R17
0x2E1C	0x2E20    	MOV        R2, R16
0x2E1E	0x0357940E  	CALL       _Draw_Pixel+0
;comms_demo.c,55 :: 		sample++;
0x2E22	0x850D    	LDD        R16, Y+13
0x2E24	0x2F10    	MOV        R17, R16
0x2E26	0x5F1F    	SUBI       R17, 255
0x2E28	0x871D    	STD        Y+13, R17
;comms_demo.c,57 :: 		if(sample > 99)
0x2E2A	0xE603    	LDI        R16, 99
0x2E2C	0x1701    	CP         R16, R17
0x2E2E	0xF410    	BRSH       L_main208
L__main456:
;comms_demo.c,59 :: 		sample = 0;
0x2E30	0xE0B0    	LDI        R27, 0
0x2E32	0x87BD    	STD        Y+13, R27
;comms_demo.c,60 :: 		}
L_main208:
;comms_demo.c,62 :: 		PORTE_OUT.B2 ^= 1;
0x2E34	0x06849000  	LDS        R0, PORTE_OUT+0
0x2E38	0xE0B4    	LDI        R27, 4
0x2E3A	0x260B    	EOR        R0, R27
0x2E3C	0x06849200  	STS        PORTE_OUT+0, R0
;comms_demo.c,63 :: 		delay_ms(400);
0x2E40	0xE421    	LDI        R18, 65
0x2E42	0xEF10    	LDI        R17, 240
0x2E44	0xE304    	LDI        R16, 52
L_main209:
0x2E46	0x950A    	DEC        R16
0x2E48	0xF7F1    	BRNE       L_main209
0x2E4A	0x951A    	DEC        R17
0x2E4C	0xF7E1    	BRNE       L_main209
0x2E4E	0x952A    	DEC        R18
0x2E50	0xF7D1    	BRNE       L_main209
;comms_demo.c,64 :: 		};
0x2E52	0xCE63    	RJMP       L_main206
;comms_demo.c,65 :: 		}
L_end_main:
0x2E54	0x909F    	POP        R9
0x2E56	0x908F    	POP        R8
0x2E58	0x907F    	POP        R7
0x2E5A	0x906F    	POP        R6
0x2E5C	0x905F    	POP        R5
0x2E5E	0x904F    	POP        R4
0x2E60	0x903F    	POP        R3
0x2E62	0x902F    	POP        R2
L__main_end_loop:
0x2E64	0xCFFF    	RJMP       L__main_end_loop
; end of _main
_setup:
;comms_demo.c,68 :: 		void setup()
;comms_demo.c,70 :: 		clock_setup();
0x1DC8	0x922F    	PUSH       R2
0x1DCA	0x923F    	PUSH       R3
0x1DCC	0xDC48    	RCALL      _clock_setup+0
;comms_demo.c,71 :: 		GPIO_setup();
0x1DCE	0xDBB3    	RCALL      _GPIO_setup+0
;comms_demo.c,72 :: 		BMP180_init();
0x1DD0	0xDC7D    	RCALL      _BMP180_init+0
;comms_demo.c,73 :: 		ST7735_init();
0x1DD2	0xDCCF    	RCALL      _ST7735_init+0
;comms_demo.c,74 :: 		Set_Rotation(0x03);
0x1DD4	0xE0B3    	LDI        R27, 3
0x1DD6	0x2E2B    	MOV        R2, R27
0x1DD8	0xDC88    	RCALL      _Set_Rotation+0
;comms_demo.c,75 :: 		TFT_fill(Swap_Colour(Black));
0x1DDA	0x2422    	CLR        R2
0x1DDC	0x2433    	CLR        R3
0x1DDE	0xD9E1    	RCALL      _Swap_Colour+0
0x1DE0	0x0118    	MOVW       R2, R16
0x1DE2	0xD9F3    	RCALL      _TFT_fill+0
;comms_demo.c,76 :: 		}
L_end_setup:
0x1DE4	0x903F    	POP        R3
0x1DE6	0x902F    	POP        R2
0x1DE8	0x9508    	RET
; end of _setup
_clock_setup:
;comms_demo.c,79 :: 		void clock_setup()
;comms_demo.c,81 :: 		OSC_CTRL |= OSC_RC32KEN_bm;
0x165E	0x005091B0  	LDS        R27, OSC_CTRL+0
0x1662	0x60B4    	SBR        R27, 4
0x1664	0x005093B0  	STS        OSC_CTRL+0, R27
;comms_demo.c,82 :: 		while(!(OSC_STATUS & OSC_RC32KRDY_bm));
L_clock_setup211:
0x1668	0x00519100  	LDS        R16, OSC_STATUS+0
0x166C	0xFD02    	SBRC       R16, 2
0x166E	0xC001    	RJMP       L_clock_setup212
0x1670	0xCFFB    	RJMP       L_clock_setup211
L_clock_setup212:
;comms_demo.c,83 :: 		OSC_CTRL |= OSC_RC32MEN_bm;
0x1672	0x00509100  	LDS        R16, OSC_CTRL+0
0x1676	0x6002    	ORI        R16, 2
0x1678	0x00509300  	STS        OSC_CTRL+0, R16
;comms_demo.c,84 :: 		CPU_CCP = CCP_IOREG_gc;
0x167C	0xEDB8    	LDI        R27, 216
0x167E	0xBFB4    	OUT        CPU_CCP+0, R27
;comms_demo.c,86 :: 		| CLK_PSBCDIV0_bm))) | CLK_PSADIV_1_gc | CLK_PSBCDIV_2_2_gc);
0x1680	0x00419100  	LDS        R16, CLK_PSCTRL+0
0x1684	0x7800    	ANDI       R16, 128
0x1686	0x6003    	ORI        R16, 3
0x1688	0x00419300  	STS        CLK_PSCTRL+0, R16
;comms_demo.c,87 :: 		OSC_DFLLCTRL = ((OSC_DFLLCTRL & (~(OSC_RC32MCREF_gm | OSC_RC2MCREF_bm))) |
0x168C	0x00569100  	LDS        R16, OSC_DFLLCTRL+0
0x1690	0x7F08    	ANDI       R16, 248
;comms_demo.c,88 :: 		OSC_RC32MCREF_RC32K_gc);
0x1692	0x00569300  	STS        OSC_DFLLCTRL+0, R16
;comms_demo.c,89 :: 		DFLLRC32M_CTRL |= DFLL_ENABLE_bm;
0x1696	0x00609100  	LDS        R16, DFLLRC32M_CTRL+0
0x169A	0x6001    	ORI        R16, 1
0x169C	0x00609300  	STS        DFLLRC32M_CTRL+0, R16
;comms_demo.c,90 :: 		while(!(OSC_STATUS & OSC_RC32MRDY_bm));
L_clock_setup213:
0x16A0	0x00519100  	LDS        R16, OSC_STATUS+0
0x16A4	0xFD01    	SBRC       R16, 1
0x16A6	0xC001    	RJMP       L_clock_setup214
0x16A8	0xCFFB    	RJMP       L_clock_setup213
L_clock_setup214:
;comms_demo.c,91 :: 		CPU_CCP = CCP_IOREG_gc;
0x16AA	0xEDB8    	LDI        R27, 216
0x16AC	0xBFB4    	OUT        CPU_CCP+0, R27
;comms_demo.c,92 :: 		CLK_CTRL = ((CLK_CTRL & (~CLK_SCLKSEL_gm)) | CLK_SCLKSEL_RC32M_gc);
0x16AE	0x00409100  	LDS        R16, CLK_CTRL+0
0x16B2	0x7F08    	ANDI       R16, 248
0x16B4	0x6001    	ORI        R16, 1
0x16B6	0x00409300  	STS        CLK_CTRL+0, R16
;comms_demo.c,93 :: 		OSC_CTRL &= (~(OSC_RC2MEN_bm | OSC_XOSCEN_bm | OSC_PLLEN_bm));
0x16BA	0x00509100  	LDS        R16, OSC_CTRL+0
0x16BE	0x7E06    	ANDI       R16, 230
0x16C0	0x00509300  	STS        OSC_CTRL+0, R16
;comms_demo.c,94 :: 		PORTCFG_CLKEVOUT = 0x00;
0x16C4	0xE0B0    	LDI        R27, 0
0x16C6	0x00B493B0  	STS        PORTCFG_CLKEVOUT+0, R27
;comms_demo.c,95 :: 		}
L_end_clock_setup:
0x16CA	0x9508    	RET
; end of _clock_setup
_GPIO_setup:
;comms_demo.c,98 :: 		void GPIO_setup()
;comms_demo.c,100 :: 		PORTA_OUT = 0x00;
0x1536	0xE0B0    	LDI        R27, 0
0x1538	0x060493B0  	STS        PORTA_OUT+0, R27
;comms_demo.c,101 :: 		PORTA_DIR = 0x00;
0x153C	0xE0B0    	LDI        R27, 0
0x153E	0x060093B0  	STS        PORTA_DIR+0, R27
;comms_demo.c,102 :: 		PORTCFG_MPCMASK = 0xFF;
0x1542	0xEFBF    	LDI        R27, 255
0x1544	0x00B093B0  	STS        PORTCFG_MPCMASK+0, R27
;comms_demo.c,103 :: 		PORTA_PIN0CTRL = (PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc);
0x1548	0xE0B0    	LDI        R27, 0
0x154A	0x061093B0  	STS        PORTA_PIN0CTRL+0, R27
;comms_demo.c,104 :: 		PORTA_INTCTRL = ((PORTA_INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
0x154E	0x06099100  	LDS        R16, PORTA_INTCTRL+0
0x1552	0x7F00    	ANDI       R16, 240
;comms_demo.c,105 :: 		PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc);
0x1554	0x06099300  	STS        PORTA_INTCTRL+0, R16
;comms_demo.c,106 :: 		PORTA_INT0MASK = 0x00;
0x1558	0xE0B0    	LDI        R27, 0
0x155A	0x060A93B0  	STS        PORTA_INT0MASK+0, R27
;comms_demo.c,107 :: 		PORTA_INT1MASK = 0x00;
0x155E	0xE0B0    	LDI        R27, 0
0x1560	0x060B93B0  	STS        PORTA_INT1MASK+0, R27
;comms_demo.c,109 :: 		PORTB_OUT = 0x00;
0x1564	0xE0B0    	LDI        R27, 0
0x1566	0x062493B0  	STS        PORTB_OUT+0, R27
;comms_demo.c,110 :: 		PORTB_DIR = 0x00;
0x156A	0xE0B0    	LDI        R27, 0
0x156C	0x062093B0  	STS        PORTB_DIR+0, R27
;comms_demo.c,111 :: 		PORTCFG_MPCMASK = 0x0F;
0x1570	0xE0BF    	LDI        R27, 15
0x1572	0x00B093B0  	STS        PORTCFG_MPCMASK+0, R27
;comms_demo.c,112 :: 		PORTB_PIN0CTRL = (PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc);
0x1576	0xE0B0    	LDI        R27, 0
0x1578	0x063093B0  	STS        PORTB_PIN0CTRL+0, R27
;comms_demo.c,113 :: 		PORTB_INTCTRL = ((PORTB_INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
0x157C	0x06299100  	LDS        R16, PORTB_INTCTRL+0
0x1580	0x7F00    	ANDI       R16, 240
;comms_demo.c,114 :: 		PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc);
0x1582	0x06299300  	STS        PORTB_INTCTRL+0, R16
;comms_demo.c,115 :: 		PORTB_INT0MASK = 0x00;
0x1586	0xE0B0    	LDI        R27, 0
0x1588	0x062A93B0  	STS        PORTB_INT0MASK+0, R27
;comms_demo.c,116 :: 		PORTB_INT1MASK = 0x00;
0x158C	0xE0B0    	LDI        R27, 0
0x158E	0x062B93B0  	STS        PORTB_INT1MASK+0, R27
;comms_demo.c,119 :: 		PORTC_OUT = 0x00;
0x1592	0xE0B0    	LDI        R27, 0
0x1594	0x064493B0  	STS        PORTC_OUT+0, R27
;comms_demo.c,120 :: 		PORTC_DIR = 0xBE;
0x1598	0xEBBE    	LDI        R27, 190
0x159A	0x064093B0  	STS        PORTC_DIR+0, R27
;comms_demo.c,121 :: 		PORTCFG_MPCMASK = 0xFF;
0x159E	0xEFBF    	LDI        R27, 255
0x15A0	0x00B093B0  	STS        PORTCFG_MPCMASK+0, R27
;comms_demo.c,122 :: 		PORTC_PIN0CTRL = (PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc);
0x15A4	0xE0B0    	LDI        R27, 0
0x15A6	0x065093B0  	STS        PORTC_PIN0CTRL+0, R27
;comms_demo.c,123 :: 		PORTC_REMAP = ((0 << PORT_SPI_bp) | (0 << PORT_USART0_bp) | (0 << PORT_TC0D_bp) | (0 << PORT_TC0C_bp) | (0 << PORT_TC0B_bp) | (0 << PORT_TC0A_bp));
0x15AA	0xE0B0    	LDI        R27, 0
0x15AC	0x064E93B0  	STS        PORTC_REMAP+0, R27
;comms_demo.c,124 :: 		PORTC_INTCTRL = ((PORTC_INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
0x15B0	0x06499100  	LDS        R16, PORTC_INTCTRL+0
0x15B4	0x7F00    	ANDI       R16, 240
;comms_demo.c,125 :: 		PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc);
0x15B6	0x06499300  	STS        PORTC_INTCTRL+0, R16
;comms_demo.c,126 :: 		PORTC_INT0MASK = 0x00;
0x15BA	0xE0B0    	LDI        R27, 0
0x15BC	0x064A93B0  	STS        PORTC_INT0MASK+0, R27
;comms_demo.c,127 :: 		PORTC_INT1MASK = 0x00;
0x15C0	0xE0B0    	LDI        R27, 0
0x15C2	0x064B93B0  	STS        PORTC_INT1MASK+0, R27
;comms_demo.c,129 :: 		PORTD_OUT = 0x00;
0x15C6	0xE0B0    	LDI        R27, 0
0x15C8	0x066493B0  	STS        PORTD_OUT+0, R27
;comms_demo.c,130 :: 		PORTD_DIR = 0x00;
0x15CC	0xE0B0    	LDI        R27, 0
0x15CE	0x066093B0  	STS        PORTD_DIR+0, R27
;comms_demo.c,131 :: 		PORTCFG_MPCMASK = 0xFF;
0x15D2	0xEFBF    	LDI        R27, 255
0x15D4	0x00B093B0  	STS        PORTCFG_MPCMASK+0, R27
;comms_demo.c,132 :: 		PORTD_PIN0CTRL = (PORT_OPC_PULLUP_gc | PORT_ISC_BOTHEDGES_gc);
0x15D8	0xE1B8    	LDI        R27, 24
0x15DA	0x067093B0  	STS        PORTD_PIN0CTRL+0, R27
;comms_demo.c,133 :: 		PORTD_INTCTRL = ((PORTD_INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
0x15DE	0x06699100  	LDS        R16, PORTD_INTCTRL+0
0x15E2	0x7F00    	ANDI       R16, 240
;comms_demo.c,134 :: 		PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc);
0x15E4	0x06699300  	STS        PORTD_INTCTRL+0, R16
;comms_demo.c,135 :: 		PORTD_INT0MASK = 0x00;
0x15E8	0xE0B0    	LDI        R27, 0
0x15EA	0x066A93B0  	STS        PORTD_INT0MASK+0, R27
;comms_demo.c,136 :: 		PORTD_INT1MASK = 0x00;
0x15EE	0xE0B0    	LDI        R27, 0
0x15F0	0x066B93B0  	STS        PORTD_INT1MASK+0, R27
;comms_demo.c,138 :: 		PORTE_OUT = 0x0C;
0x15F4	0xE0BC    	LDI        R27, 12
0x15F6	0x068493B0  	STS        PORTE_OUT+0, R27
;comms_demo.c,139 :: 		PORTE_DIR = 0x0C;
0x15FA	0xE0BC    	LDI        R27, 12
0x15FC	0x068093B0  	STS        PORTE_DIR+0, R27
;comms_demo.c,140 :: 		PORTCFG_MPCMASK = 0x0F;
0x1600	0xE0BF    	LDI        R27, 15
0x1602	0x00B093B0  	STS        PORTCFG_MPCMASK+0, R27
;comms_demo.c,141 :: 		PORTE_PIN0CTRL = (PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc);
0x1606	0xE0B0    	LDI        R27, 0
0x1608	0x069093B0  	STS        PORTE_PIN0CTRL+0, R27
;comms_demo.c,142 :: 		PORTE_INTCTRL = ((PORTE_INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
0x160C	0x06899100  	LDS        R16, PORTE_INTCTRL+0
0x1610	0x7F00    	ANDI       R16, 240
;comms_demo.c,143 :: 		PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc);
0x1612	0x06899300  	STS        PORTE_INTCTRL+0, R16
;comms_demo.c,144 :: 		PORTE_INT0MASK = 0x00;
0x1616	0xE0B0    	LDI        R27, 0
0x1618	0x068A93B0  	STS        PORTE_INT0MASK+0, R27
;comms_demo.c,145 :: 		PORTE_INT1MASK = 0x00;
0x161C	0xE0B0    	LDI        R27, 0
0x161E	0x068B93B0  	STS        PORTE_INT1MASK+0, R27
;comms_demo.c,147 :: 		PORTR_OUT = 0x00;
0x1622	0xE0B0    	LDI        R27, 0
0x1624	0x07E493B0  	STS        PORTR_OUT+0, R27
;comms_demo.c,148 :: 		PORTR_DIR = 0x00;
0x1628	0xE0B0    	LDI        R27, 0
0x162A	0x07E093B0  	STS        PORTR_DIR+0, R27
;comms_demo.c,149 :: 		PORTCFG_MPCMASK = 0x03;
0x162E	0xE0B3    	LDI        R27, 3
0x1630	0x00B093B0  	STS        PORTCFG_MPCMASK+0, R27
;comms_demo.c,150 :: 		PORTR_PIN0CTRL = (PORT_OPC_TOTEM_gc | PORT_ISC_BOTHEDGES_gc);
0x1634	0xE0B0    	LDI        R27, 0
0x1636	0x07F093B0  	STS        PORTR_PIN0CTRL+0, R27
;comms_demo.c,151 :: 		PORTR_INTCTRL = ((PORTR_INTCTRL & (~(PORT_INT1LVL_gm | PORT_INT0LVL_gm))) |
0x163A	0x07E99100  	LDS        R16, PORTR_INTCTRL+0
0x163E	0x7F00    	ANDI       R16, 240
;comms_demo.c,152 :: 		PORT_INT1LVL_OFF_gc | PORT_INT0LVL_OFF_gc);
0x1640	0x07E99300  	STS        PORTR_INTCTRL+0, R16
;comms_demo.c,153 :: 		PORTR_INT0MASK = 0x00;
0x1644	0xE0B0    	LDI        R27, 0
0x1646	0x07EA93B0  	STS        PORTR_INT0MASK+0, R27
;comms_demo.c,154 :: 		PORTR_INT1MASK = 0x00;
0x164A	0xE0B0    	LDI        R27, 0
0x164C	0x07EB93B0  	STS        PORTR_INT1MASK+0, R27
;comms_demo.c,156 :: 		PORTCFG_VPCTRLA = (PORTCFG_VP13MAP_PORTB_gc | PORTCFG_VP02MAP_PORTA_gc);
0x1650	0xE1B0    	LDI        R27, 16
0x1652	0x00B293B0  	STS        PORTCFG_VPCTRLA+0, R27
;comms_demo.c,157 :: 		PORTCFG_VPCTRLB = (PORTCFG_VP13MAP_PORTD_gc | PORTCFG_VP02MAP_PORTC_gc);
0x1656	0xE3B2    	LDI        R27, 50
0x1658	0x00B393B0  	STS        PORTCFG_VPCTRLB+0, R27
;comms_demo.c,158 :: 		}
L_end_GPIO_setup:
0x165C	0x9508    	RET
; end of _GPIO_setup
_BMP180_init:
;bmp180.c,4 :: 		void BMP180_init()
;bmp180.c,6 :: 		TWIC_Init(100000);
0x16CC	0xE9BB    	LDI        R27, 155
0x16CE	0x048593B0  	STS        TWIC_MASTER_BAUD+0, R27
0x16D2	0xD989    	RCALL      _TWIC_Init+0
;bmp180.c,7 :: 		delay_ms(100);
0x16D4	0xE121    	LDI        R18, 17
0x16D6	0xE31C    	LDI        R17, 60
0x16D8	0xEC0C    	LDI        R16, 204
L_BMP180_init186:
0x16DA	0x950A    	DEC        R16
0x16DC	0xF7F1    	BRNE       L_BMP180_init186
0x16DE	0x951A    	DEC        R17
0x16E0	0xF7E1    	BRNE       L_BMP180_init186
0x16E2	0x952A    	DEC        R18
0x16E4	0xF7D1    	BRNE       L_BMP180_init186
;bmp180.c,9 :: 		BMP180_Calibration();
0x16E6	0xD880    	RCALL      _BMP180_Calibration+0
;bmp180.c,10 :: 		}
L_end_BMP180_init:
0x16E8	0x9508    	RET
; end of _BMP180_init
_BMP180_Calibration:
;bmp180.c,60 :: 		void BMP180_Calibration()
;bmp180.c,62 :: 		_b1 = BMP180_read_word(B1_reg);
0x07E8	0x922F    	PUSH       R2
0x07EA	0xEBB6    	LDI        R27, 182
0x07EC	0x2E2B    	MOV        R2, R27
0x07EE	0xDE92    	RCALL      _BMP180_read_word+0
0x07F0	0x20189300  	STS        __b1+0, R16
0x07F4	0x20199310  	STS        __b1+1, R17
;bmp180.c,63 :: 		_b2 = BMP180_read_word(B2_reg);
0x07F8	0xEBB8    	LDI        R27, 184
0x07FA	0x2E2B    	MOV        R2, R27
0x07FC	0xDE8B    	RCALL      _BMP180_read_word+0
0x07FE	0x200E9300  	STS        __b2+0, R16
0x0802	0x200F9310  	STS        __b2+1, R17
;bmp180.c,64 :: 		mb = BMP180_read_word(MB_reg);
0x0806	0xEBBA    	LDI        R27, 186
0x0808	0x2E2B    	MOV        R2, R27
0x080A	0xDE84    	RCALL      _BMP180_read_word+0
0x080C	0x20089300  	STS        _mb+0, R16
0x0810	0x20099310  	STS        _mb+1, R17
;bmp180.c,65 :: 		mc = BMP180_read_word(MC_reg);
0x0814	0xEBBC    	LDI        R27, 188
0x0816	0x2E2B    	MOV        R2, R27
0x0818	0xDE7D    	RCALL      _BMP180_read_word+0
0x081A	0x20059300  	STS        _mc+0, R16
0x081E	0x20069310  	STS        _mc+1, R17
;bmp180.c,66 :: 		md = BMP180_read_word(MD_reg);
0x0822	0xEBBE    	LDI        R27, 190
0x0824	0x2E2B    	MOV        R2, R27
0x0826	0xDE76    	RCALL      _BMP180_read_word+0
0x0828	0x20009300  	STS        _md+0, R16
0x082C	0x20019310  	STS        _md+1, R17
;bmp180.c,67 :: 		ac1 = BMP180_read_word(AC1_reg);
0x0830	0xEABA    	LDI        R27, 170
0x0832	0x2E2B    	MOV        R2, R27
0x0834	0xDE6F    	RCALL      _BMP180_read_word+0
0x0836	0x200C9300  	STS        _ac1+0, R16
0x083A	0x200D9310  	STS        _ac1+1, R17
;bmp180.c,68 :: 		ac2 = BMP180_read_word(AC2_reg);
0x083E	0xEABC    	LDI        R27, 172
0x0840	0x2E2B    	MOV        R2, R27
0x0842	0xDE68    	RCALL      _BMP180_read_word+0
0x0844	0x20109300  	STS        _ac2+0, R16
0x0848	0x20119310  	STS        _ac2+1, R17
;bmp180.c,69 :: 		ac3 = BMP180_read_word(AC3_reg);
0x084C	0xEABE    	LDI        R27, 174
0x084E	0x2E2B    	MOV        R2, R27
0x0850	0xDE61    	RCALL      _BMP180_read_word+0
0x0852	0x201A9300  	STS        _ac3+0, R16
0x0856	0x201B9310  	STS        _ac3+1, R17
;bmp180.c,70 :: 		ac4 = BMP180_read_word(AC4_reg);
0x085A	0xEBB0    	LDI        R27, 176
0x085C	0x2E2B    	MOV        R2, R27
0x085E	0xDE5A    	RCALL      _BMP180_read_word+0
0x0860	0x20169300  	STS        _ac4+0, R16
0x0864	0x20179310  	STS        _ac4+1, R17
;bmp180.c,71 :: 		ac5 = BMP180_read_word(AC5_reg);
0x0868	0xEBB2    	LDI        R27, 178
0x086A	0x2E2B    	MOV        R2, R27
0x086C	0xDE53    	RCALL      _BMP180_read_word+0
0x086E	0x20039300  	STS        _ac5+0, R16
0x0872	0x20049310  	STS        _ac5+1, R17
;bmp180.c,72 :: 		ac6 = BMP180_read_word(AC6_reg);
0x0876	0xEBB4    	LDI        R27, 180
0x0878	0x2E2B    	MOV        R2, R27
0x087A	0xDE4C    	RCALL      _BMP180_read_word+0
0x087C	0x200A9300  	STS        _ac6+0, R16
0x0880	0x200B9310  	STS        _ac6+1, R17
;bmp180.c,73 :: 		}
L_end_BMP180_Calibration:
0x0884	0x902F    	POP        R2
0x0886	0x9508    	RET
; end of _BMP180_Calibration
_BMP180_read_word:
;bmp180.c,29 :: 		signed int BMP180_read_word(unsigned char address)
;bmp180.c,31 :: 		unsigned char hb = 0;
0x0514	0x922F    	PUSH       R2
;bmp180.c,32 :: 		unsigned char lb = 0;
;bmp180.c,34 :: 		signed int temp = 0;
;bmp180.c,36 :: 		TWIC_Start();
0x0516	0xDE9C    	RCALL      _TWIC_Start+0
;bmp180.c,37 :: 		TWIC_Write(BMP180_Address);
0x0518	0x922F    	PUSH       R2
0x051A	0xEEBE    	LDI        R27, 238
0x051C	0x2E2B    	MOV        R2, R27
0x051E	0xDE7D    	RCALL      _TWIC_Write+0
0x0520	0x902F    	POP        R2
;bmp180.c,38 :: 		TWIC_Write(address);
0x0522	0xDE7B    	RCALL      _TWIC_Write+0
;bmp180.c,39 :: 		TWIC_Start();
0x0524	0xDE95    	RCALL      _TWIC_Start+0
;bmp180.c,40 :: 		TWIC_Write(BMP180_Address | 1);
0x0526	0xEEBF    	LDI        R27, 239
0x0528	0x2E2B    	MOV        R2, R27
0x052A	0xDE77    	RCALL      _TWIC_Write+0
;bmp180.c,41 :: 		hb = TWIC_Read(1);
0x052C	0xE0B1    	LDI        R27, 1
0x052E	0x2E2B    	MOV        R2, R27
0x0530	0xDE65    	RCALL      _TWIC_Read+0
; hb start address is: 18 (R18)
0x0532	0x2F20    	MOV        R18, R16
;bmp180.c,42 :: 		lb = TWIC_Read(0);
0x0534	0x2422    	CLR        R2
0x0536	0xDE62    	RCALL      _TWIC_Read+0
; lb start address is: 19 (R19)
0x0538	0x2F30    	MOV        R19, R16
;bmp180.c,43 :: 		TWIC_Stop();
0x053A	0xDE9D    	RCALL      _TWIC_Stop+0
;bmp180.c,44 :: 		temp = ((hb << 8) | lb);
0x053C	0x2F12    	MOV        R17, R18
0x053E	0x2700    	CLR        R16
; hb end address is: 18 (R18)
0x0540	0x2B03    	OR         R16, R19
; lb end address is: 19 (R19)
;bmp180.c,46 :: 		return temp;
;bmp180.c,47 :: 		}
;bmp180.c,46 :: 		return temp;
;bmp180.c,47 :: 		}
L_end_BMP180_read_word:
0x0542	0x902F    	POP        R2
0x0544	0x9508    	RET
; end of _BMP180_read_word
_TWIC_Start:
;__Lib_TWI_c01_e01.c,19 :: 		
;__Lib_TWI_c01_e01.c,21 :: 		
0x0250	0xE0B0    	LDI        R27, 0
0x0252	0x202093B0  	STS        __Lib_TWI_c01_e01__addressFlag+0, R27
;__Lib_TWI_c01_e01.c,22 :: 		
; i start address is: 17 (R17)
0x0256	0xE010    	LDI        R17, 0
; i end address is: 17 (R17)
L_TWIC_Start2:
; i start address is: 17 (R17)
0x0258	0x3312    	CPI        R17, 50
0x025A	0xF458    	BRSH       L_TWIC_Start3
L__TWIC_Start21:
;__Lib_TWI_c01_e01.c,23 :: 		
0x025C	0x04849100  	LDS        R16, TWIC_MASTER_STATUS+0
0x0260	0x7003    	ANDI       R16, 3
0x0262	0x3001    	CPI        R16, 1
0x0264	0xF411    	BRNE       L_TWIC_Start5
L__TWIC_Start22:
; i end address is: 17 (R17)
0x0266	0xE001    	LDI        R16, 1
0x0268	0xC005    	RJMP       L_end_TWIC_Start
L_TWIC_Start5:
;__Lib_TWI_c01_e01.c,22 :: 		
; i start address is: 17 (R17)
0x026A	0x2F01    	MOV        R16, R17
0x026C	0x5F0F    	SUBI       R16, 255
0x026E	0x2F10    	MOV        R17, R16
;__Lib_TWI_c01_e01.c,23 :: 		
; i end address is: 17 (R17)
0x0270	0xCFF3    	RJMP       L_TWIC_Start2
L_TWIC_Start3:
;__Lib_TWI_c01_e01.c,24 :: 		
0x0272	0xE000    	LDI        R16, 0
;__Lib_TWI_c01_e01.c,25 :: 		
L_end_TWIC_Start:
0x0274	0x9508    	RET
; end of _TWIC_Start
_TWIC_Write:
;__Lib_TWI_c01_e01.c,31 :: 		
;__Lib_TWI_c01_e01.c,32 :: 		
0x021A	0x20209100  	LDS        R16, __Lib_TWI_c01_e01__addressFlag+0
0x021E	0x3000    	CPI        R16, 0
0x0220	0xF479    	BRNE       L_TWIC_Write6
L__TWIC_Write25:
;__Lib_TWI_c01_e01.c,33 :: 		
0x0222	0x04869220  	STS        TWIC_MASTER_ADDR+0, R2
;__Lib_TWI_c01_e01.c,34 :: 		
0x0226	0x2D02    	MOV        R16, R2
0x0228	0x7001    	ANDI       R16, 1
0x022A	0x3000    	CPI        R16, 0
0x022C	0xF429    	BRNE       L_TWIC_Write7
L__TWIC_Write26:
;__Lib_TWI_c01_e01.c,35 :: 		
L_TWIC_Write8:
0x022E	0x048491B0  	LDS        R27, TWIC_MASTER_STATUS+0
0x0232	0xFDB6    	SBRC       R27, 6
0x0234	0xC001    	RJMP       L_TWIC_Write9
;__Lib_TWI_c01_e01.c,36 :: 		
0x0236	0xCFFB    	RJMP       L_TWIC_Write8
L_TWIC_Write9:
L_TWIC_Write7:
;__Lib_TWI_c01_e01.c,37 :: 		
0x0238	0xE0B1    	LDI        R27, 1
0x023A	0x202093B0  	STS        __Lib_TWI_c01_e01__addressFlag+0, R27
;__Lib_TWI_c01_e01.c,38 :: 		
0x023E	0xC007    	RJMP       L_TWIC_Write10
L_TWIC_Write6:
;__Lib_TWI_c01_e01.c,39 :: 		
0x0240	0x04879220  	STS        TWIC_MASTER_DATA+0, R2
;__Lib_TWI_c01_e01.c,40 :: 		
L_TWIC_Write11:
0x0244	0x048491B0  	LDS        R27, TWIC_MASTER_STATUS+0
0x0248	0xFDB6    	SBRC       R27, 6
0x024A	0xC001    	RJMP       L_TWIC_Write12
;__Lib_TWI_c01_e01.c,41 :: 		
0x024C	0xCFFB    	RJMP       L_TWIC_Write11
L_TWIC_Write12:
;__Lib_TWI_c01_e01.c,42 :: 		
L_TWIC_Write10:
;__Lib_TWI_c01_e01.c,43 :: 		
L_end_TWIC_Write:
0x024E	0x9508    	RET
; end of _TWIC_Write
_TWIC_Read:
;__Lib_TWI_c01_e01.c,45 :: 		
;__Lib_TWI_c01_e01.c,47 :: 		
L_TWIC_Read13:
0x01FC	0x048491B0  	LDS        R27, TWIC_MASTER_STATUS+0
0x0200	0xFDB7    	SBRC       R27, 7
0x0202	0xC001    	RJMP       L_TWIC_Read14
;__Lib_TWI_c01_e01.c,48 :: 		
0x0204	0xCFFB    	RJMP       L_TWIC_Read13
L_TWIC_Read14:
;__Lib_TWI_c01_e01.c,49 :: 		
; rslt start address is: 17 (R17)
0x0206	0x04879110  	LDS        R17, TWIC_MASTER_DATA+0
;__Lib_TWI_c01_e01.c,50 :: 		
0x020A	0xE0B1    	LDI        R27, 1
0x020C	0x162B    	CP         R2, R27
0x020E	0xF419    	BRNE       L_TWIC_Read15
L__TWIC_Read28:
0x0210	0xE0B2    	LDI        R27, 2
0x0212	0x048393B0  	STS        TWIC_MASTER_CTRLC+0, R27
L_TWIC_Read15:
;__Lib_TWI_c01_e01.c,51 :: 		
0x0216	0x2F01    	MOV        R16, R17
; rslt end address is: 17 (R17)
;__Lib_TWI_c01_e01.c,52 :: 		
L_end_TWIC_Read:
0x0218	0x9508    	RET
; end of _TWIC_Read
_TWIC_Stop:
;__Lib_TWI_c01_e01.c,27 :: 		
;__Lib_TWI_c01_e01.c,28 :: 		
0x0276	0xE0B7    	LDI        R27, 7
0x0278	0x048393B0  	STS        TWIC_MASTER_CTRLC+0, R27
;__Lib_TWI_c01_e01.c,29 :: 		
L_end_TWIC_Stop:
0x027C	0x9508    	RET
; end of _TWIC_Stop
_TWIC_Init:
;__Lib_TWI_c01_e01.c,3 :: 		
;__Lib_TWI_c01_e01.c,4 :: 		
0x09E6	0xE0B8    	LDI        R27, 8
0x09E8	0x048193B0  	STS        TWIC_MASTER_CTRLA+0, R27
;__Lib_TWI_c01_e01.c,5 :: 		
0x09EC	0xE0B1    	LDI        R27, 1
0x09EE	0x048493B0  	STS        TWIC_MASTER_STATUS+0, R27
;__Lib_TWI_c01_e01.c,6 :: 		
L_end_TWIC_Init:
0x09F2	0x9508    	RET
; end of _TWIC_Init
_ST7735_init:
;st7735.c,44 :: 		void ST7735_init()
;st7735.c,46 :: 		setup_TFT_peripherals();
0x1772	0x922F    	PUSH       R2
0x1774	0x923F    	PUSH       R3
0x1776	0x924F    	PUSH       R4
0x1778	0x925F    	PUSH       R5
0x177A	0xD9B0    	RCALL      _setup_TFT_peripherals+0
;st7735.c,48 :: 		ST7735_Reset();
0x177C	0xD91D    	RCALL      _ST7735_Reset+0
;st7735.c,50 :: 		TFT_Write(ST7735_SWRESET, CMD);
0x177E	0x2433    	CLR        R3
0x1780	0xE0B1    	LDI        R27, 1
0x1782	0x2E2B    	MOV        R2, R27
0x1784	0xD8EC    	RCALL      _TFT_Write+0
;st7735.c,51 :: 		delay_us(150);
0x1786	0xE017    	LDI        R17, 7
0x1788	0xE30B    	LDI        R16, 59
L_ST7735_init8:
0x178A	0x950A    	DEC        R16
0x178C	0xF7F1    	BRNE       L_ST7735_init8
0x178E	0x951A    	DEC        R17
0x1790	0xF7E1    	BRNE       L_ST7735_init8
;st7735.c,52 :: 		TFT_Write(ST7735_SLPOUT, CMD);
0x1792	0x2433    	CLR        R3
0x1794	0xE1B1    	LDI        R27, 17
0x1796	0x2E2B    	MOV        R2, R27
0x1798	0xD8E2    	RCALL      _TFT_Write+0
;st7735.c,53 :: 		delay_us(150);
0x179A	0xE017    	LDI        R17, 7
0x179C	0xE30B    	LDI        R16, 59
L_ST7735_init10:
0x179E	0x950A    	DEC        R16
0x17A0	0xF7F1    	BRNE       L_ST7735_init10
0x17A2	0x951A    	DEC        R17
0x17A4	0xF7E1    	BRNE       L_ST7735_init10
;st7735.c,55 :: 		TFT_Write(ST7735_FRMCTR1, CMD);
0x17A6	0x2433    	CLR        R3
0x17A8	0xEBB1    	LDI        R27, 177
0x17AA	0x2E2B    	MOV        R2, R27
0x17AC	0xD8D8    	RCALL      _TFT_Write+0
;st7735.c,56 :: 		TFT_Write(0x01, DAT);
0x17AE	0xE0B1    	LDI        R27, 1
0x17B0	0x2E3B    	MOV        R3, R27
0x17B2	0xE0B1    	LDI        R27, 1
0x17B4	0x2E2B    	MOV        R2, R27
0x17B6	0xD8D3    	RCALL      _TFT_Write+0
;st7735.c,57 :: 		TFT_Write(0x2C, DAT);
0x17B8	0xE0B1    	LDI        R27, 1
0x17BA	0x2E3B    	MOV        R3, R27
0x17BC	0xE2BC    	LDI        R27, 44
0x17BE	0x2E2B    	MOV        R2, R27
0x17C0	0xD8CE    	RCALL      _TFT_Write+0
;st7735.c,58 :: 		TFT_Write(0x2D, DAT);
0x17C2	0xE0B1    	LDI        R27, 1
0x17C4	0x2E3B    	MOV        R3, R27
0x17C6	0xE2BD    	LDI        R27, 45
0x17C8	0x2E2B    	MOV        R2, R27
0x17CA	0xD8C9    	RCALL      _TFT_Write+0
;st7735.c,60 :: 		TFT_Write(ST7735_FRMCTR2, CMD);
0x17CC	0x2433    	CLR        R3
0x17CE	0xEBB2    	LDI        R27, 178
0x17D0	0x2E2B    	MOV        R2, R27
0x17D2	0xD8C5    	RCALL      _TFT_Write+0
;st7735.c,61 :: 		TFT_Write(0x01, DAT);
0x17D4	0xE0B1    	LDI        R27, 1
0x17D6	0x2E3B    	MOV        R3, R27
0x17D8	0xE0B1    	LDI        R27, 1
0x17DA	0x2E2B    	MOV        R2, R27
0x17DC	0xD8C0    	RCALL      _TFT_Write+0
;st7735.c,62 :: 		TFT_Write(0x2C, DAT);
0x17DE	0xE0B1    	LDI        R27, 1
0x17E0	0x2E3B    	MOV        R3, R27
0x17E2	0xE2BC    	LDI        R27, 44
0x17E4	0x2E2B    	MOV        R2, R27
0x17E6	0xD8BB    	RCALL      _TFT_Write+0
;st7735.c,63 :: 		TFT_Write(0x2D, DAT);
0x17E8	0xE0B1    	LDI        R27, 1
0x17EA	0x2E3B    	MOV        R3, R27
0x17EC	0xE2BD    	LDI        R27, 45
0x17EE	0x2E2B    	MOV        R2, R27
0x17F0	0xD8B6    	RCALL      _TFT_Write+0
;st7735.c,65 :: 		TFT_Write(ST7735_FRMCTR3, CMD);
0x17F2	0x2433    	CLR        R3
0x17F4	0xEBB3    	LDI        R27, 179
0x17F6	0x2E2B    	MOV        R2, R27
0x17F8	0xD8B2    	RCALL      _TFT_Write+0
;st7735.c,66 :: 		TFT_Write(0x01, DAT);
0x17FA	0xE0B1    	LDI        R27, 1
0x17FC	0x2E3B    	MOV        R3, R27
0x17FE	0xE0B1    	LDI        R27, 1
0x1800	0x2E2B    	MOV        R2, R27
0x1802	0xD8AD    	RCALL      _TFT_Write+0
;st7735.c,67 :: 		TFT_Write(0x2C, DAT);
0x1804	0xE0B1    	LDI        R27, 1
0x1806	0x2E3B    	MOV        R3, R27
0x1808	0xE2BC    	LDI        R27, 44
0x180A	0x2E2B    	MOV        R2, R27
0x180C	0xD8A8    	RCALL      _TFT_Write+0
;st7735.c,68 :: 		TFT_Write(0x2D, DAT);
0x180E	0xE0B1    	LDI        R27, 1
0x1810	0x2E3B    	MOV        R3, R27
0x1812	0xE2BD    	LDI        R27, 45
0x1814	0x2E2B    	MOV        R2, R27
0x1816	0xD8A3    	RCALL      _TFT_Write+0
;st7735.c,69 :: 		TFT_Write(0x01, DAT);
0x1818	0xE0B1    	LDI        R27, 1
0x181A	0x2E3B    	MOV        R3, R27
0x181C	0xE0B1    	LDI        R27, 1
0x181E	0x2E2B    	MOV        R2, R27
0x1820	0xD89E    	RCALL      _TFT_Write+0
;st7735.c,70 :: 		TFT_Write(0x2C, DAT);
0x1822	0xE0B1    	LDI        R27, 1
0x1824	0x2E3B    	MOV        R3, R27
0x1826	0xE2BC    	LDI        R27, 44
0x1828	0x2E2B    	MOV        R2, R27
0x182A	0xD899    	RCALL      _TFT_Write+0
;st7735.c,71 :: 		TFT_Write(0x2D, DAT);
0x182C	0xE0B1    	LDI        R27, 1
0x182E	0x2E3B    	MOV        R3, R27
0x1830	0xE2BD    	LDI        R27, 45
0x1832	0x2E2B    	MOV        R2, R27
0x1834	0xD894    	RCALL      _TFT_Write+0
;st7735.c,73 :: 		TFT_Write(ST7735_INVCTR, CMD);
0x1836	0x2433    	CLR        R3
0x1838	0xEBB4    	LDI        R27, 180
0x183A	0x2E2B    	MOV        R2, R27
0x183C	0xD890    	RCALL      _TFT_Write+0
;st7735.c,74 :: 		TFT_Write(0x07, DAT);
0x183E	0xE0B1    	LDI        R27, 1
0x1840	0x2E3B    	MOV        R3, R27
0x1842	0xE0B7    	LDI        R27, 7
0x1844	0x2E2B    	MOV        R2, R27
0x1846	0xD88B    	RCALL      _TFT_Write+0
;st7735.c,76 :: 		TFT_Write(ST7735_PWCTR1, CMD);
0x1848	0x2433    	CLR        R3
0x184A	0xECB0    	LDI        R27, 192
0x184C	0x2E2B    	MOV        R2, R27
0x184E	0xD887    	RCALL      _TFT_Write+0
;st7735.c,77 :: 		TFT_Write(0xA2, DAT);
0x1850	0xE0B1    	LDI        R27, 1
0x1852	0x2E3B    	MOV        R3, R27
0x1854	0xEAB2    	LDI        R27, 162
0x1856	0x2E2B    	MOV        R2, R27
0x1858	0xD882    	RCALL      _TFT_Write+0
;st7735.c,78 :: 		TFT_Write(0x02, DAT);
0x185A	0xE0B1    	LDI        R27, 1
0x185C	0x2E3B    	MOV        R3, R27
0x185E	0xE0B2    	LDI        R27, 2
0x1860	0x2E2B    	MOV        R2, R27
0x1862	0xD87D    	RCALL      _TFT_Write+0
;st7735.c,79 :: 		TFT_Write(0x84, DAT);
0x1864	0xE0B1    	LDI        R27, 1
0x1866	0x2E3B    	MOV        R3, R27
0x1868	0xE8B4    	LDI        R27, 132
0x186A	0x2E2B    	MOV        R2, R27
0x186C	0xD878    	RCALL      _TFT_Write+0
;st7735.c,81 :: 		TFT_Write(ST7735_PWCTR1, CMD);
0x186E	0x2433    	CLR        R3
0x1870	0xECB0    	LDI        R27, 192
0x1872	0x2E2B    	MOV        R2, R27
0x1874	0xD874    	RCALL      _TFT_Write+0
;st7735.c,82 :: 		TFT_Write(0xC5, DAT);
0x1876	0xE0B1    	LDI        R27, 1
0x1878	0x2E3B    	MOV        R3, R27
0x187A	0xECB5    	LDI        R27, 197
0x187C	0x2E2B    	MOV        R2, R27
0x187E	0xD86F    	RCALL      _TFT_Write+0
;st7735.c,84 :: 		TFT_Write(ST7735_PWCTR2, CMD);
0x1880	0x2433    	CLR        R3
0x1882	0xECB1    	LDI        R27, 193
0x1884	0x2E2B    	MOV        R2, R27
0x1886	0xD86B    	RCALL      _TFT_Write+0
;st7735.c,85 :: 		TFT_Write(0x0A, DAT);
0x1888	0xE0B1    	LDI        R27, 1
0x188A	0x2E3B    	MOV        R3, R27
0x188C	0xE0BA    	LDI        R27, 10
0x188E	0x2E2B    	MOV        R2, R27
0x1890	0xD866    	RCALL      _TFT_Write+0
;st7735.c,86 :: 		TFT_Write(0x00, DAT);
0x1892	0xE0B1    	LDI        R27, 1
0x1894	0x2E3B    	MOV        R3, R27
0x1896	0x2422    	CLR        R2
0x1898	0xD862    	RCALL      _TFT_Write+0
;st7735.c,88 :: 		TFT_Write(ST7735_PWCTR3, CMD);
0x189A	0x2433    	CLR        R3
0x189C	0xECB2    	LDI        R27, 194
0x189E	0x2E2B    	MOV        R2, R27
0x18A0	0xD85E    	RCALL      _TFT_Write+0
;st7735.c,89 :: 		TFT_Write(0x8A, DAT);
0x18A2	0xE0B1    	LDI        R27, 1
0x18A4	0x2E3B    	MOV        R3, R27
0x18A6	0xE8BA    	LDI        R27, 138
0x18A8	0x2E2B    	MOV        R2, R27
0x18AA	0xD859    	RCALL      _TFT_Write+0
;st7735.c,90 :: 		TFT_Write(0x2A, DAT);
0x18AC	0xE0B1    	LDI        R27, 1
0x18AE	0x2E3B    	MOV        R3, R27
0x18B0	0xE2BA    	LDI        R27, 42
0x18B2	0x2E2B    	MOV        R2, R27
0x18B4	0xD854    	RCALL      _TFT_Write+0
;st7735.c,92 :: 		TFT_Write(ST7735_PWCTR4, CMD);
0x18B6	0x2433    	CLR        R3
0x18B8	0xECB3    	LDI        R27, 195
0x18BA	0x2E2B    	MOV        R2, R27
0x18BC	0xD850    	RCALL      _TFT_Write+0
;st7735.c,93 :: 		TFT_Write(0x8A, DAT);
0x18BE	0xE0B1    	LDI        R27, 1
0x18C0	0x2E3B    	MOV        R3, R27
0x18C2	0xE8BA    	LDI        R27, 138
0x18C4	0x2E2B    	MOV        R2, R27
0x18C6	0xD84B    	RCALL      _TFT_Write+0
;st7735.c,94 :: 		TFT_Write(0xEE, DAT);
0x18C8	0xE0B1    	LDI        R27, 1
0x18CA	0x2E3B    	MOV        R3, R27
0x18CC	0xEEBE    	LDI        R27, 238
0x18CE	0x2E2B    	MOV        R2, R27
0x18D0	0xD846    	RCALL      _TFT_Write+0
;st7735.c,96 :: 		TFT_Write(ST7735_PWCTR5, CMD);
0x18D2	0x2433    	CLR        R3
0x18D4	0xECB4    	LDI        R27, 196
0x18D6	0x2E2B    	MOV        R2, R27
0x18D8	0xD842    	RCALL      _TFT_Write+0
;st7735.c,97 :: 		TFT_Write(0x0E, DAT);
0x18DA	0xE0B1    	LDI        R27, 1
0x18DC	0x2E3B    	MOV        R3, R27
0x18DE	0xE0BE    	LDI        R27, 14
0x18E0	0x2E2B    	MOV        R2, R27
0x18E2	0xD83D    	RCALL      _TFT_Write+0
;st7735.c,99 :: 		TFT_Write(ST7735_VMCTR1, CMD);
0x18E4	0x2433    	CLR        R3
0x18E6	0xECB5    	LDI        R27, 197
0x18E8	0x2E2B    	MOV        R2, R27
0x18EA	0xD839    	RCALL      _TFT_Write+0
;st7735.c,100 :: 		TFT_Write(0x00, DAT);
0x18EC	0xE0B1    	LDI        R27, 1
0x18EE	0x2E3B    	MOV        R3, R27
0x18F0	0x2422    	CLR        R2
0x18F2	0xD835    	RCALL      _TFT_Write+0
;st7735.c,102 :: 		TFT_Write(ST7735_COLMOD, CMD);
0x18F4	0x2433    	CLR        R3
0x18F6	0xE3BA    	LDI        R27, 58
0x18F8	0x2E2B    	MOV        R2, R27
0x18FA	0xD831    	RCALL      _TFT_Write+0
;st7735.c,103 :: 		TFT_Write(0x05, DAT);
0x18FC	0xE0B1    	LDI        R27, 1
0x18FE	0x2E3B    	MOV        R3, R27
0x1900	0xE0B5    	LDI        R27, 5
0x1902	0x2E2B    	MOV        R2, R27
0x1904	0xD82C    	RCALL      _TFT_Write+0
;st7735.c,105 :: 		TFT_Write(ST7735_MADCTL, CMD);
0x1906	0x2433    	CLR        R3
0x1908	0xE3B6    	LDI        R27, 54
0x190A	0x2E2B    	MOV        R2, R27
0x190C	0xD828    	RCALL      _TFT_Write+0
;st7735.c,106 :: 		TFT_Write(0xC8, DAT);
0x190E	0xE0B1    	LDI        R27, 1
0x1910	0x2E3B    	MOV        R3, R27
0x1912	0xECB8    	LDI        R27, 200
0x1914	0x2E2B    	MOV        R2, R27
0x1916	0xD823    	RCALL      _TFT_Write+0
;st7735.c,108 :: 		TFT_set_display_window(0x00, 0x00, 0x7F, 0x9F);
0x1918	0xE9BF    	LDI        R27, 159
0x191A	0x2E5B    	MOV        R5, R27
0x191C	0xE7BF    	LDI        R27, 127
0x191E	0x2E4B    	MOV        R4, R27
0x1920	0x2433    	CLR        R3
0x1922	0x2422    	CLR        R2
0x1924	0x047B940E  	CALL       _TFT_set_display_window+0
;st7735.c,110 :: 		TFT_Write(ST7735_GMCTRP1, CMD);
0x1928	0x2433    	CLR        R3
0x192A	0xEEB0    	LDI        R27, 224
0x192C	0x2E2B    	MOV        R2, R27
0x192E	0xD817    	RCALL      _TFT_Write+0
;st7735.c,111 :: 		TFT_Write(0x02, DAT);
0x1930	0xE0B1    	LDI        R27, 1
0x1932	0x2E3B    	MOV        R3, R27
0x1934	0xE0B2    	LDI        R27, 2
0x1936	0x2E2B    	MOV        R2, R27
0x1938	0xD812    	RCALL      _TFT_Write+0
;st7735.c,112 :: 		TFT_Write(0x1C, DAT);
0x193A	0xE0B1    	LDI        R27, 1
0x193C	0x2E3B    	MOV        R3, R27
0x193E	0xE1BC    	LDI        R27, 28
0x1940	0x2E2B    	MOV        R2, R27
0x1942	0xD80D    	RCALL      _TFT_Write+0
;st7735.c,113 :: 		TFT_Write(0x07, DAT);
0x1944	0xE0B1    	LDI        R27, 1
0x1946	0x2E3B    	MOV        R3, R27
0x1948	0xE0B7    	LDI        R27, 7
0x194A	0x2E2B    	MOV        R2, R27
0x194C	0xD808    	RCALL      _TFT_Write+0
;st7735.c,114 :: 		TFT_Write(0x12, DAT);
0x194E	0xE0B1    	LDI        R27, 1
0x1950	0x2E3B    	MOV        R3, R27
0x1952	0xE1B2    	LDI        R27, 18
0x1954	0x2E2B    	MOV        R2, R27
0x1956	0xD803    	RCALL      _TFT_Write+0
;st7735.c,115 :: 		TFT_Write(0x37, DAT);
0x1958	0xE0B1    	LDI        R27, 1
0x195A	0x2E3B    	MOV        R3, R27
0x195C	0xE3B7    	LDI        R27, 55
0x195E	0x2E2B    	MOV        R2, R27
0x1960	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,116 :: 		TFT_Write(0x32, DAT);
0x1964	0xE0B1    	LDI        R27, 1
0x1966	0x2E3B    	MOV        R3, R27
0x1968	0xE3B2    	LDI        R27, 50
0x196A	0x2E2B    	MOV        R2, R27
0x196C	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,117 :: 		TFT_Write(0x29, DAT);
0x1970	0xE0B1    	LDI        R27, 1
0x1972	0x2E3B    	MOV        R3, R27
0x1974	0xE2B9    	LDI        R27, 41
0x1976	0x2E2B    	MOV        R2, R27
0x1978	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,118 :: 		TFT_Write(0x2D, DAT);
0x197C	0xE0B1    	LDI        R27, 1
0x197E	0x2E3B    	MOV        R3, R27
0x1980	0xE2BD    	LDI        R27, 45
0x1982	0x2E2B    	MOV        R2, R27
0x1984	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,119 :: 		TFT_Write(0x29, DAT);
0x1988	0xE0B1    	LDI        R27, 1
0x198A	0x2E3B    	MOV        R3, R27
0x198C	0xE2B9    	LDI        R27, 41
0x198E	0x2E2B    	MOV        R2, R27
0x1990	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,120 :: 		TFT_Write(0x25, DAT);
0x1994	0xE0B1    	LDI        R27, 1
0x1996	0x2E3B    	MOV        R3, R27
0x1998	0xE2B5    	LDI        R27, 37
0x199A	0x2E2B    	MOV        R2, R27
0x199C	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,121 :: 		TFT_Write(0x2B, DAT);
0x19A0	0xE0B1    	LDI        R27, 1
0x19A2	0x2E3B    	MOV        R3, R27
0x19A4	0xE2BB    	LDI        R27, 43
0x19A6	0x2E2B    	MOV        R2, R27
0x19A8	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,122 :: 		TFT_Write(0x39, DAT);
0x19AC	0xE0B1    	LDI        R27, 1
0x19AE	0x2E3B    	MOV        R3, R27
0x19B0	0xE3B9    	LDI        R27, 57
0x19B2	0x2E2B    	MOV        R2, R27
0x19B4	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,123 :: 		TFT_Write(0x00, DAT);
0x19B8	0xE0B1    	LDI        R27, 1
0x19BA	0x2E3B    	MOV        R3, R27
0x19BC	0x2422    	CLR        R2
0x19BE	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,124 :: 		TFT_Write(0x01, DAT);
0x19C2	0xE0B1    	LDI        R27, 1
0x19C4	0x2E3B    	MOV        R3, R27
0x19C6	0xE0B1    	LDI        R27, 1
0x19C8	0x2E2B    	MOV        R2, R27
0x19CA	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,125 :: 		TFT_Write(0x03, DAT);
0x19CE	0xE0B1    	LDI        R27, 1
0x19D0	0x2E3B    	MOV        R3, R27
0x19D2	0xE0B3    	LDI        R27, 3
0x19D4	0x2E2B    	MOV        R2, R27
0x19D6	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,126 :: 		TFT_Write(0x10, DAT);
0x19DA	0xE0B1    	LDI        R27, 1
0x19DC	0x2E3B    	MOV        R3, R27
0x19DE	0xE1B0    	LDI        R27, 16
0x19E0	0x2E2B    	MOV        R2, R27
0x19E2	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,128 :: 		TFT_Write(ST7735_GMCTRN1, CMD);
0x19E6	0x2433    	CLR        R3
0x19E8	0xEEB1    	LDI        R27, 225
0x19EA	0x2E2B    	MOV        R2, R27
0x19EC	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,129 :: 		TFT_Write(0x03, DAT);
0x19F0	0xE0B1    	LDI        R27, 1
0x19F2	0x2E3B    	MOV        R3, R27
0x19F4	0xE0B3    	LDI        R27, 3
0x19F6	0x2E2B    	MOV        R2, R27
0x19F8	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,130 :: 		TFT_Write(0x1D, DAT);
0x19FC	0xE0B1    	LDI        R27, 1
0x19FE	0x2E3B    	MOV        R3, R27
0x1A00	0xE1BD    	LDI        R27, 29
0x1A02	0x2E2B    	MOV        R2, R27
0x1A04	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,131 :: 		TFT_Write(0x07, DAT);
0x1A08	0xE0B1    	LDI        R27, 1
0x1A0A	0x2E3B    	MOV        R3, R27
0x1A0C	0xE0B7    	LDI        R27, 7
0x1A0E	0x2E2B    	MOV        R2, R27
0x1A10	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,132 :: 		TFT_Write(0x06, DAT);
0x1A14	0xE0B1    	LDI        R27, 1
0x1A16	0x2E3B    	MOV        R3, R27
0x1A18	0xE0B6    	LDI        R27, 6
0x1A1A	0x2E2B    	MOV        R2, R27
0x1A1C	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,133 :: 		TFT_Write(0x2E, DAT);
0x1A20	0xE0B1    	LDI        R27, 1
0x1A22	0x2E3B    	MOV        R3, R27
0x1A24	0xE2BE    	LDI        R27, 46
0x1A26	0x2E2B    	MOV        R2, R27
0x1A28	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,134 :: 		TFT_Write(0x2C, DAT);
0x1A2C	0xE0B1    	LDI        R27, 1
0x1A2E	0x2E3B    	MOV        R3, R27
0x1A30	0xE2BC    	LDI        R27, 44
0x1A32	0x2E2B    	MOV        R2, R27
0x1A34	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,135 :: 		TFT_Write(0x29, DAT);
0x1A38	0xE0B1    	LDI        R27, 1
0x1A3A	0x2E3B    	MOV        R3, R27
0x1A3C	0xE2B9    	LDI        R27, 41
0x1A3E	0x2E2B    	MOV        R2, R27
0x1A40	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,136 :: 		TFT_Write(0x2D, DAT);
0x1A44	0xE0B1    	LDI        R27, 1
0x1A46	0x2E3B    	MOV        R3, R27
0x1A48	0xE2BD    	LDI        R27, 45
0x1A4A	0x2E2B    	MOV        R2, R27
0x1A4C	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,137 :: 		TFT_Write(0x2E, DAT);
0x1A50	0xE0B1    	LDI        R27, 1
0x1A52	0x2E3B    	MOV        R3, R27
0x1A54	0xE2BE    	LDI        R27, 46
0x1A56	0x2E2B    	MOV        R2, R27
0x1A58	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,138 :: 		TFT_Write(0x2E, DAT);
0x1A5C	0xE0B1    	LDI        R27, 1
0x1A5E	0x2E3B    	MOV        R3, R27
0x1A60	0xE2BE    	LDI        R27, 46
0x1A62	0x2E2B    	MOV        R2, R27
0x1A64	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,139 :: 		TFT_Write(0x37, DAT);
0x1A68	0xE0B1    	LDI        R27, 1
0x1A6A	0x2E3B    	MOV        R3, R27
0x1A6C	0xE3B7    	LDI        R27, 55
0x1A6E	0x2E2B    	MOV        R2, R27
0x1A70	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,140 :: 		TFT_Write(0x3F, DAT);
0x1A74	0xE0B1    	LDI        R27, 1
0x1A76	0x2E3B    	MOV        R3, R27
0x1A78	0xE3BF    	LDI        R27, 63
0x1A7A	0x2E2B    	MOV        R2, R27
0x1A7C	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,141 :: 		TFT_Write(0x00, DAT);
0x1A80	0xE0B1    	LDI        R27, 1
0x1A82	0x2E3B    	MOV        R3, R27
0x1A84	0x2422    	CLR        R2
0x1A86	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,142 :: 		TFT_Write(0x00, DAT);
0x1A8A	0xE0B1    	LDI        R27, 1
0x1A8C	0x2E3B    	MOV        R3, R27
0x1A8E	0x2422    	CLR        R2
0x1A90	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,143 :: 		TFT_Write(0x02, DAT);
0x1A94	0xE0B1    	LDI        R27, 1
0x1A96	0x2E3B    	MOV        R3, R27
0x1A98	0xE0B2    	LDI        R27, 2
0x1A9A	0x2E2B    	MOV        R2, R27
0x1A9C	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,144 :: 		TFT_Write(0x10, DAT);
0x1AA0	0xE0B1    	LDI        R27, 1
0x1AA2	0x2E3B    	MOV        R3, R27
0x1AA4	0xE1B0    	LDI        R27, 16
0x1AA6	0x2E2B    	MOV        R2, R27
0x1AA8	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,146 :: 		TFT_Write(ST7735_NORON, CMD);
0x1AAC	0x2433    	CLR        R3
0x1AAE	0xE1B3    	LDI        R27, 19
0x1AB0	0x2E2B    	MOV        R2, R27
0x1AB2	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,147 :: 		delay_ms(10);
0x1AB6	0xE022    	LDI        R18, 2
0x1AB8	0xEA10    	LDI        R17, 160
0x1ABA	0xE903    	LDI        R16, 147
L_ST7735_init12:
0x1ABC	0x950A    	DEC        R16
0x1ABE	0xF7F1    	BRNE       L_ST7735_init12
0x1AC0	0x951A    	DEC        R17
0x1AC2	0xF7E1    	BRNE       L_ST7735_init12
0x1AC4	0x952A    	DEC        R18
0x1AC6	0xF7D1    	BRNE       L_ST7735_init12
0x1AC8	0x0000    	NOP
;st7735.c,149 :: 		TFT_Write(ST7735_DISPON, CMD);
0x1ACA	0x2433    	CLR        R3
0x1ACC	0xE2B9    	LDI        R27, 41
0x1ACE	0x2E2B    	MOV        R2, R27
0x1AD0	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,150 :: 		delay_ms(100);
0x1AD4	0xE121    	LDI        R18, 17
0x1AD6	0xE31C    	LDI        R17, 60
0x1AD8	0xEC0C    	LDI        R16, 204
L_ST7735_init14:
0x1ADA	0x950A    	DEC        R16
0x1ADC	0xF7F1    	BRNE       L_ST7735_init14
0x1ADE	0x951A    	DEC        R17
0x1AE0	0xF7E1    	BRNE       L_ST7735_init14
0x1AE2	0x952A    	DEC        R18
0x1AE4	0xF7D1    	BRNE       L_ST7735_init14
;st7735.c,152 :: 		TFT_Write(ST7735_RAMWR, CMD);
0x1AE6	0x2433    	CLR        R3
0x1AE8	0xE2BC    	LDI        R27, 44
0x1AEA	0x2E2B    	MOV        R2, R27
0x1AEC	0x04AF940E  	CALL       _TFT_Write+0
;st7735.c,153 :: 		delay_ms(100);
0x1AF0	0xE121    	LDI        R18, 17
0x1AF2	0xE31C    	LDI        R17, 60
0x1AF4	0xEC0C    	LDI        R16, 204
L_ST7735_init16:
0x1AF6	0x950A    	DEC        R16
0x1AF8	0xF7F1    	BRNE       L_ST7735_init16
0x1AFA	0x951A    	DEC        R17
0x1AFC	0xF7E1    	BRNE       L_ST7735_init16
0x1AFE	0x952A    	DEC        R18
0x1B00	0xF7D1    	BRNE       L_ST7735_init16
;st7735.c,154 :: 		}
L_end_ST7735_init:
0x1B02	0x905F    	POP        R5
0x1B04	0x904F    	POP        R4
0x1B06	0x903F    	POP        R3
0x1B08	0x902F    	POP        R2
0x1B0A	0x9508    	RET
; end of _ST7735_init
_setup_TFT_peripherals:
;st7735.c,14 :: 		void setup_TFT_peripherals()
;st7735.c,16 :: 		PORTC_DIR = 0xBE;
0x0ADC	0x922F    	PUSH       R2
0x0ADE	0x923F    	PUSH       R3
0x0AE0	0x924F    	PUSH       R4
0x0AE2	0x925F    	PUSH       R5
0x0AE4	0xEBBE    	LDI        R27, 190
0x0AE6	0x064093B0  	STS        PORTC_DIR+0, R27
;st7735.c,17 :: 		VPORT2_DIR = 0xBE;
0x0AEA	0xEBBE    	LDI        R27, 190
0x0AEC	0xBBB8    	OUT        VPORT2_DIR+0, R27
;st7735.c,18 :: 		delay_ms(100);
0x0AEE	0xE121    	LDI        R18, 17
0x0AF0	0xE31C    	LDI        R17, 60
0x0AF2	0xEC0C    	LDI        R16, 204
L_setup_TFT_peripherals0:
0x0AF4	0x950A    	DEC        R16
0x0AF6	0xF7F1    	BRNE       L_setup_TFT_peripherals0
0x0AF8	0x951A    	DEC        R17
0x0AFA	0xF7E1    	BRNE       L_setup_TFT_peripherals0
0x0AFC	0x952A    	DEC        R18
0x0AFE	0xF7D1    	BRNE       L_setup_TFT_peripherals0
;st7735.c,20 :: 		SPIC_Init_Advanced(_SPI_MASTER, _SPI_FCY_DIV2, _SPI_CLK_HI_LEADING);
0x0B00	0xE0B8    	LDI        R27, 8
0x0B02	0x2E4B    	MOV        R4, R27
0x0B04	0xE0B4    	LDI        R27, 4
0x0B06	0x2E3B    	MOV        R3, R27
0x0B08	0xE1B0    	LDI        R27, 16
0x0B0A	0x2E2B    	MOV        R2, R27
0x0B0C	0xDCE0    	RCALL      _SPIC_Init_Advanced+0
;st7735.c,21 :: 		SPI_Set_Active(&SPIC_Read, &SPIC_Write);
0x0B0E	0xEEB9    	LDI        R27, lo_addr(_SPIC_Write+0)
0x0B10	0x2E4B    	MOV        R4, R27
0x0B12	0xE0B1    	LDI        R27, hi_addr(_SPIC_Write+0)
0x0B14	0x2E5B    	MOV        R5, R27
0x0B16	0xEFBF    	LDI        R27, lo_addr(_SPIC_Read+0)
0x0B18	0x2E2B    	MOV        R2, R27
0x0B1A	0xEFBF    	LDI        R27, hi_addr(_SPIC_Read+0)
0x0B1C	0x2E3B    	MOV        R3, R27
0x0B1E	0xDCCE    	RCALL      _SPI_Set_Active+0
;st7735.c,22 :: 		delay_ms(10);
0x0B20	0xE022    	LDI        R18, 2
0x0B22	0xEA10    	LDI        R17, 160
0x0B24	0xE903    	LDI        R16, 147
L_setup_TFT_peripherals2:
0x0B26	0x950A    	DEC        R16
0x0B28	0xF7F1    	BRNE       L_setup_TFT_peripherals2
0x0B2A	0x951A    	DEC        R17
0x0B2C	0xF7E1    	BRNE       L_setup_TFT_peripherals2
0x0B2E	0x952A    	DEC        R18
0x0B30	0xF7D1    	BRNE       L_setup_TFT_peripherals2
0x0B32	0x0000    	NOP
;st7735.c,23 :: 		}
L_end_setup_TFT_peripherals:
0x0B34	0x905F    	POP        R5
0x0B36	0x904F    	POP        R4
0x0B38	0x903F    	POP        R3
0x0B3A	0x902F    	POP        R2
0x0B3C	0x9508    	RET
; end of _setup_TFT_peripherals
_SPIC_Init_Advanced:
;__Lib_SPI_c567_d567.c,27 :: 		
;__Lib_SPI_c567_d567.c,28 :: 		
0x04CE	0xEFBF    	LDI        R27, lo_addr(_SPIC_Read+0)
0x04D0	0x201E93B0  	STS        _SPI_Rd_Ptr+0, R27
0x04D4	0xEFBF    	LDI        R27, hi_addr(_SPIC_Read+0)
0x04D6	0x201F93B0  	STS        _SPI_Rd_Ptr+1, R27
;__Lib_SPI_c567_d567.c,29 :: 		
0x04DA	0xEEB9    	LDI        R27, lo_addr(_SPIC_Write+0)
0x04DC	0x201C93B0  	STS        _SPI_Wr_Ptr+0, R27
0x04E0	0xE0B1    	LDI        R27, hi_addr(_SPIC_Write+0)
0x04E2	0x201D93B0  	STS        _SPI_Wr_Ptr+1, R27
;__Lib_SPI_c567_d567.c,31 :: 		
0x04E6	0xEBB0    	LDI        R27, 176
0x04E8	0x064193B0  	STS        PORTC_DIRSET+0, R27
;__Lib_SPI_c567_d567.c,34 :: 		
0x04EC	0xE4B0    	LDI        R27, 64
0x04EE	0x064293B0  	STS        PORTC_DIRCLR+0, R27
;__Lib_SPI_c567_d567.c,36 :: 		
0x04F2	0xE0B0    	LDI        R27, 0
0x04F4	0x08C193B0  	STS        SPIC_INTCTRL+0, R27
;__Lib_SPI_c567_d567.c,38 :: 		
0x04F8	0x2D03    	MOV        R16, R3
0x04FA	0x7003    	ANDI       R16, 3
0x04FC	0x2904    	OR         R16, R4
0x04FE	0x2902    	OR         R16, R2
0x0500	0x6400    	ORI        R16, 64
0x0502	0x08C09300  	STS        SPIC_CTRL+0, R16
;__Lib_SPI_c567_d567.c,39 :: 		
0x0506	0xFA32    	BST        R3, 2
0x0508	0x08C091B0  	LDS        R27, SPIC_CTRL+0
0x050C	0xF9B7    	BLD        R27, 7
0x050E	0x08C093B0  	STS        SPIC_CTRL+0, R27
;__Lib_SPI_c567_d567.c,40 :: 		
L_end_SPIC_Init_Advanced:
0x0512	0x9508    	RET
; end of _SPIC_Init_Advanced
_SPI_Set_Active:
;__Lib_SPI_c567_d567.c,93 :: 		
;__Lib_SPI_c567_d567.c,94 :: 		
0x04BC	0x201E9220  	STS        _SPI_Rd_Ptr+0, R2
0x04C0	0x201F9230  	STS        _SPI_Rd_Ptr+1, R3
;__Lib_SPI_c567_d567.c,95 :: 		
0x04C4	0x201C9240  	STS        _SPI_Wr_Ptr+0, R4
0x04C8	0x201D9250  	STS        _SPI_Wr_Ptr+1, R5
;__Lib_SPI_c567_d567.c,96 :: 		
L_end_SPI_Set_Active:
0x04CC	0x9508    	RET
; end of _SPI_Set_Active
_ST7735_Reset:
;st7735.c,35 :: 		void ST7735_Reset()
;st7735.c,37 :: 		RST_pin = LOW;
0x09B8	0x064491B0  	LDS        R27, PORTC_OUT+0
0x09BC	0x7FBB    	CBR        R27, 4
0x09BE	0x064493B0  	STS        PORTC_OUT+0, R27
;st7735.c,38 :: 		delay_ms(2);
0x09C2	0xE514    	LDI        R17, 84
0x09C4	0xE10D    	LDI        R16, 29
L_ST7735_Reset4:
0x09C6	0x950A    	DEC        R16
0x09C8	0xF7F1    	BRNE       L_ST7735_Reset4
0x09CA	0x951A    	DEC        R17
0x09CC	0xF7E1    	BRNE       L_ST7735_Reset4
;st7735.c,39 :: 		RST_pin = HIGH;
0x09CE	0x064491B0  	LDS        R27, PORTC_OUT+0
0x09D2	0x60B4    	SBR        R27, 4
0x09D4	0x064493B0  	STS        PORTC_OUT+0, R27
;st7735.c,40 :: 		delay_ms(2);
0x09D8	0xE514    	LDI        R17, 84
0x09DA	0xE10D    	LDI        R16, 29
L_ST7735_Reset6:
0x09DC	0x950A    	DEC        R16
0x09DE	0xF7F1    	BRNE       L_ST7735_Reset6
0x09E0	0x951A    	DEC        R17
0x09E2	0xF7E1    	BRNE       L_ST7735_Reset6
;st7735.c,41 :: 		}
L_end_ST7735_Reset:
0x09E4	0x9508    	RET
; end of _ST7735_Reset
_TFT_Write:
;st7735.c,26 :: 		void TFT_Write(unsigned char value, unsigned char mode)
;st7735.c,28 :: 		CS_pin = LOW;
0x095E	0x064491B0  	LDS        R27, PORTC_OUT+0
0x0962	0x7EBF    	CBR        R27, 16
0x0964	0x064493B0  	STS        PORTC_OUT+0, R27
;st7735.c,29 :: 		RS_pin = mode;
0x0968	0xFA30    	BST        R3, 0
0x096A	0x064491B0  	LDS        R27, PORTC_OUT+0
0x096E	0xF9B3    	BLD        R27, 3
0x0970	0x064493B0  	STS        PORTC_OUT+0, R27
;st7735.c,30 :: 		SPIC_Write(value);
0x0974	0xDD2E    	RCALL      _SPIC_Write+0
;st7735.c,31 :: 		CS_pin = HIGH;
0x0976	0x064491B0  	LDS        R27, PORTC_OUT+0
0x097A	0x61B0    	SBR        R27, 16
0x097C	0x064493B0  	STS        PORTC_OUT+0, R27
;st7735.c,32 :: 		}
L_end_TFT_Write:
0x0980	0x9508    	RET
; end of _TFT_Write
_SPIC_Write:
;__Lib_SPI_c567_d567.c,46 :: 		
;__Lib_SPI_c567_d567.c,47 :: 		
0x03D2	0x08C39220  	STS        SPIC_DATA+0, R2
;__Lib_SPI_c567_d567.c,48 :: 		
L_SPIC_Write0:
0x03D6	0x08C291B0  	LDS        R27, SPIC_STATUS+0
0x03DA	0xFDB7    	SBRC       R27, 7
0x03DC	0xC001    	RJMP       L_SPIC_Write1
;__Lib_SPI_c567_d567.c,49 :: 		
0x03DE	0xCFFB    	RJMP       L_SPIC_Write0
L_SPIC_Write1:
;__Lib_SPI_c567_d567.c,50 :: 		
L_end_SPIC_Write:
0x03E0	0x9508    	RET
; end of _SPIC_Write
_TFT_set_display_window:
;st7735.c,164 :: 		void TFT_set_display_window(unsigned char xs, unsigned char ys, unsigned char xe, unsigned char ye)
;st7735.c,166 :: 		TFT_Write(ST7735_CASET, CMD);
0x08F6	0x922F    	PUSH       R2
0x08F8	0x923F    	PUSH       R3
0x08FA	0x923F    	PUSH       R3
0x08FC	0x922F    	PUSH       R2
0x08FE	0x2433    	CLR        R3
0x0900	0xE2BA    	LDI        R27, 42
0x0902	0x2E2B    	MOV        R2, R27
0x0904	0xD02C    	RCALL      _TFT_Write+0
;st7735.c,167 :: 		TFT_Write(0x00, DAT);
0x0906	0xE0B1    	LDI        R27, 1
0x0908	0x2E3B    	MOV        R3, R27
0x090A	0x2422    	CLR        R2
0x090C	0xD028    	RCALL      _TFT_Write+0
0x090E	0x902F    	POP        R2
;st7735.c,168 :: 		TFT_Write(xs, DAT);
0x0910	0xE0B1    	LDI        R27, 1
0x0912	0x2E3B    	MOV        R3, R27
0x0914	0xD024    	RCALL      _TFT_Write+0
;st7735.c,169 :: 		TFT_Write(0x00, DAT);
0x0916	0xE0B1    	LDI        R27, 1
0x0918	0x2E3B    	MOV        R3, R27
0x091A	0x2422    	CLR        R2
0x091C	0xD020    	RCALL      _TFT_Write+0
;st7735.c,170 :: 		TFT_Write(xe, DAT);
0x091E	0xE0B1    	LDI        R27, 1
0x0920	0x2E3B    	MOV        R3, R27
0x0922	0x2C24    	MOV        R2, R4
0x0924	0xD01C    	RCALL      _TFT_Write+0
;st7735.c,172 :: 		TFT_Write(ST7735_RASET, CMD);
0x0926	0x2433    	CLR        R3
0x0928	0xE2BB    	LDI        R27, 43
0x092A	0x2E2B    	MOV        R2, R27
0x092C	0xD018    	RCALL      _TFT_Write+0
;st7735.c,173 :: 		TFT_Write(0x00, DAT);
0x092E	0xE0B1    	LDI        R27, 1
0x0930	0x2E3B    	MOV        R3, R27
0x0932	0x2422    	CLR        R2
0x0934	0xD014    	RCALL      _TFT_Write+0
0x0936	0x903F    	POP        R3
;st7735.c,174 :: 		TFT_Write(ys, DAT);
0x0938	0x2C23    	MOV        R2, R3
0x093A	0xE0B1    	LDI        R27, 1
0x093C	0x2E3B    	MOV        R3, R27
0x093E	0xD00F    	RCALL      _TFT_Write+0
;st7735.c,175 :: 		TFT_Write(0x00, DAT);
0x0940	0xE0B1    	LDI        R27, 1
0x0942	0x2E3B    	MOV        R3, R27
0x0944	0x2422    	CLR        R2
0x0946	0xD00B    	RCALL      _TFT_Write+0
;st7735.c,176 :: 		TFT_Write(ye, DAT);
0x0948	0xE0B1    	LDI        R27, 1
0x094A	0x2E3B    	MOV        R3, R27
0x094C	0x2C25    	MOV        R2, R5
0x094E	0xD007    	RCALL      _TFT_Write+0
;st7735.c,178 :: 		TFT_Write(ST7735_RAMWR, CMD);
0x0950	0x2433    	CLR        R3
0x0952	0xE2BC    	LDI        R27, 44
0x0954	0x2E2B    	MOV        R2, R27
0x0956	0xD003    	RCALL      _TFT_Write+0
;st7735.c,179 :: 		}
L_end_TFT_set_display_window:
0x0958	0x903F    	POP        R3
0x095A	0x902F    	POP        R2
0x095C	0x9508    	RET
; end of _TFT_set_display_window
_Set_Rotation:
;st7735.c,207 :: 		void Set_Rotation(unsigned char m)
;st7735.c,209 :: 		unsigned char rotation = 0x00;
0x16EA	0x922F    	PUSH       R2
0x16EC	0x923F    	PUSH       R3
;st7735.c,211 :: 		TFT_Write(ST7735_MADCTL, CMD);
0x16EE	0x922F    	PUSH       R2
0x16F0	0x2433    	CLR        R3
0x16F2	0xE3B6    	LDI        R27, 54
0x16F4	0x2E2B    	MOV        R2, R27
0x16F6	0xD933    	RCALL      _TFT_Write+0
0x16F8	0x902F    	POP        R2
;st7735.c,212 :: 		rotation = (m % 4);
0x16FA	0x2D02    	MOV        R16, R2
0x16FC	0x7003    	ANDI       R16, 3
; rotation start address is: 16 (R16)
;st7735.c,214 :: 		switch(rotation)
0x16FE	0xC018    	RJMP       L_Set_Rotation20
;st7735.c,216 :: 		case 0:
L_Set_Rotation22:
;st7735.c,218 :: 		TFT_Write((ST7735_MADCTL_MX | ST7735_MADCTL_MY | ST7735_MADCTL_RGB), DAT);
0x1700	0xE0B1    	LDI        R27, 1
0x1702	0x2E3B    	MOV        R3, R27
0x1704	0xECB8    	LDI        R27, 200
0x1706	0x2E2B    	MOV        R2, R27
0x1708	0xD92A    	RCALL      _TFT_Write+0
;st7735.c,219 :: 		break;
0x170A	0xC01A    	RJMP       L_Set_Rotation21
;st7735.c,221 :: 		case 1:
L_Set_Rotation23:
;st7735.c,223 :: 		TFT_Write((ST7735_MADCTL_MY | ST7735_MADCTL_MV | ST7735_MADCTL_RGB), DAT);
0x170C	0xE0B1    	LDI        R27, 1
0x170E	0x2E3B    	MOV        R3, R27
0x1710	0xEAB8    	LDI        R27, 168
0x1712	0x2E2B    	MOV        R2, R27
0x1714	0xD924    	RCALL      _TFT_Write+0
;st7735.c,224 :: 		break;
0x1716	0xC014    	RJMP       L_Set_Rotation21
;st7735.c,226 :: 		case 2:
L_Set_Rotation24:
;st7735.c,228 :: 		TFT_Write((ST7735_MADCTL_RGB), DAT);
0x1718	0xE0B1    	LDI        R27, 1
0x171A	0x2E3B    	MOV        R3, R27
0x171C	0xE0B8    	LDI        R27, 8
0x171E	0x2E2B    	MOV        R2, R27
0x1720	0xD91E    	RCALL      _TFT_Write+0
;st7735.c,229 :: 		break;
0x1722	0xC00E    	RJMP       L_Set_Rotation21
;st7735.c,231 :: 		case 3:
L_Set_Rotation25:
;st7735.c,233 :: 		TFT_Write((ST7735_MADCTL_MX | ST7735_MADCTL_MV | ST7735_MADCTL_RGB), DAT);
0x1724	0xE0B1    	LDI        R27, 1
0x1726	0x2E3B    	MOV        R3, R27
0x1728	0xE6B8    	LDI        R27, 104
0x172A	0x2E2B    	MOV        R2, R27
0x172C	0xD918    	RCALL      _TFT_Write+0
;st7735.c,234 :: 		break;
0x172E	0xC008    	RJMP       L_Set_Rotation21
;st7735.c,236 :: 		}
L_Set_Rotation20:
0x1730	0x3000    	CPI        R16, 0
0x1732	0xF331    	BREQ       L_Set_Rotation22
L__Set_Rotation293:
0x1734	0x3001    	CPI        R16, 1
0x1736	0xF351    	BREQ       L_Set_Rotation23
L__Set_Rotation294:
0x1738	0x3002    	CPI        R16, 2
0x173A	0xF371    	BREQ       L_Set_Rotation24
L__Set_Rotation295:
0x173C	0x3003    	CPI        R16, 3
0x173E	0xF391    	BREQ       L_Set_Rotation25
L__Set_Rotation296:
L_Set_Rotation21:
;st7735.c,238 :: 		if((rotation == 0) || (rotation == 2))
0x1740	0x3000    	CPI        R16, 0
0x1742	0xF019    	BREQ       L__Set_Rotation238
L__Set_Rotation297:
0x1744	0x3002    	CPI        R16, 2
0x1746	0xF009    	BREQ       L__Set_Rotation237
L__Set_Rotation298:
0x1748	0xC006    	RJMP       L_Set_Rotation28
L__Set_Rotation238:
L__Set_Rotation237:
;st7735.c,240 :: 		w = TFT_WIDTH;
0x174A	0xE8B0    	LDI        R27, 128
0x174C	0x200293B0  	STS        _w+0, R27
;st7735.c,241 :: 		l = TFT_LENGTH;
0x1750	0xEAB0    	LDI        R27, 160
0x1752	0x200793B0  	STS        _l+0, R27
;st7735.c,242 :: 		}
L_Set_Rotation28:
;st7735.c,243 :: 		if((rotation == 1) || (rotation == 3))
0x1756	0x3001    	CPI        R16, 1
0x1758	0xF019    	BREQ       L__Set_Rotation240
L__Set_Rotation299:
0x175A	0x3003    	CPI        R16, 3
0x175C	0xF009    	BREQ       L__Set_Rotation239
L__Set_Rotation300:
; rotation end address is: 16 (R16)
0x175E	0xC006    	RJMP       L_Set_Rotation31
L__Set_Rotation240:
L__Set_Rotation239:
;st7735.c,245 :: 		w = TFT_LENGTH;
0x1760	0xEAB0    	LDI        R27, 160
0x1762	0x200293B0  	STS        _w+0, R27
;st7735.c,246 :: 		l = TFT_WIDTH;
0x1766	0xE8B0    	LDI        R27, 128
0x1768	0x200793B0  	STS        _l+0, R27
;st7735.c,247 :: 		}
L_Set_Rotation31:
;st7735.c,248 :: 		}
L_end_Set_Rotation:
0x176C	0x903F    	POP        R3
0x176E	0x902F    	POP        R2
0x1770	0x9508    	RET
; end of _Set_Rotation
_TFT_fill:
;st7735.c,251 :: 		void TFT_fill(unsigned int colour)
;st7735.c,253 :: 		unsigned int index = pixels;
0x11CA	0x924F    	PUSH       R4
0x11CC	0x925F    	PUSH       R5
; index start address is: 18 (R18)
0x11CE	0xE020    	LDI        R18, 0
0x11D0	0xE530    	LDI        R19, 80
;st7735.c,255 :: 		TFT_set_display_window(0, 0, (w - 1), (l - 1));
0x11D2	0x20079110  	LDS        R17, _l+0
0x11D6	0x5011    	SUBI       R17, 1
0x11D8	0x20029100  	LDS        R16, _w+0
0x11DC	0x5001    	SUBI       R16, 1
0x11DE	0x923F    	PUSH       R3
0x11E0	0x922F    	PUSH       R2
0x11E2	0x2E51    	MOV        R5, R17
0x11E4	0x2E40    	MOV        R4, R16
0x11E6	0x2433    	CLR        R3
0x11E8	0x2422    	CLR        R2
0x11EA	0xDB85    	RCALL      _TFT_set_display_window+0
; index end address is: 18 (R18)
0x11EC	0x902F    	POP        R2
0x11EE	0x903F    	POP        R3
;st7735.c,257 :: 		while(index > 0)
L_TFT_fill32:
; index start address is: 18 (R18)
0x11F0	0xE000    	LDI        R16, 0
0x11F2	0xE010    	LDI        R17, 0
0x11F4	0x1702    	CP         R16, R18
0x11F6	0x0713    	CPC        R17, R19
0x11F8	0xF430    	BRSH       L_TFT_fill33
L__TFT_fill302:
;st7735.c,259 :: 		TFT_write_word(colour);
0x11FA	0xDBC3    	RCALL      _TFT_write_word+0
;st7735.c,260 :: 		index--;
0x11FC	0x0189    	MOVW       R16, R18
0x11FE	0x5001    	SUBI       R16, 1
0x1200	0x4010    	SBCI       R17, 0
0x1202	0x0198    	MOVW       R18, R16
;st7735.c,261 :: 		}
; index end address is: 18 (R18)
0x1204	0xCFF5    	RJMP       L_TFT_fill32
L_TFT_fill33:
;st7735.c,262 :: 		}
L_end_TFT_fill:
0x1206	0x905F    	POP        R5
0x1208	0x904F    	POP        R4
0x120A	0x9508    	RET
; end of _TFT_fill
_TFT_write_word:
;st7735.c,157 :: 		void TFT_write_word(unsigned int value)
;st7735.c,159 :: 		TFT_Write((value >> 0x08), DAT);
0x0982	0x922F    	PUSH       R2
0x0984	0x923F    	PUSH       R3
0x0986	0x2D03    	MOV        R16, R3
0x0988	0xE010    	LDI        R17, 0
0x098A	0x923F    	PUSH       R3
0x098C	0x922F    	PUSH       R2
0x098E	0xE0B1    	LDI        R27, 1
0x0990	0x2E3B    	MOV        R3, R27
0x0992	0x2E20    	MOV        R2, R16
0x0994	0xDFE4    	RCALL      _TFT_Write+0
0x0996	0x902F    	POP        R2
0x0998	0x903F    	POP        R3
;st7735.c,160 :: 		TFT_Write((value & 0x00FF), DAT);
0x099A	0x2D02    	MOV        R16, R2
0x099C	0xE0B1    	LDI        R27, 1
0x099E	0x2E3B    	MOV        R3, R27
0x09A0	0x2E20    	MOV        R2, R16
0x09A2	0xDFDD    	RCALL      _TFT_Write+0
;st7735.c,161 :: 		}
L_end_TFT_write_word:
0x09A4	0x903F    	POP        R3
0x09A6	0x902F    	POP        R2
0x09A8	0x9508    	RET
; end of _TFT_write_word
_Swap_Colour:
;st7735.c,195 :: 		unsigned int Swap_Colour(unsigned int colour)
;st7735.c,197 :: 		return ((colour << 0x000B) | (colour & 0x07E0) | (colour >> 0x000B));
0x11A2	0xE0BB    	LDI        R27, 11
0x11A4	0x0191    	MOVW       R18, R2
L__Swap_Colour287:
0x11A6	0x0F22    	LSL        R18
0x11A8	0x1F33    	ROL        R19
0x11AA	0x95BA    	DEC        R27
0x11AC	0xF7E1    	BRNE       L__Swap_Colour287
L__Swap_Colour288:
0x11AE	0x0181    	MOVW       R16, R2
0x11B0	0x7E00    	ANDI       R16, 224
0x11B2	0x7017    	ANDI       R17, 7
0x11B4	0x2B20    	OR         R18, R16
0x11B6	0x2B31    	OR         R19, R17
0x11B8	0xE0BB    	LDI        R27, 11
0x11BA	0x0181    	MOVW       R16, R2
L__Swap_Colour289:
0x11BC	0x9516    	LSR        R17
0x11BE	0x9507    	ROR        R16
0x11C0	0x95BA    	DEC        R27
0x11C2	0xF7E1    	BRNE       L__Swap_Colour289
L__Swap_Colour290:
0x11C4	0x2B02    	OR         R16, R18
0x11C6	0x2B13    	OR         R17, R19
;st7735.c,198 :: 		}
L_end_Swap_Colour:
0x11C8	0x9508    	RET
; end of _Swap_Colour
_draw_background:
0x1DEA	0x93CF    	PUSH       R28
0x1DEC	0x93DF    	PUSH       R29
0x1DEE	0xB7CD    	IN         R28, SPL+0
0x1DF0	0xB7DE    	IN         R29, SPL+1
0x1DF2	0x97A8    	SBIW       R28, 40
0x1DF4	0xBFCD    	OUT        SPL+0, R28
0x1DF6	0xBFDE    	OUT        SPL+1, R29
0x1DF8	0x9621    	ADIW       R28, 1
;comms_demo.c,161 :: 		void draw_background()
;comms_demo.c,163 :: 		unsigned char points = 0x00;
0x1DFA	0x922F    	PUSH       R2
0x1DFC	0x923F    	PUSH       R3
0x1DFE	0x924F    	PUSH       R4
0x1E00	0x925F    	PUSH       R5
0x1E02	0x926F    	PUSH       R6
0x1E04	0x927F    	PUSH       R7
0x1E06	0x928F    	PUSH       R8
0x1E08	0x929F    	PUSH       R9
;comms_demo.c,165 :: 		print_str(60, 1, 1, Light_Blue, Black, "BMP180 + XMega");
0x1E0A	0xE4E6    	LDI        R30, lo_addr(?ICS?lstr3_comms_demo+0)
0x1E0C	0xE3F0    	LDI        R31, hi_addr(?ICS?lstr3_comms_demo+0)
0x1E0E	0x01DE    	MOVW       R26, R28
0x1E10	0xE08F    	LDI        R24, 15
0x1E12	0xE090    	LDI        R25, 0
0x1E14	0xDE7B    	RCALL      ___CC2DW+0
0x1E16	0x018E    	MOVW       R16, R28
0x1E18	0xE1BF    	LDI        R27, 31
0x1E1A	0x2E7B    	MOV        R7, R27
0x1E1C	0xE0B5    	LDI        R27, 5
0x1E1E	0x2E8B    	MOV        R8, R27
0x1E20	0xE0B1    	LDI        R27, 1
0x1E22	0x2E6B    	MOV        R6, R27
0x1E24	0xE0B1    	LDI        R27, 1
0x1E26	0x2E4B    	MOV        R4, R27
0x1E28	0xE0B0    	LDI        R27, 0
0x1E2A	0x2E5B    	MOV        R5, R27
0x1E2C	0xE3BC    	LDI        R27, 60
0x1E2E	0x2E2B    	MOV        R2, R27
0x1E30	0xE0B0    	LDI        R27, 0
0x1E32	0x2E3B    	MOV        R3, R27
0x1E34	0x931F    	PUSH       R17
0x1E36	0x930F    	PUSH       R16
0x1E38	0xE0B0    	LDI        R27, 0
0x1E3A	0x93BF    	PUSH       R27
0x1E3C	0x93BF    	PUSH       R27
0x1E3E	0xD9E6    	RCALL      _print_str+0
0x1E40	0xB7AD    	IN         R26, SPL+0
0x1E42	0xB7BE    	IN         R27, SPL+1
0x1E44	0x9614    	ADIW       R26, 4
0x1E46	0xBFAD    	OUT        SPL+0, R26
0x1E48	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,167 :: 		Draw_Rectangle(57, 9, 158, 111, NO, SQUARE, White, Black);
0x1E4A	0xE6BF    	LDI        R27, 111
0x1E4C	0x2E8B    	MOV        R8, R27
0x1E4E	0xE0B0    	LDI        R27, 0
0x1E50	0x2E9B    	MOV        R9, R27
0x1E52	0xE9BE    	LDI        R27, 158
0x1E54	0x2E6B    	MOV        R6, R27
0x1E56	0xE0B0    	LDI        R27, 0
0x1E58	0x2E7B    	MOV        R7, R27
0x1E5A	0xE0B9    	LDI        R27, 9
0x1E5C	0x2E4B    	MOV        R4, R27
0x1E5E	0xE0B0    	LDI        R27, 0
0x1E60	0x2E5B    	MOV        R5, R27
0x1E62	0xE3B9    	LDI        R27, 57
0x1E64	0x2E2B    	MOV        R2, R27
0x1E66	0xE0B0    	LDI        R27, 0
0x1E68	0x2E3B    	MOV        R3, R27
0x1E6A	0xE0B0    	LDI        R27, 0
0x1E6C	0x93BF    	PUSH       R27
0x1E6E	0x93BF    	PUSH       R27
0x1E70	0xEFBF    	LDI        R27, 255
0x1E72	0x93BF    	PUSH       R27
0x1E74	0x93BF    	PUSH       R27
0x1E76	0xE0B0    	LDI        R27, 0
0x1E78	0x93BF    	PUSH       R27
0x1E7A	0xE0B0    	LDI        R27, 0
0x1E7C	0x93BF    	PUSH       R27
0x1E7E	0xDA8B    	RCALL      _Draw_Rectangle+0
0x1E80	0xB7AD    	IN         R26, SPL+0
0x1E82	0xB7BE    	IN         R27, SPL+1
0x1E84	0x9616    	ADIW       R26, 6
0x1E86	0xBFAD    	OUT        SPL+0, R26
0x1E88	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,169 :: 		Draw_V_Line(50, 110, 10, Red);
0x1E8A	0xE0B0    	LDI        R27, 0
0x1E8C	0x2E8B    	MOV        R8, R27
0x1E8E	0xEFB8    	LDI        R27, 248
0x1E90	0x2E9B    	MOV        R9, R27
0x1E92	0xE0BA    	LDI        R27, 10
0x1E94	0x2E6B    	MOV        R6, R27
0x1E96	0xE0B0    	LDI        R27, 0
0x1E98	0x2E7B    	MOV        R7, R27
0x1E9A	0xE6BE    	LDI        R27, 110
0x1E9C	0x2E4B    	MOV        R4, R27
0x1E9E	0xE0B0    	LDI        R27, 0
0x1EA0	0x2E5B    	MOV        R5, R27
0x1EA2	0xE3B2    	LDI        R27, 50
0x1EA4	0x2E2B    	MOV        R2, R27
0x1EA6	0xE0B0    	LDI        R27, 0
0x1EA8	0x2E3B    	MOV        R3, R27
0x1EAA	0x0370940E  	CALL       _Draw_V_Line+0
;comms_demo.c,170 :: 		Draw_V_Line(25, 110, 10, Green);
0x1EAE	0xEEB0    	LDI        R27, 224
0x1EB0	0x2E8B    	MOV        R8, R27
0x1EB2	0xE0B7    	LDI        R27, 7
0x1EB4	0x2E9B    	MOV        R9, R27
0x1EB6	0xE0BA    	LDI        R27, 10
0x1EB8	0x2E6B    	MOV        R6, R27
0x1EBA	0xE0B0    	LDI        R27, 0
0x1EBC	0x2E7B    	MOV        R7, R27
0x1EBE	0xE6BE    	LDI        R27, 110
0x1EC0	0x2E4B    	MOV        R4, R27
0x1EC2	0xE0B0    	LDI        R27, 0
0x1EC4	0x2E5B    	MOV        R5, R27
0x1EC6	0xE1B9    	LDI        R27, 25
0x1EC8	0x2E2B    	MOV        R2, R27
0x1ECA	0xE0B0    	LDI        R27, 0
0x1ECC	0x2E3B    	MOV        R3, R27
0x1ECE	0x0370940E  	CALL       _Draw_V_Line+0
;comms_demo.c,172 :: 		for(points = 0; points <= 100; points += 10)
; points start address is: 18 (R18)
0x1ED2	0xE020    	LDI        R18, 0
; points end address is: 18 (R18)
L_draw_background215:
; points start address is: 18 (R18)
0x1ED4	0xE604    	LDI        R16, 100
0x1ED6	0x1702    	CP         R16, R18
0x1ED8	0xF170    	BRLO       L_draw_background216
L__draw_background464:
;comms_demo.c,174 :: 		Draw_H_Line(23, 27, (10 + points), Green);
0x1EDA	0x2F02    	MOV        R16, R18
0x1EDC	0xE010    	LDI        R17, 0
0x1EDE	0x5F06    	SUBI       R16, 246
0x1EE0	0x4F1F    	SBCI       R17, 255
0x1EE2	0x932F    	PUSH       R18
0x1EE4	0xEEB0    	LDI        R27, 224
0x1EE6	0x2E8B    	MOV        R8, R27
0x1EE8	0xE0B7    	LDI        R27, 7
0x1EEA	0x2E9B    	MOV        R9, R27
0x1EEC	0x0138    	MOVW       R6, R16
0x1EEE	0xE1BB    	LDI        R27, 27
0x1EF0	0x2E4B    	MOV        R4, R27
0x1EF2	0xE0B0    	LDI        R27, 0
0x1EF4	0x2E5B    	MOV        R5, R27
0x1EF6	0xE1B7    	LDI        R27, 23
0x1EF8	0x2E2B    	MOV        R2, R27
0x1EFA	0xE0B0    	LDI        R27, 0
0x1EFC	0x2E3B    	MOV        R3, R27
0x1EFE	0x02B7940E  	CALL       _Draw_H_Line+0
0x1F02	0x912F    	POP        R18
;comms_demo.c,175 :: 		Draw_H_Line(48, 52, (10 + points), Red);
0x1F04	0x2F02    	MOV        R16, R18
0x1F06	0xE010    	LDI        R17, 0
0x1F08	0x5F06    	SUBI       R16, 246
0x1F0A	0x4F1F    	SBCI       R17, 255
0x1F0C	0x932F    	PUSH       R18
0x1F0E	0xE0B0    	LDI        R27, 0
0x1F10	0x2E8B    	MOV        R8, R27
0x1F12	0xEFB8    	LDI        R27, 248
0x1F14	0x2E9B    	MOV        R9, R27
0x1F16	0x0138    	MOVW       R6, R16
0x1F18	0xE3B4    	LDI        R27, 52
0x1F1A	0x2E4B    	MOV        R4, R27
0x1F1C	0xE0B0    	LDI        R27, 0
0x1F1E	0x2E5B    	MOV        R5, R27
0x1F20	0xE3B0    	LDI        R27, 48
0x1F22	0x2E2B    	MOV        R2, R27
0x1F24	0xE0B0    	LDI        R27, 0
0x1F26	0x2E3B    	MOV        R3, R27
0x1F28	0x02B7940E  	CALL       _Draw_H_Line+0
0x1F2C	0x912F    	POP        R18
;comms_demo.c,172 :: 		for(points = 0; points <= 100; points += 10)
0x1F2E	0x2F02    	MOV        R16, R18
0x1F30	0x5F06    	SUBI       R16, 246
0x1F32	0x2F20    	MOV        R18, R16
;comms_demo.c,176 :: 		}
; points end address is: 18 (R18)
0x1F34	0xCFCF    	RJMP       L_draw_background215
L_draw_background216:
;comms_demo.c,178 :: 		for(points = 0; points <= 95; points += 10)
; points start address is: 18 (R18)
0x1F36	0xE020    	LDI        R18, 0
; points end address is: 18 (R18)
L_draw_background218:
; points start address is: 18 (R18)
0x1F38	0xE50F    	LDI        R16, 95
0x1F3A	0x1702    	CP         R16, R18
0x1F3C	0xF170    	BRLO       L_draw_background219
L__draw_background465:
;comms_demo.c,180 :: 		Draw_H_Line(24, 26, (15 + points), Green);
0x1F3E	0x2F02    	MOV        R16, R18
0x1F40	0xE010    	LDI        R17, 0
0x1F42	0x5F01    	SUBI       R16, 241
0x1F44	0x4F1F    	SBCI       R17, 255
0x1F46	0x932F    	PUSH       R18
0x1F48	0xEEB0    	LDI        R27, 224
0x1F4A	0x2E8B    	MOV        R8, R27
0x1F4C	0xE0B7    	LDI        R27, 7
0x1F4E	0x2E9B    	MOV        R9, R27
0x1F50	0x0138    	MOVW       R6, R16
0x1F52	0xE1BA    	LDI        R27, 26
0x1F54	0x2E4B    	MOV        R4, R27
0x1F56	0xE0B0    	LDI        R27, 0
0x1F58	0x2E5B    	MOV        R5, R27
0x1F5A	0xE1B8    	LDI        R27, 24
0x1F5C	0x2E2B    	MOV        R2, R27
0x1F5E	0xE0B0    	LDI        R27, 0
0x1F60	0x2E3B    	MOV        R3, R27
0x1F62	0x02B7940E  	CALL       _Draw_H_Line+0
0x1F66	0x912F    	POP        R18
;comms_demo.c,181 :: 		Draw_H_Line(49, 51, (15 + points), Red);
0x1F68	0x2F02    	MOV        R16, R18
0x1F6A	0xE010    	LDI        R17, 0
0x1F6C	0x5F01    	SUBI       R16, 241
0x1F6E	0x4F1F    	SBCI       R17, 255
0x1F70	0x932F    	PUSH       R18
0x1F72	0xE0B0    	LDI        R27, 0
0x1F74	0x2E8B    	MOV        R8, R27
0x1F76	0xEFB8    	LDI        R27, 248
0x1F78	0x2E9B    	MOV        R9, R27
0x1F7A	0x0138    	MOVW       R6, R16
0x1F7C	0xE3B3    	LDI        R27, 51
0x1F7E	0x2E4B    	MOV        R4, R27
0x1F80	0xE0B0    	LDI        R27, 0
0x1F82	0x2E5B    	MOV        R5, R27
0x1F84	0xE3B1    	LDI        R27, 49
0x1F86	0x2E2B    	MOV        R2, R27
0x1F88	0xE0B0    	LDI        R27, 0
0x1F8A	0x2E3B    	MOV        R3, R27
0x1F8C	0x02B7940E  	CALL       _Draw_H_Line+0
0x1F90	0x912F    	POP        R18
;comms_demo.c,178 :: 		for(points = 0; points <= 95; points += 10)
0x1F92	0x2F02    	MOV        R16, R18
0x1F94	0x5F06    	SUBI       R16, 246
0x1F96	0x2F20    	MOV        R18, R16
;comms_demo.c,182 :: 		}
; points end address is: 18 (R18)
0x1F98	0xCFCF    	RJMP       L_draw_background218
L_draw_background219:
;comms_demo.c,184 :: 		print_str(0, 1, 1, Green, Black, "kPa");
0x1F9A	0xE6BB    	LDI        R27, 107
0x1F9C	0x87BF    	STD        Y+15, R27
0x1F9E	0xE5B0    	LDI        R27, 80
0x1FA0	0x8BB8    	STD        Y+16, R27
0x1FA2	0xE6B1    	LDI        R27, 97
0x1FA4	0x8BB9    	STD        Y+17, R27
0x1FA6	0xE0B0    	LDI        R27, 0
0x1FA8	0x8BBA    	STD        Y+18, R27
0x1FAA	0x018E    	MOVW       R16, R28
0x1FAC	0x5F01    	SUBI       R16, 241
0x1FAE	0x4F1F    	SBCI       R17, 255
0x1FB0	0xEEB0    	LDI        R27, 224
0x1FB2	0x2E7B    	MOV        R7, R27
0x1FB4	0xE0B7    	LDI        R27, 7
0x1FB6	0x2E8B    	MOV        R8, R27
0x1FB8	0xE0B1    	LDI        R27, 1
0x1FBA	0x2E6B    	MOV        R6, R27
0x1FBC	0xE0B1    	LDI        R27, 1
0x1FBE	0x2E4B    	MOV        R4, R27
0x1FC0	0xE0B0    	LDI        R27, 0
0x1FC2	0x2E5B    	MOV        R5, R27
0x1FC4	0x2422    	CLR        R2
0x1FC6	0x2433    	CLR        R3
0x1FC8	0x931F    	PUSH       R17
0x1FCA	0x930F    	PUSH       R16
0x1FCC	0xE0B0    	LDI        R27, 0
0x1FCE	0x93BF    	PUSH       R27
0x1FD0	0x93BF    	PUSH       R27
0x1FD2	0xD91C    	RCALL      _print_str+0
0x1FD4	0xB7AD    	IN         R26, SPL+0
0x1FD6	0xB7BE    	IN         R27, SPL+1
0x1FD8	0x9614    	ADIW       R26, 4
0x1FDA	0xBFAD    	OUT        SPL+0, R26
0x1FDC	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,185 :: 		print_symbol(40, 1, 1, Red, Black, 0);
0x1FDE	0x2499    	CLR        R9
0x1FE0	0xE0B0    	LDI        R27, 0
0x1FE2	0x2E7B    	MOV        R7, R27
0x1FE4	0xEFB8    	LDI        R27, 248
0x1FE6	0x2E8B    	MOV        R8, R27
0x1FE8	0xE0B1    	LDI        R27, 1
0x1FEA	0x2E6B    	MOV        R6, R27
0x1FEC	0xE0B1    	LDI        R27, 1
0x1FEE	0x2E4B    	MOV        R4, R27
0x1FF0	0xE0B0    	LDI        R27, 0
0x1FF2	0x2E5B    	MOV        R5, R27
0x1FF4	0xE2B8    	LDI        R27, 40
0x1FF6	0x2E2B    	MOV        R2, R27
0x1FF8	0xE0B0    	LDI        R27, 0
0x1FFA	0x2E3B    	MOV        R3, R27
0x1FFC	0xE0B0    	LDI        R27, 0
0x1FFE	0x93BF    	PUSH       R27
0x2000	0x93BF    	PUSH       R27
0x2002	0xD957    	RCALL      _print_symbol+0
0x2004	0xB7AD    	IN         R26, SPL+0
0x2006	0xB7BE    	IN         R27, SPL+1
0x2008	0x9612    	ADIW       R26, 2
0x200A	0xBFAD    	OUT        SPL+0, R26
0x200C	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,186 :: 		print_str(46, 1, 1, Red, Black, "C");
0x200E	0xE4B3    	LDI        R27, 67
0x2010	0x8BBB    	STD        Y+19, R27
0x2012	0xE0B0    	LDI        R27, 0
0x2014	0x8BBC    	STD        Y+20, R27
0x2016	0x018E    	MOVW       R16, R28
0x2018	0x5E0D    	SUBI       R16, 237
0x201A	0x4F1F    	SBCI       R17, 255
0x201C	0xE0B0    	LDI        R27, 0
0x201E	0x2E7B    	MOV        R7, R27
0x2020	0xEFB8    	LDI        R27, 248
0x2022	0x2E8B    	MOV        R8, R27
0x2024	0xE0B1    	LDI        R27, 1
0x2026	0x2E6B    	MOV        R6, R27
0x2028	0xE0B1    	LDI        R27, 1
0x202A	0x2E4B    	MOV        R4, R27
0x202C	0xE0B0    	LDI        R27, 0
0x202E	0x2E5B    	MOV        R5, R27
0x2030	0xE2BE    	LDI        R27, 46
0x2032	0x2E2B    	MOV        R2, R27
0x2034	0xE0B0    	LDI        R27, 0
0x2036	0x2E3B    	MOV        R3, R27
0x2038	0x931F    	PUSH       R17
0x203A	0x930F    	PUSH       R16
0x203C	0xE0B0    	LDI        R27, 0
0x203E	0x93BF    	PUSH       R27
0x2040	0x93BF    	PUSH       R27
0x2042	0xD8E4    	RCALL      _print_str+0
0x2044	0xB7AD    	IN         R26, SPL+0
0x2046	0xB7BE    	IN         R27, SPL+1
0x2048	0x9614    	ADIW       R26, 4
0x204A	0xBFAD    	OUT        SPL+0, R26
0x204C	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,188 :: 		print_str(0, 10, 1, Green, Black, "150");
0x204E	0xE3B1    	LDI        R27, 49
0x2050	0x8BBD    	STD        Y+21, R27
0x2052	0xE3B5    	LDI        R27, 53
0x2054	0x8BBE    	STD        Y+22, R27
0x2056	0xE3B0    	LDI        R27, 48
0x2058	0x8BBF    	STD        Y+23, R27
0x205A	0xE0B0    	LDI        R27, 0
0x205C	0x8FB8    	STD        Y+24, R27
0x205E	0x018E    	MOVW       R16, R28
0x2060	0x5E0B    	SUBI       R16, 235
0x2062	0x4F1F    	SBCI       R17, 255
0x2064	0xEEB0    	LDI        R27, 224
0x2066	0x2E7B    	MOV        R7, R27
0x2068	0xE0B7    	LDI        R27, 7
0x206A	0x2E8B    	MOV        R8, R27
0x206C	0xE0B1    	LDI        R27, 1
0x206E	0x2E6B    	MOV        R6, R27
0x2070	0xE0BA    	LDI        R27, 10
0x2072	0x2E4B    	MOV        R4, R27
0x2074	0xE0B0    	LDI        R27, 0
0x2076	0x2E5B    	MOV        R5, R27
0x2078	0x2422    	CLR        R2
0x207A	0x2433    	CLR        R3
0x207C	0x931F    	PUSH       R17
0x207E	0x930F    	PUSH       R16
0x2080	0xE0B0    	LDI        R27, 0
0x2082	0x93BF    	PUSH       R27
0x2084	0x93BF    	PUSH       R27
0x2086	0xD8C2    	RCALL      _print_str+0
0x2088	0xB7AD    	IN         R26, SPL+0
0x208A	0xB7BE    	IN         R27, SPL+1
0x208C	0x9614    	ADIW       R26, 4
0x208E	0xBFAD    	OUT        SPL+0, R26
0x2090	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,189 :: 		print_str(31, 20, 1, Red, Black, "90");
0x2092	0xE3B9    	LDI        R27, 57
0x2094	0x8FB9    	STD        Y+25, R27
0x2096	0xE3B0    	LDI        R27, 48
0x2098	0x8FBA    	STD        Y+26, R27
0x209A	0xE0B0    	LDI        R27, 0
0x209C	0x8FBB    	STD        Y+27, R27
0x209E	0x018E    	MOVW       R16, R28
0x20A0	0x5E07    	SUBI       R16, 231
0x20A2	0x4F1F    	SBCI       R17, 255
0x20A4	0xE0B0    	LDI        R27, 0
0x20A6	0x2E7B    	MOV        R7, R27
0x20A8	0xEFB8    	LDI        R27, 248
0x20AA	0x2E8B    	MOV        R8, R27
0x20AC	0xE0B1    	LDI        R27, 1
0x20AE	0x2E6B    	MOV        R6, R27
0x20B0	0xE1B4    	LDI        R27, 20
0x20B2	0x2E4B    	MOV        R4, R27
0x20B4	0xE0B0    	LDI        R27, 0
0x20B6	0x2E5B    	MOV        R5, R27
0x20B8	0xE1BF    	LDI        R27, 31
0x20BA	0x2E2B    	MOV        R2, R27
0x20BC	0xE0B0    	LDI        R27, 0
0x20BE	0x2E3B    	MOV        R3, R27
0x20C0	0x931F    	PUSH       R17
0x20C2	0x930F    	PUSH       R16
0x20C4	0xE0B0    	LDI        R27, 0
0x20C6	0x93BF    	PUSH       R27
0x20C8	0x93BF    	PUSH       R27
0x20CA	0xD8A0    	RCALL      _print_str+0
0x20CC	0xB7AD    	IN         R26, SPL+0
0x20CE	0xB7BE    	IN         R27, SPL+1
0x20D0	0x9614    	ADIW       R26, 4
0x20D2	0xBFAD    	OUT        SPL+0, R26
0x20D4	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,191 :: 		print_str(0, 60, 1, Green, Black, "100");
0x20D6	0xE3B1    	LDI        R27, 49
0x20D8	0x8FBC    	STD        Y+28, R27
0x20DA	0xE3B0    	LDI        R27, 48
0x20DC	0x8FBD    	STD        Y+29, R27
0x20DE	0xE3B0    	LDI        R27, 48
0x20E0	0x8FBE    	STD        Y+30, R27
0x20E2	0xE0B0    	LDI        R27, 0
0x20E4	0x8FBF    	STD        Y+31, R27
0x20E6	0x018E    	MOVW       R16, R28
0x20E8	0x5E04    	SUBI       R16, 228
0x20EA	0x4F1F    	SBCI       R17, 255
0x20EC	0xEEB0    	LDI        R27, 224
0x20EE	0x2E7B    	MOV        R7, R27
0x20F0	0xE0B7    	LDI        R27, 7
0x20F2	0x2E8B    	MOV        R8, R27
0x20F4	0xE0B1    	LDI        R27, 1
0x20F6	0x2E6B    	MOV        R6, R27
0x20F8	0xE3BC    	LDI        R27, 60
0x20FA	0x2E4B    	MOV        R4, R27
0x20FC	0xE0B0    	LDI        R27, 0
0x20FE	0x2E5B    	MOV        R5, R27
0x2100	0x2422    	CLR        R2
0x2102	0x2433    	CLR        R3
0x2104	0x931F    	PUSH       R17
0x2106	0x930F    	PUSH       R16
0x2108	0xE0B0    	LDI        R27, 0
0x210A	0x93BF    	PUSH       R27
0x210C	0x93BF    	PUSH       R27
0x210E	0xD87E    	RCALL      _print_str+0
0x2110	0xB7AD    	IN         R26, SPL+0
0x2112	0xB7BE    	IN         R27, SPL+1
0x2114	0x9614    	ADIW       R26, 4
0x2116	0xBFAD    	OUT        SPL+0, R26
0x2118	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,192 :: 		print_str(31, 60, 1, Red, Black, "50");
0x211A	0xE3B5    	LDI        R27, 53
0x211C	0xA3B8    	STD        Y+32, R27
0x211E	0xE3B0    	LDI        R27, 48
0x2120	0xA3B9    	STD        Y+33, R27
0x2122	0xE0B0    	LDI        R27, 0
0x2124	0xA3BA    	STD        Y+34, R27
0x2126	0x018E    	MOVW       R16, R28
0x2128	0x5E00    	SUBI       R16, 224
0x212A	0x4F1F    	SBCI       R17, 255
0x212C	0xE0B0    	LDI        R27, 0
0x212E	0x2E7B    	MOV        R7, R27
0x2130	0xEFB8    	LDI        R27, 248
0x2132	0x2E8B    	MOV        R8, R27
0x2134	0xE0B1    	LDI        R27, 1
0x2136	0x2E6B    	MOV        R6, R27
0x2138	0xE3BC    	LDI        R27, 60
0x213A	0x2E4B    	MOV        R4, R27
0x213C	0xE0B0    	LDI        R27, 0
0x213E	0x2E5B    	MOV        R5, R27
0x2140	0xE1BF    	LDI        R27, 31
0x2142	0x2E2B    	MOV        R2, R27
0x2144	0xE0B0    	LDI        R27, 0
0x2146	0x2E3B    	MOV        R3, R27
0x2148	0x931F    	PUSH       R17
0x214A	0x930F    	PUSH       R16
0x214C	0xE0B0    	LDI        R27, 0
0x214E	0x93BF    	PUSH       R27
0x2150	0x93BF    	PUSH       R27
0x2152	0xD85C    	RCALL      _print_str+0
0x2154	0xB7AD    	IN         R26, SPL+0
0x2156	0xB7BE    	IN         R27, SPL+1
0x2158	0x9614    	ADIW       R26, 4
0x215A	0xBFAD    	OUT        SPL+0, R26
0x215C	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,194 :: 		print_str(0, 106, 1, Green, Black, "50");
0x215E	0xE3B5    	LDI        R27, 53
0x2160	0xA3BB    	STD        Y+35, R27
0x2162	0xE3B0    	LDI        R27, 48
0x2164	0xA3BC    	STD        Y+36, R27
0x2166	0xE0B0    	LDI        R27, 0
0x2168	0xA3BD    	STD        Y+37, R27
0x216A	0x018E    	MOVW       R16, R28
0x216C	0x5D0D    	SUBI       R16, 221
0x216E	0x4F1F    	SBCI       R17, 255
0x2170	0xEEB0    	LDI        R27, 224
0x2172	0x2E7B    	MOV        R7, R27
0x2174	0xE0B7    	LDI        R27, 7
0x2176	0x2E8B    	MOV        R8, R27
0x2178	0xE0B1    	LDI        R27, 1
0x217A	0x2E6B    	MOV        R6, R27
0x217C	0xE6BA    	LDI        R27, 106
0x217E	0x2E4B    	MOV        R4, R27
0x2180	0xE0B0    	LDI        R27, 0
0x2182	0x2E5B    	MOV        R5, R27
0x2184	0x2422    	CLR        R2
0x2186	0x2433    	CLR        R3
0x2188	0x931F    	PUSH       R17
0x218A	0x930F    	PUSH       R16
0x218C	0xE0B0    	LDI        R27, 0
0x218E	0x93BF    	PUSH       R27
0x2190	0x93BF    	PUSH       R27
0x2192	0xD83C    	RCALL      _print_str+0
0x2194	0xB7AD    	IN         R26, SPL+0
0x2196	0xB7BE    	IN         R27, SPL+1
0x2198	0x9614    	ADIW       R26, 4
0x219A	0xBFAD    	OUT        SPL+0, R26
0x219C	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,195 :: 		print_str(31, 106, 1, Red, Black, "0");
0x219E	0xE3B0    	LDI        R27, 48
0x21A0	0xA3BE    	STD        Y+38, R27
0x21A2	0xE0B0    	LDI        R27, 0
0x21A4	0xA3BF    	STD        Y+39, R27
0x21A6	0x018E    	MOVW       R16, R28
0x21A8	0x5D0A    	SUBI       R16, 218
0x21AA	0x4F1F    	SBCI       R17, 255
0x21AC	0xE0B0    	LDI        R27, 0
0x21AE	0x2E7B    	MOV        R7, R27
0x21B0	0xEFB8    	LDI        R27, 248
0x21B2	0x2E8B    	MOV        R8, R27
0x21B4	0xE0B1    	LDI        R27, 1
0x21B6	0x2E6B    	MOV        R6, R27
0x21B8	0xE6BA    	LDI        R27, 106
0x21BA	0x2E4B    	MOV        R4, R27
0x21BC	0xE0B0    	LDI        R27, 0
0x21BE	0x2E5B    	MOV        R5, R27
0x21C0	0xE1BF    	LDI        R27, 31
0x21C2	0x2E2B    	MOV        R2, R27
0x21C4	0xE0B0    	LDI        R27, 0
0x21C6	0x2E3B    	MOV        R3, R27
0x21C8	0x931F    	PUSH       R17
0x21CA	0x930F    	PUSH       R16
0x21CC	0xE0B0    	LDI        R27, 0
0x21CE	0x93BF    	PUSH       R27
0x21D0	0x93BF    	PUSH       R27
0x21D2	0xD81C    	RCALL      _print_str+0
0x21D4	0xB7AD    	IN         R26, SPL+0
0x21D6	0xB7BE    	IN         R27, SPL+1
0x21D8	0x9614    	ADIW       R26, 4
0x21DA	0xBFAD    	OUT        SPL+0, R26
0x21DC	0xBFBE    	OUT        SPL+1, R27
;comms_demo.c,196 :: 		}
L_end_draw_background:
0x21DE	0x909F    	POP        R9
0x21E0	0x908F    	POP        R8
0x21E2	0x907F    	POP        R7
0x21E4	0x906F    	POP        R6
0x21E6	0x905F    	POP        R5
0x21E8	0x904F    	POP        R4
0x21EA	0x903F    	POP        R3
0x21EC	0x902F    	POP        R2
0x21EE	0x96A7    	ADIW       R28, 39
0x21F0	0xBFCD    	OUT        SPL+0, R28
0x21F2	0xBFDE    	OUT        SPL+1, R29
0x21F4	0x91DF    	POP        R29
0x21F6	0x91CF    	POP        R28
0x21F8	0x9508    	RET
; end of _draw_background
_print_str:
0x120C	0x93CF    	PUSH       R28
0x120E	0x93DF    	PUSH       R29
0x1210	0xB7CD    	IN         R28, SPL+0
0x1212	0xB7DE    	IN         R29, SPL+1
0x1214	0x9625    	ADIW       R28, 5
;st7735.c,742 :: 		void print_str(unsigned int x_pos, unsigned int y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, char *ch)
0x1216	0x929F    	PUSH       R9
; back_colour start address is: 20 (R20)
0x1218	0x8148    	LDD        R20, Y+0
0x121A	0x8159    	LDD        R21, Y+1
; ch start address is: 22 (R22)
; ch start address is: 22 (R22)
0x121C	0x816A    	LDD        R22, Y+2
0x121E	0x817B    	LDD        R23, Y+3
; back_colour end address is: 20 (R20)
; ch end address is: 22 (R22)
;st7735.c,744 :: 		do
L_print_str124:
;st7735.c,746 :: 		print_char(x_pos, y_pos, font_size, colour, back_colour, *ch++);
; ch start address is: 22 (R22)
; back_colour start address is: 20 (R20)
0x1220	0x01FB    	MOVW       R30, R22
0x1222	0x8100    	LD         R16, Z
0x1224	0x935F    	PUSH       R21
0x1226	0x934F    	PUSH       R20
0x1228	0x937F    	PUSH       R23
0x122A	0x936F    	PUSH       R22
0x122C	0x926F    	PUSH       R6
0x122E	0x925F    	PUSH       R5
0x1230	0x924F    	PUSH       R4
0x1232	0x923F    	PUSH       R3
0x1234	0x922F    	PUSH       R2
0x1236	0x2E90    	MOV        R9, R16
0x1238	0x935F    	PUSH       R21
0x123A	0x934F    	PUSH       R20
0x123C	0xDBDB    	RCALL      _print_char+0
0x123E	0xB7AD    	IN         R26, SPL+0
0x1240	0xB7BE    	IN         R27, SPL+1
0x1242	0x9612    	ADIW       R26, 2
0x1244	0xBFAD    	OUT        SPL+0, R26
0x1246	0xBFBE    	OUT        SPL+1, R27
0x1248	0x902F    	POP        R2
0x124A	0x903F    	POP        R3
0x124C	0x904F    	POP        R4
0x124E	0x905F    	POP        R5
0x1250	0x906F    	POP        R6
0x1252	0x916F    	POP        R22
0x1254	0x917F    	POP        R23
0x1256	0x914F    	POP        R20
0x1258	0x915F    	POP        R21
0x125A	0x019B    	MOVW       R18, R22
0x125C	0x5F2F    	SUBI       R18, 255
0x125E	0x4F3F    	SBCI       R19, 255
0x1260	0x01B9    	MOVW       R22, R18
; ch end address is: 22 (R22)
;st7735.c,747 :: 		x_pos += (font_size * 0x06);
0x1262	0xE006    	LDI        R16, 6
0x1264	0x9E60    	MUL        R6, R16
0x1266	0x0180    	MOVW       R16, R0
0x1268	0x0D02    	ADD        R16, R2
0x126A	0x1D13    	ADC        R17, R3
0x126C	0x0118    	MOVW       R2, R16
;st7735.c,748 :: 		}while((*ch >= 0x20) && (*ch <= 0x7F));
0x126E	0x01F9    	MOVW       R30, R18
0x1270	0x8100    	LD         R16, Z
0x1272	0x3200    	CPI        R16, 32
0x1274	0xF030    	BRLO       L__print_str246
L__print_str364:
; ch end address is: 22 (R22)
; ch start address is: 22 (R22)
0x1276	0x01FB    	MOVW       R30, R22
0x1278	0x8110    	LD         R17, Z
0x127A	0xE70F    	LDI        R16, 127
0x127C	0x1701    	CP         R16, R17
0x127E	0xF008    	BRLO       L__print_str245
L__print_str365:
; ch end address is: 22 (R22)
0x1280	0xCFCF    	RJMP       L_print_str124
L__print_str246:
L__print_str245:
;st7735.c,750 :: 		print_char(x_pos, y_pos, font_size, colour, back_colour, 0x20);
0x1282	0x926F    	PUSH       R6
0x1284	0x925F    	PUSH       R5
0x1286	0x924F    	PUSH       R4
0x1288	0x923F    	PUSH       R3
0x128A	0x922F    	PUSH       R2
0x128C	0xE2B0    	LDI        R27, 32
0x128E	0x2E9B    	MOV        R9, R27
0x1290	0x935F    	PUSH       R21
0x1292	0x934F    	PUSH       R20
; back_colour end address is: 20 (R20)
0x1294	0xDBAF    	RCALL      _print_char+0
0x1296	0xB7AD    	IN         R26, SPL+0
0x1298	0xB7BE    	IN         R27, SPL+1
0x129A	0x9612    	ADIW       R26, 2
0x129C	0xBFAD    	OUT        SPL+0, R26
0x129E	0xBFBE    	OUT        SPL+1, R27
0x12A0	0x902F    	POP        R2
0x12A2	0x903F    	POP        R3
0x12A4	0x904F    	POP        R4
0x12A6	0x905F    	POP        R5
0x12A8	0x906F    	POP        R6
;st7735.c,751 :: 		}
L_end_print_str:
0x12AA	0x909F    	POP        R9
0x12AC	0x91DF    	POP        R29
0x12AE	0x91CF    	POP        R28
0x12B0	0x9508    	RET
; end of _print_str
_print_char:
0x09F4	0x93CF    	PUSH       R28
0x09F6	0x93DF    	PUSH       R29
0x09F8	0xB7CD    	IN         R28, SPL+0
0x09FA	0xB7DE    	IN         R29, SPL+1
0x09FC	0x9625    	ADIW       R28, 5
;st7735.c,701 :: 		void print_char(unsigned int x_pos, unsigned int y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, char ch)
; back_colour start address is: 17 (R17)
0x09FE	0x8118    	LDD        R17, Y+0
0x0A00	0x8129    	LDD        R18, Y+1
;st7735.c,703 :: 		unsigned char i = 0x00;
;st7735.c,704 :: 		unsigned char j = 0x00;
;st7735.c,705 :: 		unsigned char value = 0x00;
;st7735.c,707 :: 		if(font_size <= 0)
0x0A02	0xE000    	LDI        R16, 0
0x0A04	0x1506    	CP         R16, R6
0x0A06	0xF010    	BRLO       L_print_char114
L__print_char356:
;st7735.c,709 :: 		font_size = 1;
0x0A08	0xE0B1    	LDI        R27, 1
0x0A0A	0x2E6B    	MOV        R6, R27
;st7735.c,710 :: 		}
L_print_char114:
;st7735.c,712 :: 		if(x_pos < font_size)
0x0A0C	0x1426    	CP         R2, R6
0x0A0E	0xE0B0    	LDI        R27, 0
0x0A10	0x063B    	CPC        R3, R27
0x0A12	0xF418    	BRSH       L_print_char115
L__print_char357:
;st7735.c,714 :: 		x_pos = font_size;
0x0A14	0x2C26    	MOV        R2, R6
0x0A16	0xE0B0    	LDI        R27, 0
0x0A18	0x2E3B    	MOV        R3, R27
;st7735.c,715 :: 		}
L_print_char115:
;st7735.c,717 :: 		for(i = 0x00; i < 0x05; i++)
; i start address is: 22 (R22)
0x0A1A	0xE060    	LDI        R22, 0
; back_colour end address is: 17 (R17)
; i end address is: 22 (R22)
0x0A1C	0x2F41    	MOV        R20, R17
0x0A1E	0x2F52    	MOV        R21, R18
L_print_char116:
; i start address is: 22 (R22)
; back_colour start address is: 20 (R20)
0x0A20	0x3065    	CPI        R22, 5
0x0A22	0xF008    	BRLO       L__print_char358
0x0A24	0xC058    	RJMP       L_print_char117
L__print_char358:
;st7735.c,719 :: 		for(j = 0x00; j < 0x08; j++)
; j start address is: 23 (R23)
0x0A26	0xE070    	LDI        R23, 0
; back_colour end address is: 20 (R20)
; j end address is: 23 (R23)
; i end address is: 22 (R22)
L_print_char119:
; j start address is: 23 (R23)
; back_colour start address is: 20 (R20)
; i start address is: 22 (R22)
0x0A28	0x3078    	CPI        R23, 8
0x0A2A	0xF008    	BRLO       L__print_char359
0x0A2C	0xC03E    	RJMP       L_print_char120
L__print_char359:
;st7735.c,722 :: 		value = ((font[((unsigned char)ch) - 0x20][i]));
0x0A2E	0x2D09    	MOV        R16, R9
0x0A30	0xE010    	LDI        R17, 0
0x0A32	0x5200    	SUBI       R16, 32
0x0A34	0x4010    	SBCI       R17, 0
0x0A36	0x935F    	PUSH       R21
0x0A38	0x934F    	PUSH       R20
0x0A3A	0xE045    	LDI        R20, 5
0x0A3C	0xE050    	LDI        R21, 0
0x0A3E	0xDCDC    	RCALL      _HWMul_16x16+0
0x0A40	0x914F    	POP        R20
0x0A42	0x915F    	POP        R21
0x0A44	0xE626    	LDI        R18, lo_addr(comms_demo_font+0)
0x0A46	0xE23E    	LDI        R19, hi_addr(comms_demo_font+0)
0x0A48	0x0F02    	ADD        R16, R18
0x0A4A	0x1F13    	ADC        R17, R19
0x0A4C	0x2FE6    	MOV        R30, R22
0x0A4E	0xE0F0    	LDI        R31, 0
0x0A50	0x0FE0    	ADD        R30, R16
0x0A52	0x1FF1    	ADC        R31, R17
0x0A54	0x9104    	LPM        R16, Z
;st7735.c,724 :: 		if(((value >> j) & 0x01) != 0x00)
0x0A56	0x2FB7    	MOV        R27, R23
0x0A58	0x23BB    	TST        R27
0x0A5A	0xF019    	BREQ       L__print_char361
L__print_char360:
0x0A5C	0x9506    	LSR        R16
0x0A5E	0x95BA    	DEC        R27
0x0A60	0xF7E9    	BRNE       L__print_char360
L__print_char361:
0x0A62	0x7001    	ANDI       R16, 1
0x0A64	0x3000    	CPI        R16, 0
0x0A66	0xF069    	BREQ       L_print_char122
L__print_char362:
;st7735.c,726 :: 		Draw_Font_Pixel(x_pos, y_pos, colour, font_size);
0x0A68	0x925F    	PUSH       R5
0x0A6A	0x924F    	PUSH       R4
0x0A6C	0x923F    	PUSH       R3
0x0A6E	0x922F    	PUSH       R2
0x0A70	0x2C34    	MOV        R3, R4
0x0A72	0x2C47    	MOV        R4, R7
0x0A74	0x2C58    	MOV        R5, R8
0x0A76	0xDC77    	RCALL      _Draw_Font_Pixel+0
0x0A78	0x902F    	POP        R2
0x0A7A	0x903F    	POP        R3
0x0A7C	0x904F    	POP        R4
0x0A7E	0x905F    	POP        R5
;st7735.c,727 :: 		}
0x0A80	0xC00B    	RJMP       L_print_char123
L_print_char122:
;st7735.c,730 :: 		Draw_Font_Pixel(x_pos, y_pos, back_colour, font_size);
0x0A82	0x925F    	PUSH       R5
0x0A84	0x924F    	PUSH       R4
0x0A86	0x923F    	PUSH       R3
0x0A88	0x922F    	PUSH       R2
0x0A8A	0x2C34    	MOV        R3, R4
0x0A8C	0x012A    	MOVW       R4, R20
0x0A8E	0xDC6B    	RCALL      _Draw_Font_Pixel+0
0x0A90	0x902F    	POP        R2
0x0A92	0x903F    	POP        R3
0x0A94	0x904F    	POP        R4
0x0A96	0x905F    	POP        R5
;st7735.c,731 :: 		}
L_print_char123:
;st7735.c,733 :: 		y_pos += font_size;
0x0A98	0x2D06    	MOV        R16, R6
0x0A9A	0xE010    	LDI        R17, 0
0x0A9C	0x0D04    	ADD        R16, R4
0x0A9E	0x1D15    	ADC        R17, R5
0x0AA0	0x0128    	MOVW       R4, R16
;st7735.c,719 :: 		for(j = 0x00; j < 0x08; j++)
0x0AA2	0x2F07    	MOV        R16, R23
0x0AA4	0x5F0F    	SUBI       R16, 255
0x0AA6	0x2F70    	MOV        R23, R16
;st7735.c,734 :: 		}
; j end address is: 23 (R23)
0x0AA8	0xCFBF    	RJMP       L_print_char119
L_print_char120:
;st7735.c,736 :: 		y_pos -= (font_size << 0x03);
0x0AAA	0x2D06    	MOV        R16, R6
0x0AAC	0xE010    	LDI        R17, 0
0x0AAE	0x0F00    	LSL        R16
0x0AB0	0x1F11    	ROL        R17
0x0AB2	0x0F00    	LSL        R16
0x0AB4	0x1F11    	ROL        R17
0x0AB6	0x0F00    	LSL        R16
0x0AB8	0x1F11    	ROL        R17
0x0ABA	0x0108    	MOVW       R0, R16
0x0ABC	0x0182    	MOVW       R16, R4
0x0ABE	0x1900    	SUB        R16, R0
0x0AC0	0x0911    	SBC        R17, R1
0x0AC2	0x0128    	MOVW       R4, R16
;st7735.c,737 :: 		x_pos += font_size;
0x0AC4	0x2D06    	MOV        R16, R6
0x0AC6	0xE010    	LDI        R17, 0
0x0AC8	0x0D02    	ADD        R16, R2
0x0ACA	0x1D13    	ADC        R17, R3
0x0ACC	0x0118    	MOVW       R2, R16
;st7735.c,717 :: 		for(i = 0x00; i < 0x05; i++)
0x0ACE	0x2F06    	MOV        R16, R22
0x0AD0	0x5F0F    	SUBI       R16, 255
0x0AD2	0x2F60    	MOV        R22, R16
;st7735.c,738 :: 		}
; back_colour end address is: 20 (R20)
; i end address is: 22 (R22)
0x0AD4	0xCFA5    	RJMP       L_print_char116
L_print_char117:
;st7735.c,739 :: 		}
L_end_print_char:
0x0AD6	0x91DF    	POP        R29
0x0AD8	0x91CF    	POP        R28
0x0ADA	0x9508    	RET
; end of _print_char
_Draw_Font_Pixel:
0x0366	0x93CF    	PUSH       R28
0x0368	0x93DF    	PUSH       R29
0x036A	0xB7CD    	IN         R28, SPL+0
0x036C	0xB7DE    	IN         R29, SPL+1
0x036E	0x9723    	SBIW       R28, 3
0x0370	0xBFCD    	OUT        SPL+0, R28
0x0372	0xBFDE    	OUT        SPL+1, R29
0x0374	0x9621    	ADIW       R28, 1
;st7735.c,686 :: 		void Draw_Font_Pixel(unsigned char x_pos, unsigned char y_pos, unsigned int colour, unsigned char pixel_size)
;st7735.c,688 :: 		unsigned char i = (pixel_size * pixel_size);
0x0376	0x924F    	PUSH       R4
0x0378	0x925F    	PUSH       R5
0x037A	0x9C66    	MUL        R6, R6
0x037C	0x0180    	MOVW       R16, R0
0x037E	0x8308    	STD        Y+0, R16
;st7735.c,689 :: 		unsigned int col = Swap_Colour(colour);
0x0380	0x923F    	PUSH       R3
0x0382	0x922F    	PUSH       R2
0x0384	0x0112    	MOVW       R2, R4
0x0386	0xD70D    	RCALL      _Swap_Colour+0
0x0388	0x902F    	POP        R2
0x038A	0x903F    	POP        R3
0x038C	0x8309    	STD        Y+1, R16
0x038E	0x831A    	STD        Y+2, R17
;st7735.c,691 :: 		TFT_set_display_window(x_pos, y_pos, (x_pos + pixel_size - 1), (y_pos + pixel_size - 1));
0x0390	0x2D03    	MOV        R16, R3
0x0392	0x0D06    	ADD        R16, R6
0x0394	0x2F10    	MOV        R17, R16
0x0396	0x5011    	SUBI       R17, 1
0x0398	0x2D02    	MOV        R16, R2
0x039A	0x0D06    	ADD        R16, R6
0x039C	0x5001    	SUBI       R16, 1
0x039E	0x2E51    	MOV        R5, R17
0x03A0	0x2E40    	MOV        R4, R16
0x03A2	0xD2A9    	RCALL      _TFT_set_display_window+0
;st7735.c,693 :: 		while(i > 0)
L_Draw_Font_Pixel112:
0x03A4	0x8118    	LDD        R17, Y+0
0x03A6	0xE000    	LDI        R16, 0
0x03A8	0x1701    	CP         R16, R17
0x03AA	0xF458    	BRSH       L_Draw_Font_Pixel113
L__Draw_Font_Pixel354:
;st7735.c,695 :: 		TFT_write_word(col);
0x03AC	0x923F    	PUSH       R3
0x03AE	0x922F    	PUSH       R2
0x03B0	0x8029    	LDD        R2, Y+1
0x03B2	0x803A    	LDD        R3, Y+2
0x03B4	0xD2E6    	RCALL      _TFT_write_word+0
0x03B6	0x902F    	POP        R2
0x03B8	0x903F    	POP        R3
;st7735.c,696 :: 		i--;
0x03BA	0x8108    	LDD        R16, Y+0
0x03BC	0x5001    	SUBI       R16, 1
0x03BE	0x8308    	STD        Y+0, R16
;st7735.c,697 :: 		};
0x03C0	0xCFF1    	RJMP       L_Draw_Font_Pixel112
L_Draw_Font_Pixel113:
;st7735.c,698 :: 		}
L_end_Draw_Font_Pixel:
0x03C2	0x905F    	POP        R5
0x03C4	0x904F    	POP        R4
0x03C6	0x9622    	ADIW       R28, 2
0x03C8	0xBFCD    	OUT        SPL+0, R28
0x03CA	0xBFDE    	OUT        SPL+1, R29
0x03CC	0x91DF    	POP        R29
0x03CE	0x91CF    	POP        R28
0x03D0	0x9508    	RET
; end of _Draw_Font_Pixel
_HWMul_16x16:
;__Lib_Math.c,398 :: 		
;__Lib_Math.c,400 :: 		
0x03F8	0x0198    	MOVW       R18, R16
;__Lib_Math.c,401 :: 		
0x03FA	0x9F24    	MUL        R18, R20
;__Lib_Math.c,402 :: 		
0x03FC	0x0180    	MOVW       R16, R0
;__Lib_Math.c,403 :: 		
0x03FE	0x9F25    	MUL        R18, R21
;__Lib_Math.c,404 :: 		
0x0400	0x0D10    	ADD        R17, R0
;__Lib_Math.c,405 :: 		
0x0402	0x9F34    	MUL        R19, R20
;__Lib_Math.c,406 :: 		
0x0404	0x0D10    	ADD        R17, R0
;__Lib_Math.c,408 :: 		
L_end_HWMul_16x16:
0x0406	0x9508    	RET
; end of _HWMul_16x16
_Draw_Rectangle:
0x1396	0x93CF    	PUSH       R28
0x1398	0x93DF    	PUSH       R29
0x139A	0xB7CD    	IN         R28, SPL+0
0x139C	0xB7DE    	IN         R29, SPL+1
0x139E	0x9724    	SBIW       R28, 4
0x13A0	0xBFCD    	OUT        SPL+0, R28
0x13A2	0xBFDE    	OUT        SPL+1, R29
0x13A4	0x9621    	ADIW       R28, 1
;st7735.c,533 :: 		void Draw_Rectangle(signed int x1, signed int y1, signed int x2, signed int y2, unsigned char fill, unsigned char type, unsigned int colour, unsigned int back_colour)
; fill start address is: 18 (R18)
0x13A6	0x8528    	LDD        R18, Y+8
0x13A8	0x8509    	LDD        R16, Y+9
0x13AA	0x8709    	STD        Y+9, R16
0x13AC	0x850A    	LDD        R16, Y+10
0x13AE	0x851B    	LDD        R17, Y+11
0x13B0	0x870A    	STD        Y+10, R16
0x13B2	0x871B    	STD        Y+11, R17
0x13B4	0x850C    	LDD        R16, Y+12
0x13B6	0x851D    	LDD        R17, Y+13
0x13B8	0x870C    	STD        Y+12, R16
0x13BA	0x871D    	STD        Y+13, R17
;st7735.c,535 :: 		signed int i = 0x0000;
;st7735.c,536 :: 		signed int xmin = 0x0000;
;st7735.c,537 :: 		signed int xmax = 0x0000;
;st7735.c,538 :: 		signed int ymin = 0x0000;
;st7735.c,539 :: 		signed int ymax = 0x0000;
;st7735.c,541 :: 		switch(fill)
0x13BC	0xC089    	RJMP       L_Draw_Rectangle80
; fill end address is: 18 (R18)
;st7735.c,543 :: 		case YES:
L_Draw_Rectangle82:
;st7735.c,545 :: 		if(x1 < x2)
0x13BE	0x1426    	CP         R2, R6
0x13C0	0x0437    	CPC        R3, R7
0x13C2	0xF43C    	BRGE       L_Draw_Rectangle83
L__Draw_Rectangle339:
;st7735.c,547 :: 		xmin = x1;
; xmin start address is: 16 (R16)
0x13C4	0x0181    	MOVW       R16, R2
;st7735.c,548 :: 		xmax = x2;
; xmax start address is: 21 (R21)
0x13C6	0x2D56    	MOV        R21, R6
0x13C8	0x2D67    	MOV        R22, R7
;st7735.c,549 :: 		}
0x13CA	0x0168    	MOVW       R12, R16
; xmin end address is: 16 (R16)
; xmax end address is: 21 (R21)
0x13CC	0x2F75    	MOV        R23, R21
0x13CE	0x2F86    	MOV        R24, R22
0x13D0	0xC006    	RJMP       L_Draw_Rectangle84
L_Draw_Rectangle83:
;st7735.c,552 :: 		xmin = x2;
; xmin start address is: 16 (R16)
0x13D2	0x0183    	MOVW       R16, R6
;st7735.c,553 :: 		xmax = x1;
; xmax start address is: 21 (R21)
0x13D4	0x2D52    	MOV        R21, R2
0x13D6	0x2D63    	MOV        R22, R3
; xmin end address is: 16 (R16)
; xmax end address is: 21 (R21)
0x13D8	0x0168    	MOVW       R12, R16
0x13DA	0x2F75    	MOV        R23, R21
0x13DC	0x2F86    	MOV        R24, R22
;st7735.c,554 :: 		}
L_Draw_Rectangle84:
;st7735.c,556 :: 		if(y1 < y2)
; xmax start address is: 23 (R23)
; xmin start address is: 12 (R12)
0x13DE	0x1448    	CP         R4, R8
0x13E0	0x0459    	CPC        R5, R9
0x13E2	0xF42C    	BRGE       L_Draw_Rectangle85
L__Draw_Rectangle340:
;st7735.c,558 :: 		ymin = y1;
0x13E4	0x8248    	STD        Y+0, R4
0x13E6	0x8259    	STD        Y+1, R5
;st7735.c,559 :: 		ymax = y2;
0x13E8	0x828A    	STD        Y+2, R8
0x13EA	0x829B    	STD        Y+3, R9
;st7735.c,560 :: 		}
0x13EC	0xC004    	RJMP       L_Draw_Rectangle86
L_Draw_Rectangle85:
;st7735.c,563 :: 		ymin = y2;
0x13EE	0x8288    	STD        Y+0, R8
0x13F0	0x8299    	STD        Y+1, R9
;st7735.c,564 :: 		ymax = y1;
0x13F2	0x824A    	STD        Y+2, R4
0x13F4	0x825B    	STD        Y+3, R5
;st7735.c,565 :: 		}
L_Draw_Rectangle86:
;st7735.c,567 :: 		for(; xmin <= xmax; ++xmin)
0x13F6	0x2F07    	MOV        R16, R23
0x13F8	0x2F18    	MOV        R17, R24
; xmax end address is: 23 (R23)
; xmin end address is: 12 (R12)
L_Draw_Rectangle87:
; xmin start address is: 12 (R12)
; xmax start address is: 16 (R16)
0x13FA	0x150C    	CP         R16, R12
0x13FC	0x051D    	CPC        R17, R13
0x13FE	0xF144    	BRLT       L_Draw_Rectangle88
L__Draw_Rectangle341:
;st7735.c,569 :: 		for(i = ymin; i <= ymax; ++i)
; i start address is: 10 (R10)
0x1400	0x80A8    	LDD        R10, Y+0
0x1402	0x80B9    	LDD        R11, Y+1
; xmax end address is: 16 (R16)
; i end address is: 10 (R10)
; xmin end address is: 12 (R12)
0x1404	0x2F70    	MOV        R23, R16
0x1406	0x2F81    	MOV        R24, R17
0x1408	0x0195    	MOVW       R18, R10
L_Draw_Rectangle90:
; i start address is: 18 (R18)
; xmax start address is: 23 (R23)
; xmin start address is: 12 (R12)
0x140A	0x810A    	LDD        R16, Y+2
0x140C	0x811B    	LDD        R17, Y+3
0x140E	0x1702    	CP         R16, R18
0x1410	0x0713    	CPC        R17, R19
0x1412	0xF0BC    	BRLT       L_Draw_Rectangle91
L__Draw_Rectangle342:
;st7735.c,571 :: 		Draw_Pixel(xmin, i, colour);
0x1414	0x933F    	PUSH       R19
0x1416	0x932F    	PUSH       R18
0x1418	0x925F    	PUSH       R5
0x141A	0x924F    	PUSH       R4
0x141C	0x923F    	PUSH       R3
0x141E	0x922F    	PUSH       R2
0x1420	0x844A    	LDD        R4, Y+10
0x1422	0x845B    	LDD        R5, Y+11
0x1424	0x2E32    	MOV        R3, R18
0x1426	0x2C2C    	MOV        R2, R12
0x1428	0xD942    	RCALL      _Draw_Pixel+0
0x142A	0x902F    	POP        R2
0x142C	0x903F    	POP        R3
0x142E	0x904F    	POP        R4
0x1430	0x905F    	POP        R5
0x1432	0x912F    	POP        R18
0x1434	0x913F    	POP        R19
;st7735.c,569 :: 		for(i = ymin; i <= ymax; ++i)
0x1436	0x0189    	MOVW       R16, R18
0x1438	0x5F0F    	SUBI       R16, 255
0x143A	0x4F1F    	SBCI       R17, 255
; i end address is: 18 (R18)
; i start address is: 10 (R10)
0x143C	0x0158    	MOVW       R10, R16
;st7735.c,572 :: 		}
; i end address is: 10 (R10)
0x143E	0x0195    	MOVW       R18, R10
0x1440	0xCFE4    	RJMP       L_Draw_Rectangle90
L_Draw_Rectangle91:
;st7735.c,567 :: 		for(; xmin <= xmax; ++xmin)
0x1442	0x0186    	MOVW       R16, R12
0x1444	0x5F0F    	SUBI       R16, 255
0x1446	0x4F1F    	SBCI       R17, 255
0x1448	0x0168    	MOVW       R12, R16
;st7735.c,573 :: 		}
0x144A	0x2F07    	MOV        R16, R23
0x144C	0x2F18    	MOV        R17, R24
; xmax end address is: 23 (R23)
; xmin end address is: 12 (R12)
0x144E	0xCFD5    	RJMP       L_Draw_Rectangle87
L_Draw_Rectangle88:
;st7735.c,575 :: 		break;
0x1450	0xC043    	RJMP       L_Draw_Rectangle81
;st7735.c,577 :: 		default:
L_Draw_Rectangle93:
;st7735.c,579 :: 		Draw_V_Line(x1, y1, y2, colour);
0x1452	0x929F    	PUSH       R9
0x1454	0x928F    	PUSH       R8
0x1456	0x927F    	PUSH       R7
0x1458	0x926F    	PUSH       R6
0x145A	0x0134    	MOVW       R6, R8
0x145C	0x848A    	LDD        R8, Y+10
0x145E	0x849B    	LDD        R9, Y+11
0x1460	0xD93F    	RCALL      _Draw_V_Line+0
0x1462	0x906F    	POP        R6
0x1464	0x907F    	POP        R7
0x1466	0x908F    	POP        R8
0x1468	0x909F    	POP        R9
;st7735.c,580 :: 		Draw_V_Line(x2, y1, y2, colour);
0x146A	0x929F    	PUSH       R9
0x146C	0x928F    	PUSH       R8
0x146E	0x927F    	PUSH       R7
0x1470	0x926F    	PUSH       R6
0x1472	0x923F    	PUSH       R3
0x1474	0x922F    	PUSH       R2
0x1476	0x0113    	MOVW       R2, R6
0x1478	0x0134    	MOVW       R6, R8
0x147A	0x848A    	LDD        R8, Y+10
0x147C	0x849B    	LDD        R9, Y+11
0x147E	0xD930    	RCALL      _Draw_V_Line+0
0x1480	0x902F    	POP        R2
0x1482	0x903F    	POP        R3
0x1484	0x906F    	POP        R6
0x1486	0x907F    	POP        R7
;st7735.c,581 :: 		Draw_H_Line(x1, x2, y1, colour);
0x1488	0x927F    	PUSH       R7
0x148A	0x926F    	PUSH       R6
0x148C	0x925F    	PUSH       R5
0x148E	0x924F    	PUSH       R4
0x1490	0x927F    	PUSH       R7
0x1492	0x926F    	PUSH       R6
0x1494	0x848A    	LDD        R8, Y+10
0x1496	0x849B    	LDD        R9, Y+11
0x1498	0x0132    	MOVW       R6, R4
0x149A	0x904F    	POP        R4
0x149C	0x905F    	POP        R5
0x149E	0xD867    	RCALL      _Draw_H_Line+0
0x14A0	0x904F    	POP        R4
0x14A2	0x905F    	POP        R5
0x14A4	0x906F    	POP        R6
0x14A6	0x907F    	POP        R7
0x14A8	0x908F    	POP        R8
0x14AA	0x909F    	POP        R9
;st7735.c,582 :: 		Draw_H_Line(x1, x2, y2, colour);
0x14AC	0x929F    	PUSH       R9
0x14AE	0x928F    	PUSH       R8
0x14B0	0x927F    	PUSH       R7
0x14B2	0x926F    	PUSH       R6
0x14B4	0x925F    	PUSH       R5
0x14B6	0x924F    	PUSH       R4
0x14B8	0x0123    	MOVW       R4, R6
0x14BA	0x0134    	MOVW       R6, R8
0x14BC	0x848A    	LDD        R8, Y+10
0x14BE	0x849B    	LDD        R9, Y+11
0x14C0	0xD856    	RCALL      _Draw_H_Line+0
0x14C2	0x904F    	POP        R4
0x14C4	0x905F    	POP        R5
0x14C6	0x906F    	POP        R6
0x14C8	0x907F    	POP        R7
0x14CA	0x908F    	POP        R8
0x14CC	0x909F    	POP        R9
;st7735.c,583 :: 		break;
0x14CE	0xC004    	RJMP       L_Draw_Rectangle81
;st7735.c,585 :: 		}
L_Draw_Rectangle80:
; fill start address is: 18 (R18)
0x14D0	0x3021    	CPI        R18, 1
0x14D2	0xF409    	BRNE       L__Draw_Rectangle343
0x14D4	0xCF74    	RJMP       L_Draw_Rectangle82
L__Draw_Rectangle343:
; fill end address is: 18 (R18)
0x14D6	0xCFBD    	RJMP       L_Draw_Rectangle93
L_Draw_Rectangle81:
;st7735.c,587 :: 		if(type != SQUARE)
0x14D8	0x8509    	LDD        R16, Y+9
0x14DA	0x3000    	CPI        R16, 0
0x14DC	0xF131    	BREQ       L_Draw_Rectangle94
L__Draw_Rectangle344:
;st7735.c,589 :: 		Draw_Pixel(x1, y1, back_colour);
0x14DE	0x925F    	PUSH       R5
0x14E0	0x924F    	PUSH       R4
0x14E2	0x923F    	PUSH       R3
0x14E4	0x922F    	PUSH       R2
0x14E6	0x2C34    	MOV        R3, R4
0x14E8	0x844C    	LDD        R4, Y+12
0x14EA	0x845D    	LDD        R5, Y+13
0x14EC	0xD8E0    	RCALL      _Draw_Pixel+0
0x14EE	0x902F    	POP        R2
0x14F0	0x903F    	POP        R3
;st7735.c,590 :: 		Draw_Pixel(x1, y2, back_colour);
0x14F2	0x923F    	PUSH       R3
0x14F4	0x922F    	PUSH       R2
0x14F6	0x844C    	LDD        R4, Y+12
0x14F8	0x845D    	LDD        R5, Y+13
0x14FA	0x2C38    	MOV        R3, R8
0x14FC	0xD8D8    	RCALL      _Draw_Pixel+0
0x14FE	0x902F    	POP        R2
0x1500	0x903F    	POP        R3
0x1502	0x904F    	POP        R4
0x1504	0x905F    	POP        R5
;st7735.c,591 :: 		Draw_Pixel(x2, y1, back_colour);
0x1506	0x925F    	PUSH       R5
0x1508	0x924F    	PUSH       R4
0x150A	0x923F    	PUSH       R3
0x150C	0x922F    	PUSH       R2
0x150E	0x2C34    	MOV        R3, R4
0x1510	0x844C    	LDD        R4, Y+12
0x1512	0x845D    	LDD        R5, Y+13
0x1514	0x2C26    	MOV        R2, R6
0x1516	0xD8CB    	RCALL      _Draw_Pixel+0
;st7735.c,592 :: 		Draw_Pixel(x2, y2, back_colour);
0x1518	0x844C    	LDD        R4, Y+12
0x151A	0x845D    	LDD        R5, Y+13
0x151C	0x2C38    	MOV        R3, R8
0x151E	0x2C26    	MOV        R2, R6
0x1520	0xD8C6    	RCALL      _Draw_Pixel+0
0x1522	0x902F    	POP        R2
0x1524	0x903F    	POP        R3
0x1526	0x904F    	POP        R4
0x1528	0x905F    	POP        R5
;st7735.c,593 :: 		}
L_Draw_Rectangle94:
;st7735.c,594 :: 		}
L_end_Draw_Rectangle:
0x152A	0x9623    	ADIW       R28, 3
0x152C	0xBFCD    	OUT        SPL+0, R28
0x152E	0xBFDE    	OUT        SPL+1, R29
0x1530	0x91DF    	POP        R29
0x1532	0x91CF    	POP        R28
0x1534	0x9508    	RET
; end of _Draw_Rectangle
_Draw_Pixel:
;st7735.c,291 :: 		void Draw_Pixel(unsigned char x_pos, unsigned char y_pos, unsigned int colour)
;st7735.c,293 :: 		unsigned int col = Swap_Colour(colour);
0x06AE	0x922F    	PUSH       R2
0x06B0	0x923F    	PUSH       R3
0x06B2	0x924F    	PUSH       R4
0x06B4	0x925F    	PUSH       R5
0x06B6	0x923F    	PUSH       R3
0x06B8	0x922F    	PUSH       R2
0x06BA	0x0112    	MOVW       R2, R4
0x06BC	0xD572    	RCALL      _Swap_Colour+0
0x06BE	0x902F    	POP        R2
0x06C0	0x903F    	POP        R3
; col start address is: 18 (R18)
0x06C2	0x0198    	MOVW       R18, R16
;st7735.c,294 :: 		TFT_set_display_window(x_pos, y_pos, (1 + x_pos), (1 + y_pos));
0x06C4	0x2D13    	MOV        R17, R3
0x06C6	0x5F1F    	SUBI       R17, 255
0x06C8	0x2D02    	MOV        R16, R2
0x06CA	0x5F0F    	SUBI       R16, 255
0x06CC	0x2E51    	MOV        R5, R17
0x06CE	0x2E40    	MOV        R4, R16
0x06D0	0xD112    	RCALL      _TFT_set_display_window+0
;st7735.c,295 :: 		TFT_write_word(col);
0x06D2	0x0119    	MOVW       R2, R18
; col end address is: 18 (R18)
0x06D4	0xD156    	RCALL      _TFT_write_word+0
;st7735.c,296 :: 		}
L_end_Draw_Pixel:
0x06D6	0x905F    	POP        R5
0x06D8	0x904F    	POP        R4
0x06DA	0x903F    	POP        R3
0x06DC	0x902F    	POP        R2
0x06DE	0x9508    	RET
; end of _Draw_Pixel
_Draw_V_Line:
0x06E0	0x93CF    	PUSH       R28
0x06E2	0x93DF    	PUSH       R29
0x06E4	0xB7CD    	IN         R28, SPL+0
0x06E6	0xB7DE    	IN         R29, SPL+1
0x06E8	0x9724    	SBIW       R28, 4
0x06EA	0xBFCD    	OUT        SPL+0, R28
0x06EC	0xBFDE    	OUT        SPL+1, R29
0x06EE	0x9621    	ADIW       R28, 1
;st7735.c,376 :: 		void Draw_V_Line(signed int x1, signed int y1, signed int y2, unsigned colour)
0x06F0	0x924F    	PUSH       R4
0x06F2	0x925F    	PUSH       R5
0x06F4	0x8268    	STD        Y+0, R6
0x06F6	0x8279    	STD        Y+1, R7
0x06F8	0x824A    	STD        Y+2, R4
0x06FA	0x825B    	STD        Y+3, R5
;st7735.c,378 :: 		signed int pos = 0;
;st7735.c,379 :: 		signed int temp = 0;
;st7735.c,381 :: 		if(y1 > y2)
0x06FC	0x812A    	LDD        R18, Y+2
0x06FE	0x813B    	LDD        R19, Y+3
0x0700	0x8108    	LDD        R16, Y+0
0x0702	0x8119    	LDD        R17, Y+1
0x0704	0x1702    	CP         R16, R18
0x0706	0x0713    	CPC        R17, R19
0x0708	0xF45C    	BRGE       L_Draw_V_Line50
L__Draw_V_Line318:
;st7735.c,383 :: 		swap(&y1, &y2);
0x070A	0x019E    	MOVW       R18, R28
0x070C	0x018E    	MOVW       R16, R28
0x070E	0x5F0E    	SUBI       R16, 254
0x0710	0x4F1F    	SBCI       R17, 255
0x0712	0x923F    	PUSH       R3
0x0714	0x922F    	PUSH       R2
0x0716	0x0129    	MOVW       R4, R18
0x0718	0x0118    	MOVW       R2, R16
0x071A	0xDEB9    	RCALL      _swap+0
0x071C	0x902F    	POP        R2
0x071E	0x903F    	POP        R3
;st7735.c,384 :: 		}
L_Draw_V_Line50:
;st7735.c,386 :: 		while(y2 > (y1 - 1))
L_Draw_V_Line51:
0x0720	0x812A    	LDD        R18, Y+2
0x0722	0x813B    	LDD        R19, Y+3
0x0724	0x5021    	SUBI       R18, 1
0x0726	0x4030    	SBCI       R19, 0
0x0728	0x8108    	LDD        R16, Y+0
0x072A	0x8119    	LDD        R17, Y+1
0x072C	0x1720    	CP         R18, R16
0x072E	0x0731    	CPC        R19, R17
0x0730	0xF494    	BRGE       L_Draw_V_Line52
L__Draw_V_Line319:
;st7735.c,388 :: 		Draw_Pixel(x1, y2, colour);
0x0732	0x925F    	PUSH       R5
0x0734	0x924F    	PUSH       R4
0x0736	0x923F    	PUSH       R3
0x0738	0x922F    	PUSH       R2
0x073A	0x0124    	MOVW       R4, R8
0x073C	0x8038    	LDD        R3, Y+0
0x073E	0xDFB7    	RCALL      _Draw_Pixel+0
0x0740	0x902F    	POP        R2
0x0742	0x903F    	POP        R3
0x0744	0x904F    	POP        R4
0x0746	0x905F    	POP        R5
;st7735.c,389 :: 		y2--;
0x0748	0x8108    	LDD        R16, Y+0
0x074A	0x8119    	LDD        R17, Y+1
0x074C	0x5001    	SUBI       R16, 1
0x074E	0x4010    	SBCI       R17, 0
0x0750	0x8308    	STD        Y+0, R16
0x0752	0x8319    	STD        Y+1, R17
;st7735.c,390 :: 		}
0x0754	0xCFE5    	RJMP       L_Draw_V_Line51
L_Draw_V_Line52:
;st7735.c,391 :: 		}
L_end_Draw_V_Line:
0x0756	0x905F    	POP        R5
0x0758	0x904F    	POP        R4
0x075A	0x9623    	ADIW       R28, 3
0x075C	0xBFCD    	OUT        SPL+0, R28
0x075E	0xBFDE    	OUT        SPL+1, R29
0x0760	0x91DF    	POP        R29
0x0762	0x91CF    	POP        R28
0x0764	0x9508    	RET
; end of _Draw_V_Line
_swap:
;st7735.c,4 :: 		void swap(signed int *a, signed int *b)
;st7735.c,6 :: 		signed int temp = 0x0000;
;st7735.c,8 :: 		temp = *b;
0x048E	0x01F2    	MOVW       R30, R4
0x0490	0x9101    	LD         R16, Z+
0x0492	0x9111    	LD         R17, Z+
; temp start address is: 18 (R18)
0x0494	0x0198    	MOVW       R18, R16
;st7735.c,9 :: 		*b = *a;
0x0496	0x01F1    	MOVW       R30, R2
0x0498	0x9101    	LD         R16, Z+
0x049A	0x9111    	LD         R17, Z+
0x049C	0x01F2    	MOVW       R30, R4
0x049E	0x9301    	ST         Z+, R16
0x04A0	0x9311    	ST         Z+, R17
;st7735.c,10 :: 		*a = temp;
0x04A2	0x01F1    	MOVW       R30, R2
0x04A4	0x9321    	ST         Z+, R18
0x04A6	0x9331    	ST         Z+, R19
; temp end address is: 18 (R18)
;st7735.c,11 :: 		}
L_end_swap:
0x04A8	0x9508    	RET
; end of _swap
_Draw_H_Line:
0x056E	0x93CF    	PUSH       R28
0x0570	0x93DF    	PUSH       R29
0x0572	0xB7CD    	IN         R28, SPL+0
0x0574	0xB7DE    	IN         R29, SPL+1
0x0576	0x9724    	SBIW       R28, 4
0x0578	0xBFCD    	OUT        SPL+0, R28
0x057A	0xBFDE    	OUT        SPL+1, R29
0x057C	0x9621    	ADIW       R28, 1
;st7735.c,394 :: 		void Draw_H_Line(signed int x1, signed int x2, signed int y1, unsigned colour)
0x057E	0x922F    	PUSH       R2
0x0580	0x923F    	PUSH       R3
0x0582	0x924F    	PUSH       R4
0x0584	0x925F    	PUSH       R5
0x0586	0x8248    	STD        Y+0, R4
0x0588	0x8259    	STD        Y+1, R5
0x058A	0x822A    	STD        Y+2, R2
0x058C	0x823B    	STD        Y+3, R3
;st7735.c,396 :: 		signed int pos = 0;
;st7735.c,397 :: 		signed int temp = 0;
;st7735.c,399 :: 		if(x1 > x2)
0x058E	0x812A    	LDD        R18, Y+2
0x0590	0x813B    	LDD        R19, Y+3
0x0592	0x8108    	LDD        R16, Y+0
0x0594	0x8119    	LDD        R17, Y+1
0x0596	0x1702    	CP         R16, R18
0x0598	0x0713    	CPC        R17, R19
0x059A	0xF43C    	BRGE       L_Draw_H_Line53
L__Draw_H_Line321:
;st7735.c,401 :: 		swap(&x1, &x2);
0x059C	0x019E    	MOVW       R18, R28
0x059E	0x018E    	MOVW       R16, R28
0x05A0	0x5F0E    	SUBI       R16, 254
0x05A2	0x4F1F    	SBCI       R17, 255
0x05A4	0x0129    	MOVW       R4, R18
0x05A6	0x0118    	MOVW       R2, R16
0x05A8	0xDF72    	RCALL      _swap+0
;st7735.c,402 :: 		}
L_Draw_H_Line53:
;st7735.c,404 :: 		while(x2 > (x1 - 1))
L_Draw_H_Line54:
0x05AA	0x812A    	LDD        R18, Y+2
0x05AC	0x813B    	LDD        R19, Y+3
0x05AE	0x5021    	SUBI       R18, 1
0x05B0	0x4030    	SBCI       R19, 0
0x05B2	0x8108    	LDD        R16, Y+0
0x05B4	0x8119    	LDD        R17, Y+1
0x05B6	0x1720    	CP         R18, R16
0x05B8	0x0731    	CPC        R19, R17
0x05BA	0xF49C    	BRGE       L_Draw_H_Line55
L__Draw_H_Line322:
;st7735.c,406 :: 		Draw_Pixel(x2, y1, colour);
0x05BC	0x925F    	PUSH       R5
0x05BE	0x924F    	PUSH       R4
0x05C0	0x923F    	PUSH       R3
0x05C2	0x922F    	PUSH       R2
0x05C4	0x0124    	MOVW       R4, R8
0x05C6	0x2C36    	MOV        R3, R6
0x05C8	0x8028    	LDD        R2, Y+0
0x05CA	0xD071    	RCALL      _Draw_Pixel+0
0x05CC	0x902F    	POP        R2
0x05CE	0x903F    	POP        R3
0x05D0	0x904F    	POP        R4
0x05D2	0x905F    	POP        R5
;st7735.c,407 :: 		x2--;
0x05D4	0x8108    	LDD        R16, Y+0
0x05D6	0x8119    	LDD        R17, Y+1
0x05D8	0x5001    	SUBI       R16, 1
0x05DA	0x4010    	SBCI       R17, 0
0x05DC	0x8308    	STD        Y+0, R16
0x05DE	0x8319    	STD        Y+1, R17
;st7735.c,408 :: 		}
0x05E0	0xCFE4    	RJMP       L_Draw_H_Line54
L_Draw_H_Line55:
;st7735.c,409 :: 		}
L_end_Draw_H_Line:
0x05E2	0x905F    	POP        R5
0x05E4	0x904F    	POP        R4
0x05E6	0x903F    	POP        R3
0x05E8	0x902F    	POP        R2
0x05EA	0x9623    	ADIW       R28, 3
0x05EC	0xBFCD    	OUT        SPL+0, R28
0x05EE	0xBFDE    	OUT        SPL+1, R29
0x05F0	0x91DF    	POP        R29
0x05F2	0x91CF    	POP        R28
0x05F4	0x9508    	RET
; end of _Draw_H_Line
_print_symbol:
0x12B2	0x93CF    	PUSH       R28
0x12B4	0x93DF    	PUSH       R29
0x12B6	0xB7CD    	IN         R28, SPL+0
0x12B8	0xB7DE    	IN         R29, SPL+1
0x12BA	0x9625    	ADIW       R28, 5
;comms_demo.c,222 :: 		void print_symbol(unsigned int x_pos, unsigned int y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, char ch)
; back_colour start address is: 17 (R17)
0x12BC	0x8118    	LDD        R17, Y+0
0x12BE	0x8129    	LDD        R18, Y+1
;comms_demo.c,224 :: 		unsigned char i = 0x00;
;comms_demo.c,225 :: 		unsigned char j = 0x00;
;comms_demo.c,226 :: 		unsigned char value = 0x00;
;comms_demo.c,228 :: 		if(font_size <= 0)
0x12C0	0xE000    	LDI        R16, 0
0x12C2	0x1506    	CP         R16, R6
0x12C4	0xF010    	BRLO       L_print_symbol225
L__print_symbol473:
;comms_demo.c,230 :: 		font_size = 1;
0x12C6	0xE0B1    	LDI        R27, 1
0x12C8	0x2E6B    	MOV        R6, R27
;comms_demo.c,231 :: 		}
L_print_symbol225:
;comms_demo.c,233 :: 		if(x_pos < font_size)
0x12CA	0x1426    	CP         R2, R6
0x12CC	0xE0B0    	LDI        R27, 0
0x12CE	0x063B    	CPC        R3, R27
0x12D0	0xF418    	BRSH       L_print_symbol226
L__print_symbol474:
;comms_demo.c,235 :: 		x_pos = font_size;
0x12D2	0x2C26    	MOV        R2, R6
0x12D4	0xE0B0    	LDI        R27, 0
0x12D6	0x2E3B    	MOV        R3, R27
;comms_demo.c,236 :: 		}
L_print_symbol226:
;comms_demo.c,238 :: 		for(i = 0x00; i < 0x05; i++)
; i start address is: 22 (R22)
0x12D8	0xE060    	LDI        R22, 0
; back_colour end address is: 17 (R17)
; i end address is: 22 (R22)
0x12DA	0x2F41    	MOV        R20, R17
0x12DC	0x2F52    	MOV        R21, R18
L_print_symbol227:
; i start address is: 22 (R22)
; back_colour start address is: 20 (R20)
0x12DE	0x3065    	CPI        R22, 5
0x12E0	0xF008    	BRLO       L__print_symbol475
0x12E2	0xC056    	RJMP       L_print_symbol228
L__print_symbol475:
;comms_demo.c,240 :: 		for(j = 0x00; j < 0x08; j++)
; j start address is: 23 (R23)
0x12E4	0xE070    	LDI        R23, 0
; back_colour end address is: 20 (R20)
; j end address is: 23 (R23)
; i end address is: 22 (R22)
L_print_symbol230:
; j start address is: 23 (R23)
; back_colour start address is: 20 (R20)
; i start address is: 22 (R22)
0x12E6	0x3078    	CPI        R23, 8
0x12E8	0xF008    	BRLO       L__print_symbol476
0x12EA	0xC03C    	RJMP       L_print_symbol231
L__print_symbol476:
;comms_demo.c,243 :: 		value = ((symbol[((unsigned char)ch)][i]));
0x12EC	0x935F    	PUSH       R21
0x12EE	0x934F    	PUSH       R20
0x12F0	0xE005    	LDI        R16, 5
0x12F2	0xE010    	LDI        R17, 0
0x12F4	0x2D49    	MOV        R20, R9
0x12F6	0xE050    	LDI        R21, 0
0x12F8	0xD87F    	RCALL      _HWMul_16x16+0
0x12FA	0x914F    	POP        R20
0x12FC	0x915F    	POP        R21
0x12FE	0xE928    	LDI        R18, lo_addr(_symbol+0)
0x1300	0xE330    	LDI        R19, hi_addr(_symbol+0)
0x1302	0x0F02    	ADD        R16, R18
0x1304	0x1F13    	ADC        R17, R19
0x1306	0x2FE6    	MOV        R30, R22
0x1308	0xE0F0    	LDI        R31, 0
0x130A	0x0FE0    	ADD        R30, R16
0x130C	0x1FF1    	ADC        R31, R17
0x130E	0x9104    	LPM        R16, Z
;comms_demo.c,245 :: 		if(((value >> j) & 0x01) != 0x00)
0x1310	0x2FB7    	MOV        R27, R23
0x1312	0x23BB    	TST        R27
0x1314	0xF019    	BREQ       L__print_symbol478
L__print_symbol477:
0x1316	0x9506    	LSR        R16
0x1318	0x95BA    	DEC        R27
0x131A	0xF7E9    	BRNE       L__print_symbol477
L__print_symbol478:
0x131C	0x7001    	ANDI       R16, 1
0x131E	0x3000    	CPI        R16, 0
0x1320	0xF069    	BREQ       L_print_symbol233
L__print_symbol479:
;comms_demo.c,247 :: 		Draw_Font_Pixel(x_pos, y_pos, colour, font_size);
0x1322	0x925F    	PUSH       R5
0x1324	0x924F    	PUSH       R4
0x1326	0x923F    	PUSH       R3
0x1328	0x922F    	PUSH       R2
0x132A	0x2C34    	MOV        R3, R4
0x132C	0x2C47    	MOV        R4, R7
0x132E	0x2C58    	MOV        R5, R8
0x1330	0xD81A    	RCALL      _Draw_Font_Pixel+0
0x1332	0x902F    	POP        R2
0x1334	0x903F    	POP        R3
0x1336	0x904F    	POP        R4
0x1338	0x905F    	POP        R5
;comms_demo.c,248 :: 		}
0x133A	0xC00B    	RJMP       L_print_symbol234
L_print_symbol233:
;comms_demo.c,251 :: 		Draw_Font_Pixel(x_pos, y_pos, back_colour, font_size);
0x133C	0x925F    	PUSH       R5
0x133E	0x924F    	PUSH       R4
0x1340	0x923F    	PUSH       R3
0x1342	0x922F    	PUSH       R2
0x1344	0x2C34    	MOV        R3, R4
0x1346	0x012A    	MOVW       R4, R20
0x1348	0xD80E    	RCALL      _Draw_Font_Pixel+0
0x134A	0x902F    	POP        R2
0x134C	0x903F    	POP        R3
0x134E	0x904F    	POP        R4
0x1350	0x905F    	POP        R5
;comms_demo.c,252 :: 		}
L_print_symbol234:
;comms_demo.c,254 :: 		y_pos += font_size;
0x1352	0x2D06    	MOV        R16, R6
0x1354	0xE010    	LDI        R17, 0
0x1356	0x0D04    	ADD        R16, R4
0x1358	0x1D15    	ADC        R17, R5
0x135A	0x0128    	MOVW       R4, R16
;comms_demo.c,240 :: 		for(j = 0x00; j < 0x08; j++)
0x135C	0x2F07    	MOV        R16, R23
0x135E	0x5F0F    	SUBI       R16, 255
0x1360	0x2F70    	MOV        R23, R16
;comms_demo.c,255 :: 		}
; j end address is: 23 (R23)
0x1362	0xCFC1    	RJMP       L_print_symbol230
L_print_symbol231:
;comms_demo.c,257 :: 		y_pos -= (font_size << 0x03);
0x1364	0x2D06    	MOV        R16, R6
0x1366	0xE010    	LDI        R17, 0
0x1368	0x0F00    	LSL        R16
0x136A	0x1F11    	ROL        R17
0x136C	0x0F00    	LSL        R16
0x136E	0x1F11    	ROL        R17
0x1370	0x0F00    	LSL        R16
0x1372	0x1F11    	ROL        R17
0x1374	0x0108    	MOVW       R0, R16
0x1376	0x0182    	MOVW       R16, R4
0x1378	0x1900    	SUB        R16, R0
0x137A	0x0911    	SBC        R17, R1
0x137C	0x0128    	MOVW       R4, R16
;comms_demo.c,258 :: 		x_pos += font_size;
0x137E	0x2D06    	MOV        R16, R6
0x1380	0xE010    	LDI        R17, 0
0x1382	0x0D02    	ADD        R16, R2
0x1384	0x1D13    	ADC        R17, R3
0x1386	0x0118    	MOVW       R2, R16
;comms_demo.c,238 :: 		for(i = 0x00; i < 0x05; i++)
0x1388	0x2F06    	MOV        R16, R22
0x138A	0x5F0F    	SUBI       R16, 255
0x138C	0x2F60    	MOV        R22, R16
;comms_demo.c,259 :: 		}
; back_colour end address is: 20 (R20)
; i end address is: 22 (R22)
0x138E	0xCFA7    	RJMP       L_print_symbol227
L_print_symbol228:
;comms_demo.c,260 :: 		}
L_end_print_symbol:
0x1390	0x91DF    	POP        R29
0x1392	0x91CF    	POP        R28
0x1394	0x9508    	RET
; end of _print_symbol
___CC2DW:
;__Lib_System.c,25 :: 		
;__Lib_System.c,27 :: 		
L_loopDW:
;__Lib_System.c,28 :: 		
0x1B0C	0x9005    	LPM        R0, Z+
;__Lib_System.c,29 :: 		
0x1B0E	0x920D    	ST         X+, R0
;__Lib_System.c,30 :: 		
0x1B10	0x9701    	SBIW       R24, 1
;__Lib_System.c,31 :: 		
0x1B12	0xF7E1    	BRNE       L_loopDW
;__Lib_System.c,33 :: 		
L_end___CC2DW:
0x1B14	0x9508    	RET
; end of ___CC2DW
_read_uncompensated_temperature:
;bmp180.c,76 :: 		unsigned int read_uncompensated_temperature()
;bmp180.c,78 :: 		unsigned int ut = 0;
0x22C6	0x922F    	PUSH       R2
0x22C8	0x923F    	PUSH       R3
;bmp180.c,80 :: 		BMP180_write(control_reg, temp_conv_cmd);
0x22CA	0xE2BE    	LDI        R27, 46
0x22CC	0x2E3B    	MOV        R3, R27
0x22CE	0xEFB4    	LDI        R27, 244
0x22D0	0x2E2B    	MOV        R2, R27
0x22D2	0xDC8F    	RCALL      _BMP180_write+0
;bmp180.c,81 :: 		delay_ms(5);
0x22D4	0xED10    	LDI        R17, 208
0x22D6	0xEC0A    	LDI        R16, 202
L_read_uncompensated_temperature188:
0x22D8	0x950A    	DEC        R16
0x22DA	0xF7F1    	BRNE       L_read_uncompensated_temperature188
0x22DC	0x951A    	DEC        R17
0x22DE	0xF7E1    	BRNE       L_read_uncompensated_temperature188
0x22E0	0x0000    	NOP
;bmp180.c,82 :: 		ut = BMP180_read_word(MSB);
0x22E2	0xEFB6    	LDI        R27, 246
0x22E4	0x2E2B    	MOV        R2, R27
0x22E6	0x028A940E  	CALL       _BMP180_read_word+0
;bmp180.c,84 :: 		return ut;
;bmp180.c,85 :: 		}
;bmp180.c,84 :: 		return ut;
;bmp180.c,85 :: 		}
L_end_read_uncompensated_temperature:
0x22EA	0x903F    	POP        R3
0x22EC	0x902F    	POP        R2
0x22EE	0x9508    	RET
; end of _read_uncompensated_temperature
_BMP180_write:
;bmp180.c,50 :: 		void BMP180_write(unsigned char address, unsigned char value)
;bmp180.c,52 :: 		TWIC_Start();
0x1BF2	0x922F    	PUSH       R2
0x1BF4	0x0128940E  	CALL       _TWIC_Start+0
;bmp180.c,53 :: 		TWIC_Write(BMP180_Address);
0x1BF8	0x922F    	PUSH       R2
0x1BFA	0xEEBE    	LDI        R27, 238
0x1BFC	0x2E2B    	MOV        R2, R27
0x1BFE	0x010D940E  	CALL       _TWIC_Write+0
0x1C02	0x902F    	POP        R2
;bmp180.c,54 :: 		TWIC_Write(address);
0x1C04	0x010D940E  	CALL       _TWIC_Write+0
;bmp180.c,55 :: 		TWIC_Write(value);
0x1C08	0x2C23    	MOV        R2, R3
0x1C0A	0x010D940E  	CALL       _TWIC_Write+0
;bmp180.c,56 :: 		TWIC_Stop();
0x1C0E	0x013B940E  	CALL       _TWIC_Stop+0
;bmp180.c,57 :: 		}
L_end_BMP180_write:
0x1C12	0x902F    	POP        R2
0x1C14	0x9508    	RET
; end of _BMP180_write
_get_temperature:
;bmp180.c,131 :: 		float get_temperature(unsigned int UT)
;bmp180.c,133 :: 		float tmp = 0;
;bmp180.c,135 :: 		signed long x1 = 0;
;bmp180.c,136 :: 		signed long x2 = 0;
;bmp180.c,138 :: 		x1 = ((((signed long)UT - (signed long)ac6) * (signed long)ac5) >> 15);
0x21FA	0x01A1    	MOVW       R20, R2
0x21FC	0xE060    	LDI        R22, 0
0x21FE	0x2F76    	MOV        R23, R22
0x2200	0x200A9100  	LDS        R16, _ac6+0
0x2204	0x200B9110  	LDS        R17, _ac6+1
0x2208	0xE020    	LDI        R18, 0
0x220A	0x2F32    	MOV        R19, R18
0x220C	0x1B40    	SUB        R20, R16
0x220E	0x0B51    	SBC        R21, R17
0x2210	0x0B62    	SBC        R22, R18
0x2212	0x0B73    	SBC        R23, R19
0x2214	0x20039100  	LDS        R16, _ac5+0
0x2218	0x20049110  	LDS        R17, _ac5+1
0x221C	0xE020    	LDI        R18, 0
0x221E	0x2F32    	MOV        R19, R18
0x2220	0xDC85    	RCALL      _HWMul_32x32+0
0x2222	0xE0BF    	LDI        R27, 15
0x2224	0x01A8    	MOVW       R20, R16
0x2226	0x01B9    	MOVW       R22, R18
L__get_temperature428:
0x2228	0x9575    	ASR        R23
0x222A	0x9567    	ROR        R22
0x222C	0x9557    	ROR        R21
0x222E	0x9547    	ROR        R20
0x2230	0x95BA    	DEC        R27
0x2232	0xF7D1    	BRNE       L__get_temperature428
L__get_temperature429:
; x1 start address is: 8 (R8)
0x2234	0x014A    	MOVW       R8, R20
0x2236	0x015B    	MOVW       R10, R22
;bmp180.c,139 :: 		x2 = (((signed long)mc << 11) / (x1 + md));
0x2238	0x20059100  	LDS        R16, _mc+0
0x223C	0x20069110  	LDS        R17, _mc+1
0x2240	0xE020    	LDI        R18, 0
0x2242	0xFD17    	SBRC       R17, 7
0x2244	0xEF2F    	LDI        R18, 255
0x2246	0x2F32    	MOV        R19, R18
0x2248	0xE0BB    	LDI        R27, 11
0x224A	0x0128    	MOVW       R4, R16
0x224C	0x0139    	MOVW       R6, R18
L__get_temperature430:
0x224E	0x0C44    	LSL        R4
0x2250	0x1C55    	ROL        R5
0x2252	0x1C66    	ROL        R6
0x2254	0x1C77    	ROL        R7
0x2256	0x95BA    	DEC        R27
0x2258	0xF7D1    	BRNE       L__get_temperature430
L__get_temperature431:
0x225A	0x20009100  	LDS        R16, _md+0
0x225E	0x20019110  	LDS        R17, _md+1
0x2262	0x0F40    	ADD        R20, R16
0x2264	0x1F51    	ADC        R21, R17
0x2266	0xE0B0    	LDI        R27, 0
0x2268	0xFD17    	SBRC       R17, 7
0x226A	0xEFBF    	LDI        R27, 255
0x226C	0x1F6B    	ADC        R22, R27
0x226E	0x1F7B    	ADC        R23, R27
0x2270	0x92BF    	PUSH       R11
0x2272	0x92AF    	PUSH       R10
0x2274	0x929F    	PUSH       R9
0x2276	0x928F    	PUSH       R8
0x2278	0x0182    	MOVW       R16, R4
0x227A	0x0193    	MOVW       R18, R6
0x227C	0xDC79    	RCALL      _Div_32x32_S+0
0x227E	0x0189    	MOVW       R16, R18
0x2280	0x019A    	MOVW       R18, R20
0x2282	0x908F    	POP        R8
0x2284	0x909F    	POP        R9
0x2286	0x90AF    	POP        R10
0x2288	0x90BF    	POP        R11
;bmp180.c,140 :: 		_b5 = (x1 + x2);
0x228A	0x0D08    	ADD        R16, R8
0x228C	0x1D19    	ADC        R17, R9
0x228E	0x1D2A    	ADC        R18, R10
0x2290	0x1D3B    	ADC        R19, R11
; x1 end address is: 8 (R8)
0x2292	0x20129300  	STS        __b5+0, R16
0x2296	0x20139310  	STS        __b5+1, R17
0x229A	0x20149320  	STS        __b5+2, R18
0x229E	0x20159330  	STS        __b5+3, R19
;bmp180.c,141 :: 		tmp = ((_b5 + 8) >> 4);
0x22A2	0x5F08    	SUBI       R16, 248
0x22A4	0x4F1F    	SBCI       R17, 255
0x22A6	0x4F2F    	SBCI       R18, 255
0x22A8	0x4F3F    	SBCI       R19, 255
0x22AA	0xE0B4    	LDI        R27, 4
L__get_temperature432:
0x22AC	0x9535    	ASR        R19
0x22AE	0x9527    	ROR        R18
0x22B0	0x9517    	ROR        R17
0x22B2	0x9507    	ROR        R16
0x22B4	0x95BA    	DEC        R27
0x22B6	0xF7D1    	BRNE       L__get_temperature432
L__get_temperature433:
0x22B8	0xDC57    	RCALL      _float_slong2fp+0
;bmp180.c,142 :: 		tmp *= 0.1;
0x22BA	0xEC4D    	LDI        R20, 205
0x22BC	0xEC5C    	LDI        R21, 204
0x22BE	0xEC6C    	LDI        R22, 204
0x22C0	0xE37D    	LDI        R23, 61
0x22C2	0xDC29    	RCALL      _float_fpmul1+0
;bmp180.c,144 :: 		return tmp;
;bmp180.c,145 :: 		}
L_end_get_temperature:
0x22C4	0x9508    	RET
; end of _get_temperature
_HWMul_32x32:
;__Lib_Math.c,416 :: 		
;__Lib_Math.c,418 :: 		
0x1B2C	0x9F04    	MUL        R16, R20
;__Lib_Math.c,419 :: 		
0x1B2E	0x01D0    	MOVW       R26, R0
;__Lib_Math.c,420 :: 		
0x1B30	0x9F15    	MUL        R17, R21
;__Lib_Math.c,421 :: 		
0x1B32	0x01F0    	MOVW       R30, R0
;__Lib_Math.c,422 :: 		
0x1B34	0x9F24    	MUL        R18, R20
;__Lib_Math.c,423 :: 		
0x1B36	0x0DE0    	ADD        R30, R0
;__Lib_Math.c,424 :: 		
0x1B38	0x1DF1    	ADC        R31, R1
;__Lib_Math.c,425 :: 		
0x1B3A	0x9F06    	MUL        R16, R22
;__Lib_Math.c,426 :: 		
0x1B3C	0x0DE0    	ADD        R30, R0
;__Lib_Math.c,427 :: 		
0x1B3E	0x1DF1    	ADC        R31, R1
;__Lib_Math.c,428 :: 		
0x1B40	0x9F34    	MUL        R19, R20
;__Lib_Math.c,429 :: 		
0x1B42	0x0DF0    	ADD        R31, R0
;__Lib_Math.c,430 :: 		
0x1B44	0x9F25    	MUL        R18, R21
;__Lib_Math.c,431 :: 		
0x1B46	0x0DF0    	ADD        R31, R0
;__Lib_Math.c,432 :: 		
0x1B48	0x9F16    	MUL        R17, R22
;__Lib_Math.c,433 :: 		
0x1B4A	0x0DF0    	ADD        R31, R0
;__Lib_Math.c,434 :: 		
0x1B4C	0x9F07    	MUL        R16, R23
;__Lib_Math.c,435 :: 		
0x1B4E	0x0DF0    	ADD        R31, R0
;__Lib_Math.c,436 :: 		
0x1B50	0x2733    	EOR        R19, R19
;__Lib_Math.c,437 :: 		
0x1B52	0x9F14    	MUL        R17, R20
;__Lib_Math.c,438 :: 		
0x1B54	0x0DB0    	ADD        R27, R0
;__Lib_Math.c,439 :: 		
0x1B56	0x1DE1    	ADC        R30, R1
;__Lib_Math.c,440 :: 		
0x1B58	0x1FF3    	ADC        R31, R19
;__Lib_Math.c,441 :: 		
0x1B5A	0x9F05    	MUL        R16, R21
;__Lib_Math.c,442 :: 		
0x1B5C	0x0DB0    	ADD        R27, R0
;__Lib_Math.c,443 :: 		
0x1B5E	0x1DE1    	ADC        R30, R1
;__Lib_Math.c,444 :: 		
0x1B60	0x1FF3    	ADC        R31, R19
;__Lib_Math.c,445 :: 		
0x1B62	0x018D    	MOVW       R16, R26
;__Lib_Math.c,446 :: 		
0x1B64	0x019F    	MOVW       R18, R30
;__Lib_Math.c,448 :: 		
L_end_HWMul_32x32:
0x1B66	0x9508    	RET
; end of _HWMul_32x32
_Div_32x32_S:
;__Lib_Math.c,293 :: 		
;__Lib_Math.c,296 :: 		
0x1B70	0x01C9    	MOVW       R24, R18
;__Lib_Math.c,297 :: 		
0x1B72	0x019A    	MOVW       R18, R20
;__Lib_Math.c,298 :: 		
0x1B74	0x01AB    	MOVW       R20, R22
;__Lib_Math.c,299 :: 		
0x1B76	0x01B8    	MOVW       R22, R16
;__Lib_Math.c,301 :: 		
0x1B78	0xFB97    	BST        R25, 7
;__Lib_Math.c,302 :: 		
0x1B7A	0x2E09    	MOV        R0, R25
;__Lib_Math.c,303 :: 		
0x1B7C	0x2605    	EOR        R0, R21
;__Lib_Math.c,304 :: 		
0x1B7E	0xD00E    	RCALL      Div_32x32_S_L3
;__Lib_Math.c,305 :: 		
0x1B80	0xFD57    	SBRC       R21, 7
;__Lib_Math.c,306 :: 		
0x1B82	0xD004    	RCALL      Div_32x32_S_L1
;__Lib_Math.c,307 :: 		
0x1B84	0xD014    	RCALL      Div_32x32_S_L4
;__Lib_Math.c,308 :: 		
0x1B86	0xD00A    	RCALL      Div_32x32_S_L3
;__Lib_Math.c,309 :: 		
0x1B88	0x1C00    	ADC        R0, R0
;__Lib_Math.c,310 :: 		
0x1B8A	0xF438    	BRCC       Div_32x32_S_L2
;__Lib_Math.c,311 :: 		
Div_32x32_S_L1:
;__Lib_Math.c,312 :: 		
0x1B8C	0x9550    	COM        R21
;__Lib_Math.c,313 :: 		
0x1B8E	0x9540    	COM        R20
;__Lib_Math.c,314 :: 		
0x1B90	0x9530    	COM        R19
;__Lib_Math.c,315 :: 		
0x1B92	0x9521    	NEG        R18
;__Lib_Math.c,316 :: 		
0x1B94	0x4F3F    	SBCI       R19, 255
;__Lib_Math.c,317 :: 		
0x1B96	0x4F4F    	SBCI       R20, 255
;__Lib_Math.c,318 :: 		
0x1B98	0x4F5F    	SBCI       R21, 255
;__Lib_Math.c,319 :: 		
Div_32x32_S_L2:
;__Lib_Math.c,320 :: 		
0x1B9A	0x9508    	RET
;__Lib_Math.c,321 :: 		
Div_32x32_S_L3:
;__Lib_Math.c,322 :: 		
0x1B9C	0xF7F6    	BRTC       Div_32x32_S_L2
;__Lib_Math.c,323 :: 		
0x1B9E	0x9590    	COM        R25
;__Lib_Math.c,324 :: 		
0x1BA0	0x9580    	COM        R24
;__Lib_Math.c,325 :: 		
0x1BA2	0x9570    	COM        R23
;__Lib_Math.c,326 :: 		
0x1BA4	0x9561    	NEG        R22
;__Lib_Math.c,327 :: 		
0x1BA6	0x4F7F    	SBCI       R23, 255
;__Lib_Math.c,328 :: 		
0x1BA8	0x4F8F    	SBCI       R24, 255
;__Lib_Math.c,329 :: 		
0x1BAA	0x4F9F    	SBCI       R25, 255
;__Lib_Math.c,330 :: 		
0x1BAC	0x9508    	RET
;__Lib_Math.c,331 :: 		
Div_32x32_S_L4:
;__Lib_Math.c,332 :: 		
0x1BAE	0xE2A1    	LDI        R26, 33
;__Lib_Math.c,333 :: 		
0x1BB0	0x2E1A    	MOV        R1, R26
;__Lib_Math.c,334 :: 		
0x1BB2	0x1BAA    	SUB        R26, R26
;__Lib_Math.c,335 :: 		
0x1BB4	0x1BBB    	SUB        R27, R27
;__Lib_Math.c,336 :: 		
0x1BB6	0x01FD    	MOVW       R30, R26
;__Lib_Math.c,337 :: 		
0x1BB8	0xC00D    	RJMP       Div_32x32_S_L6
;__Lib_Math.c,338 :: 		
Div_32x32_S_L5:
;__Lib_Math.c,339 :: 		
0x1BBA	0x1FAA    	ROL        R26
;__Lib_Math.c,340 :: 		
0x1BBC	0x1FBB    	ROL        R27
;__Lib_Math.c,341 :: 		
0x1BBE	0x1FEE    	ROL        R30
;__Lib_Math.c,342 :: 		
0x1BC0	0x1FFF    	ROL        R31
;__Lib_Math.c,343 :: 		
0x1BC2	0x17A2    	CP         R26, R18
;__Lib_Math.c,344 :: 		
0x1BC4	0x07B3    	CPC        R27, R19
;__Lib_Math.c,345 :: 		
0x1BC6	0x07E4    	CPC        R30, R20
;__Lib_Math.c,346 :: 		
0x1BC8	0x07F5    	CPC        R31, R21
;__Lib_Math.c,347 :: 		
0x1BCA	0xF020    	BRCS       Div_32x32_S_L6
;__Lib_Math.c,348 :: 		
0x1BCC	0x1BA2    	SUB        R26, R18
;__Lib_Math.c,349 :: 		
0x1BCE	0x0BB3    	SBC        R27, R19
;__Lib_Math.c,350 :: 		
0x1BD0	0x0BE4    	SBC        R30, R20
;__Lib_Math.c,351 :: 		
0x1BD2	0x0BF5    	SBC        R31, R21
;__Lib_Math.c,352 :: 		
Div_32x32_S_L6:
;__Lib_Math.c,353 :: 		
0x1BD4	0x1F66    	ROL        R22
;__Lib_Math.c,354 :: 		
0x1BD6	0x1F77    	ROL        R23
;__Lib_Math.c,355 :: 		
0x1BD8	0x1F88    	ROL        R24
;__Lib_Math.c,356 :: 		
0x1BDA	0x1F99    	ROL        R25
;__Lib_Math.c,357 :: 		
0x1BDC	0x941A    	DEC        R1
;__Lib_Math.c,358 :: 		
0x1BDE	0xF769    	BRNE       Div_32x32_S_L5
;__Lib_Math.c,359 :: 		
0x1BE0	0x9560    	COM        R22
;__Lib_Math.c,360 :: 		
0x1BE2	0x9570    	COM        R23
;__Lib_Math.c,361 :: 		
0x1BE4	0x9580    	COM        R24
;__Lib_Math.c,362 :: 		
0x1BE6	0x9590    	COM        R25
;__Lib_Math.c,364 :: 		
0x1BE8	0x019B    	MOVW       R18, R22
;__Lib_Math.c,365 :: 		
0x1BEA	0x01AC    	MOVW       R20, R24
;__Lib_Math.c,366 :: 		
0x1BEC	0x01BD    	MOVW       R22, R26
;__Lib_Math.c,367 :: 		
0x1BEE	0x01CF    	MOVW       R24, R30
;__Lib_Math.c,370 :: 		
L_end_Div_32x32_S:
0x1BF0	0x9508    	RET
; end of _Div_32x32_S
_float_slong2fp:
;__Lib_MathDouble.c,122 :: 		
;__Lib_MathDouble.c,124 :: 		
0x1B68	0x94E8    	BCLR       6
;__Lib_MathDouble.c,126 :: 		
0x1B6A	0x046E940E  	CALL       _float_long2fp+0
;__Lib_MathDouble.c,127 :: 		
L_end_float_slong2fp:
0x1B6E	0x9508    	RET
; end of _float_slong2fp
_float_long2fp:
;__Lib_MathDouble.c,105 :: 		
;__Lib_MathDouble.c,107 :: 		
0x08DC	0xE147    	LDI        R20, 23
;__Lib_MathDouble.c,108 :: 		
0x08DE	0x2766    	CLR        R22
;__Lib_MathDouble.c,109 :: 		
0x08E0	0x2755    	CLR        R21
;__Lib_MathDouble.c,110 :: 		
0x08E2	0xF026    	BRTS       L00FC
;__Lib_MathDouble.c,111 :: 		
0x08E4	0x2333    	TST        R19
;__Lib_MathDouble.c,112 :: 		
0x08E6	0xF412    	BRPL       L00FC
;__Lib_MathDouble.c,114 :: 		
0x08E8	0xDDE0    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,116 :: 		
0x08EA	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,117 :: 		
L00FC:
;__Lib_MathDouble.c,119 :: 		
0x08EC	0xDD8D    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,120 :: 		
L_end_float_long2fp:
0x08EE	0x9508    	RET
; end of _float_long2fp
_float_neg32:
;__Lib_MathDouble.c,4 :: 		
;__Lib_MathDouble.c,6 :: 		
0x04AA	0x9500    	COM        R16
;__Lib_MathDouble.c,7 :: 		
0x04AC	0x9510    	COM        R17
;__Lib_MathDouble.c,8 :: 		
0x04AE	0x9520    	COM        R18
;__Lib_MathDouble.c,9 :: 		
0x04B0	0x9530    	COM        R19
;__Lib_MathDouble.c,10 :: 		
0x04B2	0x5F0F    	SUBI       R16, 255
;__Lib_MathDouble.c,11 :: 		
0x04B4	0x4F1F    	SBCI       R17, 255
;__Lib_MathDouble.c,12 :: 		
0x04B6	0x4F2F    	SBCI       R18, 255
;__Lib_MathDouble.c,13 :: 		
0x04B8	0x4F3F    	SBCI       R19, 255
;__Lib_MathDouble.c,15 :: 		
L_end_float_neg32:
0x04BA	0x9508    	RET
; end of _float_neg32
_float_normalize_and_pack:
;__Lib_MathDouble.c,45 :: 		
;__Lib_MathDouble.c,46 :: 		
0x0408	0xDF44    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,48 :: 		
0x040A	0xF111    	BREQ       L0196
;__Lib_MathDouble.c,49 :: 		
0x040C	0x939F    	PUSH       R25
;__Lib_MathDouble.c,50 :: 		
0x040E	0x938F    	PUSH       R24
;__Lib_MathDouble.c,51 :: 		
0x0410	0xE78E    	LDI        R24, 126
;__Lib_MathDouble.c,52 :: 		
0x0412	0xE090    	LDI        R25, 0
;__Lib_MathDouble.c,53 :: 		
L0178:
;__Lib_MathDouble.c,54 :: 		
0x0414	0x2333    	TST        R19
;__Lib_MathDouble.c,55 :: 		
0x0416	0xF051    	BREQ       L0184
;__Lib_MathDouble.c,56 :: 		
0x0418	0x9536    	LSR        R19
;__Lib_MathDouble.c,57 :: 		
0x041A	0x9527    	ROR        R18
;__Lib_MathDouble.c,58 :: 		
0x041C	0x9517    	ROR        R17
;__Lib_MathDouble.c,59 :: 		
0x041E	0x9507    	ROR        R16
;__Lib_MathDouble.c,60 :: 		
0x0420	0x1748    	CP         R20, R24
;__Lib_MathDouble.c,61 :: 		
0x0422	0x0759    	CPC        R21, R25
;__Lib_MathDouble.c,62 :: 		
0x0424	0xF4B4    	BRGE       L0197
;__Lib_MathDouble.c,63 :: 		
0x0426	0x5F4F    	SUBI       R20, 255
;__Lib_MathDouble.c,64 :: 		
0x0428	0x4F5F    	SBCI       R21, 255
;__Lib_MathDouble.c,65 :: 		
0x042A	0xCFF4    	RJMP       L0178
;__Lib_MathDouble.c,66 :: 		
L0184:
;__Lib_MathDouble.c,67 :: 		
0x042C	0x9580    	COM        R24
;__Lib_MathDouble.c,68 :: 		
0x042E	0x9590    	COM        R25
;__Lib_MathDouble.c,69 :: 		
0x0430	0x9601    	ADIW       R24, 1
;__Lib_MathDouble.c,70 :: 		
L0187:
;__Lib_MathDouble.c,71 :: 		
0x0432	0x2322    	TST        R18
;__Lib_MathDouble.c,72 :: 		
0x0434	0xF09A    	BRMI       L019C
;__Lib_MathDouble.c,73 :: 		
0x0436	0x0F00    	LSL        R16
;__Lib_MathDouble.c,74 :: 		
0x0438	0x1F11    	ROL        R17
;__Lib_MathDouble.c,75 :: 		
0x043A	0x1F22    	ROL        R18
;__Lib_MathDouble.c,76 :: 		
0x043C	0x1748    	CP         R20, R24
;__Lib_MathDouble.c,77 :: 		
0x043E	0x0759    	CPC        R21, R25
;__Lib_MathDouble.c,78 :: 		
0x0440	0xF01C    	BRLT       L0192
;__Lib_MathDouble.c,79 :: 		
0x0442	0x5041    	SUBI       R20, 1
;__Lib_MathDouble.c,80 :: 		
0x0444	0x4050    	SBCI       R21, 0
;__Lib_MathDouble.c,81 :: 		
0x0446	0xCFF5    	RJMP       L0187
;__Lib_MathDouble.c,82 :: 		
L0192:
;__Lib_MathDouble.c,83 :: 		
0x0448	0x2700    	CLR        R16
;__Lib_MathDouble.c,84 :: 		
0x044A	0x2711    	CLR        R17
;__Lib_MathDouble.c,85 :: 		
0x044C	0x2722    	CLR        R18
;__Lib_MathDouble.c,86 :: 		
0x044E	0x2733    	CLR        R19
;__Lib_MathDouble.c,87 :: 		
L0196:
;__Lib_MathDouble.c,88 :: 		
0x0450	0xC008    	RJMP       L0196x
;__Lib_MathDouble.c,89 :: 		
L0197:
;__Lib_MathDouble.c,90 :: 		
0x0452	0x2733    	CLR        R19
;__Lib_MathDouble.c,91 :: 		
0x0454	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,92 :: 		
0x0456	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,93 :: 		
0x0458	0xE72F    	LDI        R18, 127
;__Lib_MathDouble.c,94 :: 		
0x045A	0x2F32    	MOV        R19, R18
;__Lib_MathDouble.c,95 :: 		
L019C:
;__Lib_MathDouble.c,96 :: 		
0x045C	0x918F    	POP        R24
;__Lib_MathDouble.c,97 :: 		
0x045E	0x919F    	POP        R25
;__Lib_MathDouble.c,99 :: 		
0x0460	0xDF0E    	RCALL      _float_pack+0
;__Lib_MathDouble.c,101 :: 		
L0196x:
;__Lib_MathDouble.c,103 :: 		
L_end_float_normalize_and_pack:
0x0462	0x9508    	RET
; end of _float_normalize_and_pack
_float_tstr16_r19:
;__Lib_MathDouble.c,17 :: 		
;__Lib_MathDouble.c,19 :: 		
0x0292	0x2300    	TST        R16
;__Lib_MathDouble.c,20 :: 		
0x0294	0xF429    	BRNE       L015C
;__Lib_MathDouble.c,21 :: 		
0x0296	0x2311    	TST        R17
;__Lib_MathDouble.c,22 :: 		
0x0298	0xF419    	BRNE       L015C
;__Lib_MathDouble.c,23 :: 		
0x029A	0x2322    	TST        R18
;__Lib_MathDouble.c,24 :: 		
0x029C	0xF409    	BRNE       L015C
;__Lib_MathDouble.c,25 :: 		
0x029E	0x2333    	TST        R19
;__Lib_MathDouble.c,26 :: 		
L015C:
;__Lib_MathDouble.c,28 :: 		
L_end_float_tstr16_r19:
0x02A0	0x9508    	RET
; end of _float_tstr16_r19
_float_pack:
;__Lib_MathDouble.c,30 :: 		
;__Lib_MathDouble.c,31 :: 		
0x027E	0xD009    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,33 :: 		
0x0280	0xF039    	BREQ       L01A7
;__Lib_MathDouble.c,34 :: 		
0x0282	0x5841    	SUBI       R20, 129
;__Lib_MathDouble.c,35 :: 		
0x0284	0x4F5F    	SBCI       R21, 255
;__Lib_MathDouble.c,36 :: 		
0x0286	0x2F34    	MOV        R19, R20
;__Lib_MathDouble.c,37 :: 		
0x0288	0x0F22    	LSL        R18
;__Lib_MathDouble.c,38 :: 		
0x028A	0x9536    	LSR        R19
;__Lib_MathDouble.c,39 :: 		
0x028C	0x9527    	ROR        R18
;__Lib_MathDouble.c,40 :: 		
0x028E	0x2B36    	OR         R19, R22
;__Lib_MathDouble.c,41 :: 		
L01A7:
;__Lib_MathDouble.c,43 :: 		
L_end_float_pack:
0x0290	0x9508    	RET
; end of _float_pack
_float_fpmul1:
;__Lib_MathDouble.c,483 :: 		
;__Lib_MathDouble.c,485 :: 		
0x1B16	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,486 :: 		
0x1B18	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,487 :: 		
0x1B1A	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,488 :: 		
0x1B1C	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,490 :: 		
0x1B1E	0x03B6940E  	CALL       _float_fpmul+0
;__Lib_MathDouble.c,492 :: 		
0x1B22	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,493 :: 		
0x1B24	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,494 :: 		
0x1B26	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,495 :: 		
0x1B28	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,497 :: 		
L_end_float_fpmul1:
0x1B2A	0x9508    	RET
; end of _float_fpmul1
_float_fpmul:
;__Lib_MathDouble.c,407 :: 		
;__Lib_MathDouble.c,408 :: 		
0x076C	0xDE7B    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,410 :: 		
0x076E	0xF181    	BREQ       L0097
;__Lib_MathDouble.c,411 :: 		
0x0770	0x2EE6    	MOV        R14, R22
;__Lib_MathDouble.c,412 :: 		
0x0772	0x2ED5    	MOV        R13, R21
;__Lib_MathDouble.c,413 :: 		
0x0774	0x2EC4    	MOV        R12, R20
;__Lib_MathDouble.c,414 :: 		
0x0776	0x2EB3    	MOV        R11, R19
;__Lib_MathDouble.c,415 :: 		
0x0778	0x2EA2    	MOV        R10, R18
;__Lib_MathDouble.c,416 :: 		
0x077A	0x2E91    	MOV        R9, R17
;__Lib_MathDouble.c,417 :: 		
0x077C	0x2E80    	MOV        R8, R16
;__Lib_MathDouble.c,418 :: 		
0x077E	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,419 :: 		
0x0780	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,420 :: 		
0x0782	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,421 :: 		
0x0784	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,423 :: 		
0x0786	0xDE6E    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,425 :: 		
0x0788	0xF119    	BREQ       L0097
;__Lib_MathDouble.c,426 :: 		
0x078A	0x256E    	EOR        R22, R14
;__Lib_MathDouble.c,427 :: 		
0x078C	0x0D4C    	ADD        R20, R12
;__Lib_MathDouble.c,428 :: 		
0x078E	0x1D5D    	ADC        R21, R13
;__Lib_MathDouble.c,429 :: 		
0x0790	0x3840    	CPI        R20, 128
;__Lib_MathDouble.c,430 :: 		
0x0792	0x0753    	CPC        R21, R19
;__Lib_MathDouble.c,431 :: 		
0x0794	0xF4F4    	BRGE       L009B
;__Lib_MathDouble.c,432 :: 		
0x0796	0x3841    	CPI        R20, 129
;__Lib_MathDouble.c,433 :: 		
0x0798	0xEF7F    	LDI        R23, 255
;__Lib_MathDouble.c,434 :: 		
0x079A	0x0757    	CPC        R21, R23
;__Lib_MathDouble.c,435 :: 		
0x079C	0xF0FC    	BRLT       L00A0mul
;__Lib_MathDouble.c,436 :: 		
0x079E	0x2788    	CLR        R24
;__Lib_MathDouble.c,437 :: 		
0x07A0	0x2799    	CLR        R25
;__Lib_MathDouble.c,438 :: 		
0x07A2	0x27AA    	CLR        R26
;__Lib_MathDouble.c,439 :: 		
0x07A4	0x27BB    	CLR        R27
;__Lib_MathDouble.c,440 :: 		
0x07A6	0xE270    	LDI        R23, 32
;__Lib_MathDouble.c,441 :: 		
L0083:
;__Lib_MathDouble.c,442 :: 		
0x07A8	0x95B6    	LSR        R27
;__Lib_MathDouble.c,443 :: 		
0x07AA	0x95A7    	ROR        R26
;__Lib_MathDouble.c,444 :: 		
0x07AC	0x9597    	ROR        R25
;__Lib_MathDouble.c,445 :: 		
0x07AE	0x9587    	ROR        R24
;__Lib_MathDouble.c,446 :: 		
0x07B0	0x9537    	ROR        R19
;__Lib_MathDouble.c,447 :: 		
0x07B2	0x9527    	ROR        R18
;__Lib_MathDouble.c,448 :: 		
0x07B4	0x9517    	ROR        R17
;__Lib_MathDouble.c,449 :: 		
0x07B6	0x9507    	ROR        R16
;__Lib_MathDouble.c,450 :: 		
0x07B8	0xF420    	BRCC       L0090
;__Lib_MathDouble.c,451 :: 		
0x07BA	0x0D88    	ADD        R24, R8
;__Lib_MathDouble.c,452 :: 		
0x07BC	0x1D99    	ADC        R25, R9
;__Lib_MathDouble.c,453 :: 		
0x07BE	0x1DAA    	ADC        R26, R10
;__Lib_MathDouble.c,454 :: 		
0x07C0	0x1DBB    	ADC        R27, R11
;__Lib_MathDouble.c,455 :: 		
L0090:
;__Lib_MathDouble.c,456 :: 		
0x07C2	0x957A    	DEC        R23
;__Lib_MathDouble.c,457 :: 		
0x07C4	0xF789    	BRNE       L0083
;__Lib_MathDouble.c,458 :: 		
0x07C6	0x2F03    	MOV        R16, R19
;__Lib_MathDouble.c,459 :: 		
0x07C8	0x2F3A    	MOV        R19, R26
;__Lib_MathDouble.c,460 :: 		
0x07CA	0x2F29    	MOV        R18, R25
;__Lib_MathDouble.c,461 :: 		
0x07CC	0x2F18    	MOV        R17, R24
;__Lib_MathDouble.c,463 :: 		
0x07CE	0xDE1C    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,465 :: 		
L0097:
;__Lib_MathDouble.c,466 :: 		
0x07D0	0xC00A    	RJMP       L00A0x
;__Lib_MathDouble.c,467 :: 		
L009B:
;__Lib_MathDouble.c,468 :: 		
0x07D2	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,469 :: 		
0x07D4	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,470 :: 		
0x07D6	0xE72F    	LDI        R18, 127
;__Lib_MathDouble.c,471 :: 		
0x07D8	0xE73F    	LDI        R19, 127
;__Lib_MathDouble.c,472 :: 		
0x07DA	0xCFFA    	RJMP       L0097
;__Lib_MathDouble.c,473 :: 		
L00A0mul:
;__Lib_MathDouble.c,474 :: 		
0x07DC	0x2700    	CLR        R16
;__Lib_MathDouble.c,475 :: 		
0x07DE	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,476 :: 		
0x07E0	0x2F20    	MOV        R18, R16
;__Lib_MathDouble.c,477 :: 		
0x07E2	0x2F30    	MOV        R19, R16
;__Lib_MathDouble.c,478 :: 		
0x07E4	0xCFF5    	RJMP       L0097
;__Lib_MathDouble.c,479 :: 		
L00A0x:
;__Lib_MathDouble.c,481 :: 		
L_end_float_fpmul:
0x07E6	0x9508    	RET
; end of _float_fpmul
_float_unpacku:
;__Lib_MathDouble.c,148 :: 		
;__Lib_MathDouble.c,149 :: 		
0x0464	0xDF16    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,151 :: 		
0x0466	0xF079    	BREQ       L016E
;__Lib_MathDouble.c,152 :: 		
0x0468	0x2F63    	MOV        R22, R19
;__Lib_MathDouble.c,153 :: 		
0x046A	0x7860    	ANDI       R22, 128
;__Lib_MathDouble.c,154 :: 		
0x046C	0x0F22    	LSL        R18
;__Lib_MathDouble.c,155 :: 		
0x046E	0x1F33    	ROL        R19
;__Lib_MathDouble.c,156 :: 		
0x0470	0x2F43    	MOV        R20, R19
;__Lib_MathDouble.c,157 :: 		
0x0472	0xE75F    	LDI        R21, 127
;__Lib_MathDouble.c,158 :: 		
0x0474	0x1B45    	SUB        R20, R21
;__Lib_MathDouble.c,159 :: 		
0x0476	0x2755    	CLR        R21
;__Lib_MathDouble.c,160 :: 		
0x0478	0x4050    	SBCI       R21, 0
;__Lib_MathDouble.c,161 :: 		
0x047A	0x9526    	LSR        R18
;__Lib_MathDouble.c,162 :: 		
0x047C	0xE830    	LDI        R19, 128
;__Lib_MathDouble.c,163 :: 		
0x047E	0x2B23    	OR         R18, R19
;__Lib_MathDouble.c,164 :: 		
0x0480	0x2733    	CLR        R19
;__Lib_MathDouble.c,165 :: 		
0x0482	0x9498    	CLZ
;__Lib_MathDouble.c,166 :: 		
0x0484	0xC003    	RJMP       L016Ex
;__Lib_MathDouble.c,167 :: 		
L016E:
;__Lib_MathDouble.c,168 :: 		
0x0486	0x2744    	CLR        R20
;__Lib_MathDouble.c,169 :: 		
0x0488	0x2755    	CLR        R21
;__Lib_MathDouble.c,170 :: 		
0x048A	0x2766    	CLR        R22
;__Lib_MathDouble.c,171 :: 		
L016Ex:
;__Lib_MathDouble.c,173 :: 		
L_end_float_unpacku:
0x048C	0x9508    	RET
; end of _float_unpacku
_read_uncompensated_pressure:
;bmp180.c,88 :: 		unsigned long read_uncompensated_pressure(unsigned char OSS)
;bmp180.c,90 :: 		unsigned char msb_value = 0;
0x1C16	0x923F    	PUSH       R3
;bmp180.c,91 :: 		unsigned char lsb_value = 0;
;bmp180.c,92 :: 		unsigned char xlsb_value = 0;
;bmp180.c,94 :: 		unsigned long up = 0;
;bmp180.c,96 :: 		BMP180_write(control_reg, (0x34 + (OSS << 6)));
0x1C18	0xE0B6    	LDI        R27, 6
0x1C1A	0x2D02    	MOV        R16, R2
L__read_uncompensated_pressure420:
0x1C1C	0x0F00    	LSL        R16
0x1C1E	0x95BA    	DEC        R27
0x1C20	0xF7E9    	BRNE       L__read_uncompensated_pressure420
L__read_uncompensated_pressure421:
0x1C22	0x5C0C    	SUBI       R16, 204
0x1C24	0x922F    	PUSH       R2
0x1C26	0x2E30    	MOV        R3, R16
0x1C28	0xEFB4    	LDI        R27, 244
0x1C2A	0x2E2B    	MOV        R2, R27
0x1C2C	0xDFE2    	RCALL      _BMP180_write+0
0x1C2E	0x902F    	POP        R2
;bmp180.c,97 :: 		switch(OSS)
0x1C30	0xC02B    	RJMP       L_read_uncompensated_pressure190
;bmp180.c,99 :: 		case 1:
L_read_uncompensated_pressure192:
;bmp180.c,101 :: 		delay_ms(8);
0x1C32	0xE022    	LDI        R18, 2
0x1C34	0xE41D    	LDI        R17, 77
0x1C36	0xE705    	LDI        R16, 117
L_read_uncompensated_pressure193:
0x1C38	0x950A    	DEC        R16
0x1C3A	0xF7F1    	BRNE       L_read_uncompensated_pressure193
0x1C3C	0x951A    	DEC        R17
0x1C3E	0xF7E1    	BRNE       L_read_uncompensated_pressure193
0x1C40	0x952A    	DEC        R18
0x1C42	0xF7D1    	BRNE       L_read_uncompensated_pressure193
0x1C44	0x0000    	NOP
;bmp180.c,102 :: 		break;
0x1C46	0xC02A    	RJMP       L_read_uncompensated_pressure191
;bmp180.c,104 :: 		case 2:
L_read_uncompensated_pressure195:
;bmp180.c,106 :: 		delay_ms(14);
0x1C48	0xE023    	LDI        R18, 3
0x1C4A	0xE416    	LDI        R17, 70
0x1C4C	0xEC0E    	LDI        R16, 206
L_read_uncompensated_pressure196:
0x1C4E	0x950A    	DEC        R16
0x1C50	0xF7F1    	BRNE       L_read_uncompensated_pressure196
0x1C52	0x951A    	DEC        R17
0x1C54	0xF7E1    	BRNE       L_read_uncompensated_pressure196
0x1C56	0x952A    	DEC        R18
0x1C58	0xF7D1    	BRNE       L_read_uncompensated_pressure196
0x1C5A	0x0000    	NOP
0x1C5C	0x0000    	NOP
;bmp180.c,107 :: 		break;
0x1C5E	0xC01E    	RJMP       L_read_uncompensated_pressure191
;bmp180.c,109 :: 		case 3:
L_read_uncompensated_pressure198:
;bmp180.c,111 :: 		delay_ms(26);
0x1C60	0xE025    	LDI        R18, 5
0x1C62	0xE319    	LDI        R17, 57
0x1C64	0xE800    	LDI        R16, 128
L_read_uncompensated_pressure199:
0x1C66	0x950A    	DEC        R16
0x1C68	0xF7F1    	BRNE       L_read_uncompensated_pressure199
0x1C6A	0x951A    	DEC        R17
0x1C6C	0xF7E1    	BRNE       L_read_uncompensated_pressure199
0x1C6E	0x952A    	DEC        R18
0x1C70	0xF7D1    	BRNE       L_read_uncompensated_pressure199
0x1C72	0x0000    	NOP
0x1C74	0x0000    	NOP
;bmp180.c,112 :: 		break;
0x1C76	0xC012    	RJMP       L_read_uncompensated_pressure191
;bmp180.c,114 :: 		default:
L_read_uncompensated_pressure201:
;bmp180.c,116 :: 		delay_ms(5);
0x1C78	0xED10    	LDI        R17, 208
0x1C7A	0xEC0A    	LDI        R16, 202
L_read_uncompensated_pressure202:
0x1C7C	0x950A    	DEC        R16
0x1C7E	0xF7F1    	BRNE       L_read_uncompensated_pressure202
0x1C80	0x951A    	DEC        R17
0x1C82	0xF7E1    	BRNE       L_read_uncompensated_pressure202
0x1C84	0x0000    	NOP
;bmp180.c,117 :: 		break;
0x1C86	0xC00A    	RJMP       L_read_uncompensated_pressure191
;bmp180.c,119 :: 		}
L_read_uncompensated_pressure190:
0x1C88	0xE0B1    	LDI        R27, 1
0x1C8A	0x162B    	CP         R2, R27
0x1C8C	0xF291    	BREQ       L_read_uncompensated_pressure192
L__read_uncompensated_pressure422:
0x1C8E	0xE0B2    	LDI        R27, 2
0x1C90	0x162B    	CP         R2, R27
0x1C92	0xF2D1    	BREQ       L_read_uncompensated_pressure195
L__read_uncompensated_pressure423:
0x1C94	0xE0B3    	LDI        R27, 3
0x1C96	0x162B    	CP         R2, R27
0x1C98	0xF319    	BREQ       L_read_uncompensated_pressure198
L__read_uncompensated_pressure424:
0x1C9A	0xCFEE    	RJMP       L_read_uncompensated_pressure201
L_read_uncompensated_pressure191:
;bmp180.c,121 :: 		msb_value = BMP180_read_byte(MSB);
0x1C9C	0x922F    	PUSH       R2
0x1C9E	0xEFB6    	LDI        R27, 246
0x1CA0	0x2E2B    	MOV        R2, R27
0x1CA2	0x059F940E  	CALL       _BMP180_read_byte+0
; msb_value start address is: 22 (R22)
0x1CA6	0x2F60    	MOV        R22, R16
;bmp180.c,122 :: 		lsb_value = BMP180_read_byte(LSB);
0x1CA8	0xEFB7    	LDI        R27, 247
0x1CAA	0x2E2B    	MOV        R2, R27
0x1CAC	0x059F940E  	CALL       _BMP180_read_byte+0
; lsb_value start address is: 21 (R21)
0x1CB0	0x2F50    	MOV        R21, R16
;bmp180.c,123 :: 		xlsb_value = BMP180_read_byte(XLSB);
0x1CB2	0xEFB8    	LDI        R27, 248
0x1CB4	0x2E2B    	MOV        R2, R27
0x1CB6	0x059F940E  	CALL       _BMP180_read_byte+0
0x1CBA	0x902F    	POP        R2
;bmp180.c,125 :: 		up = ((((unsigned long)msb_value << 16) | ((unsigned long)lsb_value << 8) | (unsigned long)xlsb_value) >> (8 - OSS));
0x1CBC	0x2F16    	MOV        R17, R22
0x1CBE	0xE020    	LDI        R18, 0
0x1CC0	0x2F32    	MOV        R19, R18
0x1CC2	0x2F42    	MOV        R20, R18
; msb_value end address is: 22 (R22)
0x1CC4	0x2EA2    	MOV        R10, R18
0x1CC6	0x2E91    	MOV        R9, R17
0x1CC8	0x2477    	CLR        R7
0x1CCA	0x2488    	CLR        R8
0x1CCC	0x2F15    	MOV        R17, R21
0x1CCE	0xE020    	LDI        R18, 0
0x1CD0	0x2F32    	MOV        R19, R18
0x1CD2	0x2F42    	MOV        R20, R18
; lsb_value end address is: 21 (R21)
0x1CD4	0x2E63    	MOV        R6, R19
0x1CD6	0x2E52    	MOV        R5, R18
0x1CD8	0x2E41    	MOV        R4, R17
0x1CDA	0x2433    	CLR        R3
0x1CDC	0x2D47    	MOV        R20, R7
0x1CDE	0x2D58    	MOV        R21, R8
0x1CE0	0x2D69    	MOV        R22, R9
0x1CE2	0x2D7A    	MOV        R23, R10
0x1CE4	0x2943    	OR         R20, R3
0x1CE6	0x2954    	OR         R21, R4
0x1CE8	0x2965    	OR         R22, R5
0x1CEA	0x2976    	OR         R23, R6
0x1CEC	0xE010    	LDI        R17, 0
0x1CEE	0x2F21    	MOV        R18, R17
0x1CF0	0x2F31    	MOV        R19, R17
0x1CF2	0x2B40    	OR         R20, R16
0x1CF4	0x2B51    	OR         R21, R17
0x1CF6	0x2B62    	OR         R22, R18
0x1CF8	0x2B73    	OR         R23, R19
0x1CFA	0xE008    	LDI        R16, 8
0x1CFC	0xE010    	LDI        R17, 0
0x1CFE	0x1902    	SUB        R16, R2
0x1D00	0xE0B0    	LDI        R27, 0
0x1D02	0x0B1B    	SBC        R17, R27
0x1D04	0x2FB0    	MOV        R27, R16
0x1D06	0x018A    	MOVW       R16, R20
0x1D08	0x019B    	MOVW       R18, R22
0x1D0A	0x23BB    	TST        R27
0x1D0C	0xF031    	BREQ       L__read_uncompensated_pressure426
L__read_uncompensated_pressure425:
0x1D0E	0x9536    	LSR        R19
0x1D10	0x9527    	ROR        R18
0x1D12	0x9517    	ROR        R17
0x1D14	0x9507    	ROR        R16
0x1D16	0x95BA    	DEC        R27
0x1D18	0xF7D1    	BRNE       L__read_uncompensated_pressure425
L__read_uncompensated_pressure426:
;bmp180.c,127 :: 		return up;
;bmp180.c,128 :: 		}
;bmp180.c,127 :: 		return up;
;bmp180.c,128 :: 		}
L_end_read_uncompensated_pressure:
0x1D1A	0x903F    	POP        R3
0x1D1C	0x9508    	RET
; end of _read_uncompensated_pressure
_BMP180_read_byte:
;bmp180.c,13 :: 		signed char BMP180_read_byte(unsigned char address)
;bmp180.c,15 :: 		unsigned char temp = 0;
0x0B3E	0x922F    	PUSH       R2
;bmp180.c,17 :: 		TWIC_Start();
0x0B40	0xDB87    	RCALL      _TWIC_Start+0
;bmp180.c,18 :: 		TWIC_Write(BMP180_Address);
0x0B42	0x922F    	PUSH       R2
0x0B44	0xEEBE    	LDI        R27, 238
0x0B46	0x2E2B    	MOV        R2, R27
0x0B48	0xDB68    	RCALL      _TWIC_Write+0
0x0B4A	0x902F    	POP        R2
;bmp180.c,19 :: 		TWIC_Write(address);
0x0B4C	0xDB66    	RCALL      _TWIC_Write+0
;bmp180.c,20 :: 		TWIC_Start();
0x0B4E	0xDB80    	RCALL      _TWIC_Start+0
;bmp180.c,21 :: 		TWIC_Write(BMP180_Address | 1);
0x0B50	0xEEBF    	LDI        R27, 239
0x0B52	0x2E2B    	MOV        R2, R27
0x0B54	0xDB62    	RCALL      _TWIC_Write+0
;bmp180.c,22 :: 		temp = TWIC_Read(0);
0x0B56	0x2422    	CLR        R2
0x0B58	0xDB51    	RCALL      _TWIC_Read+0
; temp start address is: 17 (R17)
0x0B5A	0x2F10    	MOV        R17, R16
;bmp180.c,23 :: 		TWIC_Stop();
0x0B5C	0xDB8C    	RCALL      _TWIC_Stop+0
;bmp180.c,25 :: 		return temp;
0x0B5E	0x2F01    	MOV        R16, R17
; temp end address is: 17 (R17)
;bmp180.c,26 :: 		}
;bmp180.c,25 :: 		return temp;
;bmp180.c,26 :: 		}
L_end_BMP180_read_byte:
0x0B60	0x902F    	POP        R2
0x0B62	0x9508    	RET
; end of _BMP180_read_byte
_get_pressure:
0x23EE	0x93CF    	PUSH       R28
0x23F0	0x93DF    	PUSH       R29
0x23F2	0xB7CD    	IN         R28, SPL+0
0x23F4	0xB7DE    	IN         R29, SPL+1
0x23F6	0x9728    	SBIW       R28, 8
0x23F8	0xBFCD    	OUT        SPL+0, R28
0x23FA	0xBFDE    	OUT        SPL+1, R29
0x23FC	0x9621    	ADIW       R28, 1
;bmp180.c,148 :: 		signed long get_pressure(unsigned long UP, unsigned char OSS)
;bmp180.c,150 :: 		signed long p = 0;
;bmp180.c,151 :: 		signed long x1 = 0;
;bmp180.c,152 :: 		signed long x2 = 0;
;bmp180.c,153 :: 		signed long x3 = 0;
;bmp180.c,154 :: 		signed long _b3 = 0;
;bmp180.c,155 :: 		signed long _b6 = 0;
;bmp180.c,157 :: 		unsigned long _b4 = 0;
;bmp180.c,158 :: 		unsigned long _b7 = 0;
;bmp180.c,160 :: 		_b6 = (_b5 - 4000);
0x23FE	0x20129100  	LDS        R16, __b5+0
0x2402	0x20139110  	LDS        R17, __b5+1
0x2406	0x20149120  	LDS        R18, __b5+2
0x240A	0x20159130  	LDS        R19, __b5+3
0x240E	0x5A00    	SUBI       R16, 160
0x2410	0x401F    	SBCI       R17, 15
0x2412	0x4020    	SBCI       R18, 0
0x2414	0x4030    	SBCI       R19, 0
; _b6 start address is: 11 (R11)
0x2416	0x2EB0    	MOV        R11, R16
0x2418	0x2EC1    	MOV        R12, R17
0x241A	0x2ED2    	MOV        R13, R18
0x241C	0x2EE3    	MOV        R14, R19
;bmp180.c,162 :: 		x1 = ((_b2 * (_b6 * _b6) >> 12) >> 11);
0x241E	0x01A8    	MOVW       R20, R16
0x2420	0x01B9    	MOVW       R22, R18
0x2422	0xDB84    	RCALL      _HWMul_32x32+0
0x2424	0x200E9140  	LDS        R20, __b2+0
0x2428	0x200F9150  	LDS        R21, __b2+1
0x242C	0xE060    	LDI        R22, 0
0x242E	0xFD57    	SBRC       R21, 7
0x2430	0xEF6F    	LDI        R22, 255
0x2432	0x2F76    	MOV        R23, R22
0x2434	0xDB7B    	RCALL      _HWMul_32x32+0
0x2436	0xE0BC    	LDI        R27, 12
L__get_pressure435:
0x2438	0x9535    	ASR        R19
0x243A	0x9527    	ROR        R18
0x243C	0x9517    	ROR        R17
0x243E	0x9507    	ROR        R16
0x2440	0x95BA    	DEC        R27
0x2442	0xF7D1    	BRNE       L__get_pressure435
L__get_pressure436:
0x2444	0xE0BB    	LDI        R27, 11
L__get_pressure437:
0x2446	0x9535    	ASR        R19
0x2448	0x9527    	ROR        R18
0x244A	0x9517    	ROR        R17
0x244C	0x9507    	ROR        R16
0x244E	0x95BA    	DEC        R27
0x2450	0xF7D1    	BRNE       L__get_pressure437
L__get_pressure438:
0x2452	0x830C    	STD        Y+4, R16
0x2454	0x831D    	STD        Y+5, R17
0x2456	0x832E    	STD        Y+6, R18
0x2458	0x833F    	STD        Y+7, R19
;bmp180.c,163 :: 		x2 = ((ac2 * _b6) >> 11);
0x245A	0x20109100  	LDS        R16, _ac2+0
0x245E	0x20119110  	LDS        R17, _ac2+1
0x2462	0xE020    	LDI        R18, 0
0x2464	0xFD17    	SBRC       R17, 7
0x2466	0xEF2F    	LDI        R18, 255
0x2468	0x2F32    	MOV        R19, R18
0x246A	0x2D4B    	MOV        R20, R11
0x246C	0x2D5C    	MOV        R21, R12
0x246E	0x2D6D    	MOV        R22, R13
0x2470	0x2D7E    	MOV        R23, R14
0x2472	0xDB5C    	RCALL      _HWMul_32x32+0
0x2474	0xE0BB    	LDI        R27, 11
0x2476	0x01A8    	MOVW       R20, R16
0x2478	0x01B9    	MOVW       R22, R18
L__get_pressure439:
0x247A	0x9575    	ASR        R23
0x247C	0x9567    	ROR        R22
0x247E	0x9557    	ROR        R21
0x2480	0x9547    	ROR        R20
0x2482	0x95BA    	DEC        R27
0x2484	0xF7D1    	BRNE       L__get_pressure439
L__get_pressure440:
;bmp180.c,164 :: 		x3 = (x1 + x2);
0x2486	0x810C    	LDD        R16, Y+4
0x2488	0x811D    	LDD        R17, Y+5
0x248A	0x812E    	LDD        R18, Y+6
0x248C	0x813F    	LDD        R19, Y+7
0x248E	0x0F40    	ADD        R20, R16
0x2490	0x1F51    	ADC        R21, R17
0x2492	0x1F62    	ADC        R22, R18
0x2494	0x1F73    	ADC        R23, R19
;bmp180.c,165 :: 		_b3 = (((((((signed long)ac1) << 2) + x3) << OSS) + 2) >> 2);
0x2496	0x200C9100  	LDS        R16, _ac1+0
0x249A	0x200D9110  	LDS        R17, _ac1+1
0x249E	0xE020    	LDI        R18, 0
0x24A0	0xFD17    	SBRC       R17, 7
0x24A2	0xEF2F    	LDI        R18, 255
0x24A4	0x2F32    	MOV        R19, R18
0x24A6	0x0F00    	LSL        R16
0x24A8	0x1F11    	ROL        R17
0x24AA	0x1F22    	ROL        R18
0x24AC	0x1F33    	ROL        R19
0x24AE	0x0F00    	LSL        R16
0x24B0	0x1F11    	ROL        R17
0x24B2	0x1F22    	ROL        R18
0x24B4	0x1F33    	ROL        R19
0x24B6	0x0F04    	ADD        R16, R20
0x24B8	0x1F15    	ADC        R17, R21
0x24BA	0x1F26    	ADC        R18, R22
0x24BC	0x1F37    	ADC        R19, R23
0x24BE	0x2DB6    	MOV        R27, R6
0x24C0	0x23BB    	TST        R27
0x24C2	0xF031    	BREQ       L__get_pressure442
L__get_pressure441:
0x24C4	0x0F00    	LSL        R16
0x24C6	0x1F11    	ROL        R17
0x24C8	0x1F22    	ROL        R18
0x24CA	0x1F33    	ROL        R19
0x24CC	0x95BA    	DEC        R27
0x24CE	0xF7D1    	BRNE       L__get_pressure441
L__get_pressure442:
0x24D0	0x5F0E    	SUBI       R16, 254
0x24D2	0x4F1F    	SBCI       R17, 255
0x24D4	0x4F2F    	SBCI       R18, 255
0x24D6	0x4F3F    	SBCI       R19, 255
0x24D8	0x9535    	ASR        R19
0x24DA	0x9527    	ROR        R18
0x24DC	0x9517    	ROR        R17
0x24DE	0x9507    	ROR        R16
0x24E0	0x9535    	ASR        R19
0x24E2	0x9527    	ROR        R18
0x24E4	0x9517    	ROR        R17
0x24E6	0x9507    	ROR        R16
; _b3 start address is: 7 (R7)
0x24E8	0x2E70    	MOV        R7, R16
0x24EA	0x2E81    	MOV        R8, R17
0x24EC	0x2E92    	MOV        R9, R18
0x24EE	0x2EA3    	MOV        R10, R19
;bmp180.c,166 :: 		x1 = ((ac3 * _b6) >> 13);
0x24F0	0x201A9100  	LDS        R16, _ac3+0
0x24F4	0x201B9110  	LDS        R17, _ac3+1
0x24F8	0xE020    	LDI        R18, 0
0x24FA	0xFD17    	SBRC       R17, 7
0x24FC	0xEF2F    	LDI        R18, 255
0x24FE	0x2F32    	MOV        R19, R18
0x2500	0x2D4B    	MOV        R20, R11
0x2502	0x2D5C    	MOV        R21, R12
0x2504	0x2D6D    	MOV        R22, R13
0x2506	0x2D7E    	MOV        R23, R14
0x2508	0xDB11    	RCALL      _HWMul_32x32+0
0x250A	0xE0BD    	LDI        R27, 13
L__get_pressure443:
0x250C	0x9535    	ASR        R19
0x250E	0x9527    	ROR        R18
0x2510	0x9517    	ROR        R17
0x2512	0x9507    	ROR        R16
0x2514	0x95BA    	DEC        R27
0x2516	0xF7D1    	BRNE       L__get_pressure443
L__get_pressure444:
0x2518	0x830C    	STD        Y+4, R16
0x251A	0x831D    	STD        Y+5, R17
0x251C	0x832E    	STD        Y+6, R18
0x251E	0x833F    	STD        Y+7, R19
;bmp180.c,167 :: 		x2 = ((_b1 * ((_b6 * _b6) >> 12)) >> 16);
0x2520	0x2D0B    	MOV        R16, R11
0x2522	0x2D1C    	MOV        R17, R12
0x2524	0x2D2D    	MOV        R18, R13
0x2526	0x2D3E    	MOV        R19, R14
0x2528	0x2D4B    	MOV        R20, R11
0x252A	0x2D5C    	MOV        R21, R12
0x252C	0x2D6D    	MOV        R22, R13
0x252E	0x2D7E    	MOV        R23, R14
0x2530	0xDAFD    	RCALL      _HWMul_32x32+0
; _b6 end address is: 11 (R11)
0x2532	0xE0BC    	LDI        R27, 12
L__get_pressure445:
0x2534	0x9535    	ASR        R19
0x2536	0x9527    	ROR        R18
0x2538	0x9517    	ROR        R17
0x253A	0x9507    	ROR        R16
0x253C	0x95BA    	DEC        R27
0x253E	0xF7D1    	BRNE       L__get_pressure445
L__get_pressure446:
0x2540	0x20189140  	LDS        R20, __b1+0
0x2544	0x20199150  	LDS        R21, __b1+1
0x2548	0xE060    	LDI        R22, 0
0x254A	0xFD57    	SBRC       R21, 7
0x254C	0xEF6F    	LDI        R22, 255
0x254E	0x2F76    	MOV        R23, R22
0x2550	0xDAED    	RCALL      _HWMul_32x32+0
0x2552	0x2F42    	MOV        R20, R18
0x2554	0x2F53    	MOV        R21, R19
0x2556	0xE060    	LDI        R22, 0
0x2558	0xFD57    	SBRC       R21, 7
0x255A	0xEF6F    	LDI        R22, 255
0x255C	0x2F76    	MOV        R23, R22
;bmp180.c,168 :: 		x3 = (((x1 + x2) + 2) >> 2);
0x255E	0x810C    	LDD        R16, Y+4
0x2560	0x811D    	LDD        R17, Y+5
0x2562	0x812E    	LDD        R18, Y+6
0x2564	0x813F    	LDD        R19, Y+7
0x2566	0x0F04    	ADD        R16, R20
0x2568	0x1F15    	ADC        R17, R21
0x256A	0x1F26    	ADC        R18, R22
0x256C	0x1F37    	ADC        R19, R23
0x256E	0x5F0E    	SUBI       R16, 254
0x2570	0x4F1F    	SBCI       R17, 255
0x2572	0x4F2F    	SBCI       R18, 255
0x2574	0x4F3F    	SBCI       R19, 255
0x2576	0x9535    	ASR        R19
0x2578	0x9527    	ROR        R18
0x257A	0x9517    	ROR        R17
0x257C	0x9507    	ROR        R16
0x257E	0x9535    	ASR        R19
0x2580	0x9527    	ROR        R18
0x2582	0x9517    	ROR        R17
0x2584	0x9507    	ROR        R16
;bmp180.c,169 :: 		_b4 = ((ac4 * (unsigned long)(x3 + 32768)) >> 15);
0x2586	0x5000    	SUBI       R16, 0
0x2588	0x4810    	SBCI       R17, 128
0x258A	0x4F2F    	SBCI       R18, 255
0x258C	0x4F3F    	SBCI       R19, 255
0x258E	0x20169140  	LDS        R20, _ac4+0
0x2592	0x20179150  	LDS        R21, _ac4+1
0x2596	0xE060    	LDI        R22, 0
0x2598	0x2F76    	MOV        R23, R22
0x259A	0xDAC8    	RCALL      _HWMul_32x32+0
0x259C	0xE0BF    	LDI        R27, 15
L__get_pressure447:
0x259E	0x9536    	LSR        R19
0x25A0	0x9527    	ROR        R18
0x25A2	0x9517    	ROR        R17
0x25A4	0x9507    	ROR        R16
0x25A6	0x95BA    	DEC        R27
0x25A8	0xF7D1    	BRNE       L__get_pressure447
L__get_pressure448:
; _b4 start address is: 11 (R11)
0x25AA	0x2EB0    	MOV        R11, R16
0x25AC	0x2EC1    	MOV        R12, R17
0x25AE	0x2ED2    	MOV        R13, R18
0x25B0	0x2EE3    	MOV        R14, R19
;bmp180.c,170 :: 		_b7 = ((unsigned long)(UP - _b3) * (50000 >> OSS));
0x25B2	0x01A1    	MOVW       R20, R2
0x25B4	0x01B2    	MOVW       R22, R4
0x25B6	0x1947    	SUB        R20, R7
0x25B8	0x0958    	SBC        R21, R8
0x25BA	0x0969    	SBC        R22, R9
0x25BC	0x097A    	SBC        R23, R10
; _b3 end address is: 7 (R7)
0x25BE	0x2DB6    	MOV        R27, R6
0x25C0	0xE500    	LDI        R16, 80
0x25C2	0xEC13    	LDI        R17, 195
0x25C4	0x23BB    	TST        R27
0x25C6	0xF021    	BREQ       L__get_pressure450
L__get_pressure449:
0x25C8	0x9516    	LSR        R17
0x25CA	0x9507    	ROR        R16
0x25CC	0x95BA    	DEC        R27
0x25CE	0xF7E1    	BRNE       L__get_pressure449
L__get_pressure450:
0x25D0	0xE020    	LDI        R18, 0
0x25D2	0x2F32    	MOV        R19, R18
0x25D4	0xDAAB    	RCALL      _HWMul_32x32+0
; _b7 start address is: 20 (R20)
0x25D6	0x01A8    	MOVW       R20, R16
0x25D8	0x01B9    	MOVW       R22, R18
;bmp180.c,172 :: 		if(_b7 < 0x80000000)
0x25DA	0x3830    	CPI        R19, 128
0x25DC	0xF429    	BRNE       L__get_pressure451
0x25DE	0x3020    	CPI        R18, 0
0x25E0	0xF419    	BRNE       L__get_pressure451
0x25E2	0x3010    	CPI        R17, 0
0x25E4	0xF409    	BRNE       L__get_pressure451
0x25E6	0x3000    	CPI        R16, 0
L__get_pressure451:
0x25E8	0xF498    	BRSH       L_get_pressure204
L__get_pressure452:
;bmp180.c,174 :: 		p = ((_b7 << 1) / _b4);
0x25EA	0x018A    	MOVW       R16, R20
0x25EC	0x019B    	MOVW       R18, R22
0x25EE	0x0F00    	LSL        R16
0x25F0	0x1F11    	ROL        R17
0x25F2	0x1F22    	ROL        R18
0x25F4	0x1F33    	ROL        R19
; _b7 end address is: 20 (R20)
0x25F6	0x2D4B    	MOV        R20, R11
0x25F8	0x2D5C    	MOV        R21, R12
0x25FA	0x2D6D    	MOV        R22, R13
0x25FC	0x2D7E    	MOV        R23, R14
0x25FE	0x0827940E  	CALL       _Div_32x32_U+0
0x2602	0x018B    	MOVW       R16, R22
0x2604	0x019C    	MOVW       R18, R24
; _b4 end address is: 11 (R11)
0x2606	0x8308    	STD        Y+0, R16
0x2608	0x8319    	STD        Y+1, R17
0x260A	0x832A    	STD        Y+2, R18
0x260C	0x833B    	STD        Y+3, R19
;bmp180.c,175 :: 		}
0x260E	0xC012    	RJMP       L_get_pressure205
L_get_pressure204:
;bmp180.c,178 :: 		p = ((_b7 / _b4) << 1);
; _b7 start address is: 20 (R20)
; _b4 start address is: 11 (R11)
0x2610	0x018A    	MOVW       R16, R20
0x2612	0x019B    	MOVW       R18, R22
0x2614	0x2D4B    	MOV        R20, R11
0x2616	0x2D5C    	MOV        R21, R12
0x2618	0x2D6D    	MOV        R22, R13
0x261A	0x2D7E    	MOV        R23, R14
0x261C	0x0827940E  	CALL       _Div_32x32_U+0
0x2620	0x018B    	MOVW       R16, R22
0x2622	0x019C    	MOVW       R18, R24
; _b4 end address is: 11 (R11)
; _b7 end address is: 20 (R20)
0x2624	0x0F00    	LSL        R16
0x2626	0x1F11    	ROL        R17
0x2628	0x1F22    	ROL        R18
0x262A	0x1F33    	ROL        R19
0x262C	0x8308    	STD        Y+0, R16
0x262E	0x8319    	STD        Y+1, R17
0x2630	0x832A    	STD        Y+2, R18
0x2632	0x833B    	STD        Y+3, R19
;bmp180.c,179 :: 		}
L_get_pressure205:
;bmp180.c,181 :: 		x1 = ((p >> 8) * (p >> 8));
0x2634	0x8108    	LDD        R16, Y+0
0x2636	0x8119    	LDD        R17, Y+1
0x2638	0x812A    	LDD        R18, Y+2
0x263A	0x813B    	LDD        R19, Y+3
0x263C	0x2F01    	MOV        R16, R17
0x263E	0x2F12    	MOV        R17, R18
0x2640	0x2F23    	MOV        R18, R19
0x2642	0xE030    	LDI        R19, 0
0x2644	0xFD27    	SBRC       R18, 7
0x2646	0xEF3F    	LDI        R19, 255
0x2648	0x01A8    	MOVW       R20, R16
0x264A	0x01B9    	MOVW       R22, R18
0x264C	0xDA6F    	RCALL      _HWMul_32x32+0
;bmp180.c,182 :: 		x1 = ((x1 * 3038) >> 16);
0x264E	0xED4E    	LDI        R20, 222
0x2650	0xE05B    	LDI        R21, 11
0x2652	0xE060    	LDI        R22, 0
0x2654	0xE070    	LDI        R23, 0
0x2656	0xDA6A    	RCALL      _HWMul_32x32+0
0x2658	0x2F02    	MOV        R16, R18
0x265A	0x2F13    	MOV        R17, R19
0x265C	0xE020    	LDI        R18, 0
0x265E	0xFD17    	SBRC       R17, 7
0x2660	0xEF2F    	LDI        R18, 255
0x2662	0x2F32    	MOV        R19, R18
0x2664	0x830C    	STD        Y+4, R16
0x2666	0x831D    	STD        Y+5, R17
0x2668	0x832E    	STD        Y+6, R18
0x266A	0x833F    	STD        Y+7, R19
;bmp180.c,183 :: 		x2 = ((-7357 * p) >> 16);
0x266C	0xE403    	LDI        R16, 67
0x266E	0xEE13    	LDI        R17, 227
0x2670	0xEF2F    	LDI        R18, 255
0x2672	0xEF3F    	LDI        R19, 255
0x2674	0x8148    	LDD        R20, Y+0
0x2676	0x8159    	LDD        R21, Y+1
0x2678	0x816A    	LDD        R22, Y+2
0x267A	0x817B    	LDD        R23, Y+3
0x267C	0xDA57    	RCALL      _HWMul_32x32+0
0x267E	0x2F42    	MOV        R20, R18
0x2680	0x2F53    	MOV        R21, R19
0x2682	0xE060    	LDI        R22, 0
0x2684	0xFD57    	SBRC       R21, 7
0x2686	0xEF6F    	LDI        R22, 255
0x2688	0x2F76    	MOV        R23, R22
;bmp180.c,184 :: 		p += ((x1 + x2 + 3791) >> 4);
0x268A	0x810C    	LDD        R16, Y+4
0x268C	0x811D    	LDD        R17, Y+5
0x268E	0x812E    	LDD        R18, Y+6
0x2690	0x813F    	LDD        R19, Y+7
0x2692	0x0F04    	ADD        R16, R20
0x2694	0x1F15    	ADC        R17, R21
0x2696	0x1F26    	ADC        R18, R22
0x2698	0x1F37    	ADC        R19, R23
0x269A	0x5301    	SUBI       R16, 49
0x269C	0x4F11    	SBCI       R17, 241
0x269E	0x4F2F    	SBCI       R18, 255
0x26A0	0x4F3F    	SBCI       R19, 255
0x26A2	0xE0B4    	LDI        R27, 4
0x26A4	0x01A8    	MOVW       R20, R16
0x26A6	0x01B9    	MOVW       R22, R18
L__get_pressure453:
0x26A8	0x9575    	ASR        R23
0x26AA	0x9567    	ROR        R22
0x26AC	0x9557    	ROR        R21
0x26AE	0x9547    	ROR        R20
0x26B0	0x95BA    	DEC        R27
0x26B2	0xF7D1    	BRNE       L__get_pressure453
L__get_pressure454:
0x26B4	0x8108    	LDD        R16, Y+0
0x26B6	0x8119    	LDD        R17, Y+1
0x26B8	0x812A    	LDD        R18, Y+2
0x26BA	0x813B    	LDD        R19, Y+3
0x26BC	0x0F04    	ADD        R16, R20
0x26BE	0x1F15    	ADC        R17, R21
0x26C0	0x1F26    	ADC        R18, R22
0x26C2	0x1F37    	ADC        R19, R23
;bmp180.c,186 :: 		return (signed long)p;
;bmp180.c,187 :: 		}
L_end_get_pressure:
0x26C4	0x9627    	ADIW       R28, 7
0x26C6	0xBFCD    	OUT        SPL+0, R28
0x26C8	0xBFDE    	OUT        SPL+1, R29
0x26CA	0x91DF    	POP        R29
0x26CC	0x91CF    	POP        R28
0x26CE	0x9508    	RET
; end of _get_pressure
_Div_32x32_U:
;__Lib_Math.c,243 :: 		
;__Lib_Math.c,246 :: 		
0x104E	0x01C9    	MOVW       R24, R18
;__Lib_Math.c,247 :: 		
0x1050	0x019A    	MOVW       R18, R20
;__Lib_Math.c,248 :: 		
0x1052	0x01AB    	MOVW       R20, R22
;__Lib_Math.c,249 :: 		
0x1054	0x01B8    	MOVW       R22, R16
;__Lib_Math.c,251 :: 		
0x1056	0xE2A1    	LDI        R26, 33
;__Lib_Math.c,252 :: 		
0x1058	0x2E1A    	MOV        R1, R26
;__Lib_Math.c,253 :: 		
0x105A	0x1BAA    	SUB        R26, R26
;__Lib_Math.c,254 :: 		
0x105C	0x1BBB    	SUB        R27, R27
;__Lib_Math.c,255 :: 		
0x105E	0x01FD    	MOVW       R30, R26
;__Lib_Math.c,256 :: 		
0x1060	0xC00D    	RJMP       Div_32x32_U_L2
;__Lib_Math.c,257 :: 		
Div_32x32_U_L1:
;__Lib_Math.c,258 :: 		
0x1062	0x1FAA    	ROL        R26
;__Lib_Math.c,259 :: 		
0x1064	0x1FBB    	ROL        R27
;__Lib_Math.c,260 :: 		
0x1066	0x1FEE    	ROL        R30
;__Lib_Math.c,261 :: 		
0x1068	0x1FFF    	ROL        R31
;__Lib_Math.c,262 :: 		
0x106A	0x17A2    	CP         R26, R18
;__Lib_Math.c,263 :: 		
0x106C	0x07B3    	CPC        R27, R19
;__Lib_Math.c,264 :: 		
0x106E	0x07E4    	CPC        R30, R20
;__Lib_Math.c,265 :: 		
0x1070	0x07F5    	CPC        R31, R21
;__Lib_Math.c,266 :: 		
0x1072	0xF020    	BRCS       Div_32x32_U_L2
;__Lib_Math.c,267 :: 		
0x1074	0x0BA2    	SBC        R26, R18
;__Lib_Math.c,268 :: 		
0x1076	0x0BB3    	SBC        R27, R19
;__Lib_Math.c,269 :: 		
0x1078	0x0BE4    	SBC        R30, R20
;__Lib_Math.c,270 :: 		
0x107A	0x0BF5    	SBC        R31, R21
;__Lib_Math.c,271 :: 		
Div_32x32_U_L2:
;__Lib_Math.c,272 :: 		
0x107C	0x1F66    	ROL        R22
;__Lib_Math.c,273 :: 		
0x107E	0x1F77    	ROL        R23
;__Lib_Math.c,274 :: 		
0x1080	0x1F88    	ROL        R24
;__Lib_Math.c,275 :: 		
0x1082	0x1F99    	ROL        R25
;__Lib_Math.c,276 :: 		
0x1084	0x941A    	DEC        R1
;__Lib_Math.c,277 :: 		
0x1086	0xF769    	BRNE       Div_32x32_U_L1
;__Lib_Math.c,278 :: 		
0x1088	0x9560    	COM        R22
;__Lib_Math.c,279 :: 		
0x108A	0x9570    	COM        R23
;__Lib_Math.c,280 :: 		
0x108C	0x9580    	COM        R24
;__Lib_Math.c,281 :: 		
0x108E	0x9590    	COM        R25
;__Lib_Math.c,284 :: 		
L_end_Div_32x32_U:
0x1090	0x9508    	RET
; end of _Div_32x32_U
_print_F:
0x26D0	0x93CF    	PUSH       R28
0x26D2	0x93DF    	PUSH       R29
0x26D4	0xB7CD    	IN         R28, SPL+0
0x26D6	0xB7DE    	IN         R29, SPL+1
0x26D8	0x9728    	SBIW       R28, 8
0x26DA	0xBFCD    	OUT        SPL+0, R28
0x26DC	0xBFDE    	OUT        SPL+1, R29
0x26DE	0x9621    	ADIW       R28, 1
;st7735.c,876 :: 		void print_F(unsigned int x_pos, unsigned int y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, float value, unsigned char points)
0x26E0	0x922F    	PUSH       R2
0x26E2	0x923F    	PUSH       R3
0x26E4	0x929F    	PUSH       R9
0x26E6	0x850C    	LDD        R16, Y+12
0x26E8	0x851D    	LDD        R17, Y+13
0x26EA	0x870C    	STD        Y+12, R16
0x26EC	0x871D    	STD        Y+13, R17
0x26EE	0x850E    	LDD        R16, Y+14
0x26F0	0x851F    	LDD        R17, Y+15
0x26F2	0x8928    	LDD        R18, Y+16
0x26F4	0x8939    	LDD        R19, Y+17
0x26F6	0x870E    	STD        Y+14, R16
0x26F8	0x871F    	STD        Y+15, R17
0x26FA	0x8B28    	STD        Y+16, R18
0x26FC	0x8B39    	STD        Y+17, R19
;st7735.c,878 :: 		signed long tmp = 0x0000;
;st7735.c,880 :: 		tmp = value;
0x26FE	0x850E    	LDD        R16, Y+14
0x2700	0x851F    	LDD        R17, Y+15
0x2702	0x8928    	LDD        R18, Y+16
0x2704	0x8939    	LDD        R19, Y+17
0x2706	0x05CC940E  	CALL       _float_fpint+0
0x270A	0x8308    	STD        Y+0, R16
0x270C	0x8319    	STD        Y+1, R17
0x270E	0x832A    	STD        Y+2, R18
0x2710	0x833B    	STD        Y+3, R19
;st7735.c,881 :: 		print_I(x_pos, y_pos, font_size, colour, back_colour, tmp);
0x2712	0x929F    	PUSH       R9
0x2714	0x928F    	PUSH       R8
0x2716	0x927F    	PUSH       R7
0x2718	0x926F    	PUSH       R6
0x271A	0x925F    	PUSH       R5
0x271C	0x924F    	PUSH       R4
0x271E	0x923F    	PUSH       R3
0x2720	0x922F    	PUSH       R2
0x2722	0x931F    	PUSH       R17
0x2724	0x930F    	PUSH       R16
0x2726	0x850C    	LDD        R16, Y+12
0x2728	0x851D    	LDD        R17, Y+13
0x272A	0x931F    	PUSH       R17
0x272C	0x930F    	PUSH       R16
0x272E	0x060B940E  	CALL       _print_I+0
0x2732	0xB7AD    	IN         R26, SPL+0
0x2734	0xB7BE    	IN         R27, SPL+1
0x2736	0x9614    	ADIW       R26, 4
0x2738	0xBFAD    	OUT        SPL+0, R26
0x273A	0xBFBE    	OUT        SPL+1, R27
0x273C	0x902F    	POP        R2
0x273E	0x903F    	POP        R3
0x2740	0x904F    	POP        R4
0x2742	0x905F    	POP        R5
0x2744	0x906F    	POP        R6
;st7735.c,882 :: 		tmp = ((value - tmp) * 10000);
0x2746	0x8108    	LDD        R16, Y+0
0x2748	0x8119    	LDD        R17, Y+1
0x274A	0x812A    	LDD        R18, Y+2
0x274C	0x813B    	LDD        R19, Y+3
0x274E	0xDA0C    	RCALL      _float_slong2fp+0
0x2750	0x830C    	STD        Y+4, R16
0x2752	0x831D    	STD        Y+5, R17
0x2754	0x832E    	STD        Y+6, R18
0x2756	0x833F    	STD        Y+7, R19
0x2758	0x923F    	PUSH       R3
0x275A	0x922F    	PUSH       R2
0x275C	0x814C    	LDD        R20, Y+4
0x275E	0x815D    	LDD        R21, Y+5
0x2760	0x816E    	LDD        R22, Y+6
0x2762	0x817F    	LDD        R23, Y+7
0x2764	0x850E    	LDD        R16, Y+14
0x2766	0x851F    	LDD        R17, Y+15
0x2768	0x8928    	LDD        R18, Y+16
0x276A	0x8939    	LDD        R19, Y+17
0x276C	0x0601940E  	CALL       _float_fpsub1+0
0x2770	0xE040    	LDI        R20, 0
0x2772	0xE450    	LDI        R21, 64
0x2774	0xE16C    	LDI        R22, 28
0x2776	0xE476    	LDI        R23, 70
0x2778	0xD9CE    	RCALL      _float_fpmul1+0
0x277A	0x902F    	POP        R2
0x277C	0x903F    	POP        R3
0x277E	0x907F    	POP        R7
0x2780	0x908F    	POP        R8
0x2782	0x909F    	POP        R9
0x2784	0x05CC940E  	CALL       _float_fpint+0
0x2788	0x8308    	STD        Y+0, R16
0x278A	0x8319    	STD        Y+1, R17
0x278C	0x832A    	STD        Y+2, R18
0x278E	0x833B    	STD        Y+3, R19
;st7735.c,884 :: 		if(tmp < 0)
0x2790	0xE040    	LDI        R20, 0
0x2792	0xE050    	LDI        R21, 0
0x2794	0xE060    	LDI        R22, 0
0x2796	0xE070    	LDI        R23, 0
0x2798	0x1704    	CP         R16, R20
0x279A	0x0715    	CPC        R17, R21
0x279C	0x0726    	CPC        R18, R22
0x279E	0x0737    	CPC        R19, R23
0x27A0	0xF484    	BRGE       L_print_F161
L__print_F388:
;st7735.c,886 :: 		tmp = -tmp;
0x27A2	0x8008    	LDD        R0, Y+0
0x27A4	0x8019    	LDD        R1, Y+1
0x27A6	0xE000    	LDI        R16, 0
0x27A8	0xE010    	LDI        R17, 0
0x27AA	0x1900    	SUB        R16, R0
0x27AC	0x0911    	SBC        R17, R1
0x27AE	0x800A    	LDD        R0, Y+2
0x27B0	0x801B    	LDD        R1, Y+3
0x27B2	0xE020    	LDI        R18, 0
0x27B4	0xE030    	LDI        R19, 0
0x27B6	0x0920    	SBC        R18, R0
0x27B8	0x0931    	SBC        R19, R1
0x27BA	0x8308    	STD        Y+0, R16
0x27BC	0x8319    	STD        Y+1, R17
0x27BE	0x832A    	STD        Y+2, R18
0x27C0	0x833B    	STD        Y+3, R19
;st7735.c,887 :: 		}
L_print_F161:
;st7735.c,889 :: 		if((value >= 10000) && (value < 100000))
0x27C2	0x929F    	PUSH       R9
0x27C4	0x928F    	PUSH       R8
0x27C6	0x927F    	PUSH       R7
0x27C8	0x923F    	PUSH       R3
0x27CA	0x922F    	PUSH       R2
0x27CC	0xE040    	LDI        R20, 0
0x27CE	0xE450    	LDI        R21, 64
0x27D0	0xE16C    	LDI        R22, 28
0x27D2	0xE476    	LDI        R23, 70
0x27D4	0x850E    	LDD        R16, Y+14
0x27D6	0x851F    	LDD        R17, Y+15
0x27D8	0x8928    	LDD        R18, Y+16
0x27DA	0x8939    	LDD        R19, Y+17
0x27DC	0x08CA940E  	CALL       _float_op_gequ+0
0x27E0	0x2800    	OR         R0, R0
0x27E2	0xE000    	LDI        R16, 0
0x27E4	0xF009    	BREQ       L__print_F389
0x27E6	0xE001    	LDI        R16, 1
L__print_F389:
0x27E8	0x902F    	POP        R2
0x27EA	0x903F    	POP        R3
0x27EC	0x907F    	POP        R7
0x27EE	0x908F    	POP        R8
0x27F0	0x909F    	POP        R9
0x27F2	0x2300    	TST        R16
0x27F4	0xF171    	BREQ       L__print_F270
L__print_F390:
0x27F6	0x929F    	PUSH       R9
0x27F8	0x928F    	PUSH       R8
0x27FA	0x927F    	PUSH       R7
0x27FC	0x923F    	PUSH       R3
0x27FE	0x922F    	PUSH       R2
0x2800	0xE040    	LDI        R20, 0
0x2802	0xE550    	LDI        R21, 80
0x2804	0xEC63    	LDI        R22, 195
0x2806	0xE477    	LDI        R23, 71
0x2808	0x850E    	LDD        R16, Y+14
0x280A	0x851F    	LDD        R17, Y+15
0x280C	0x8928    	LDD        R18, Y+16
0x280E	0x8939    	LDD        R19, Y+17
0x2810	0x05FA940E  	CALL       _float_op_less+0
0x2814	0x2800    	OR         R0, R0
0x2816	0xE000    	LDI        R16, 0
0x2818	0xF009    	BREQ       L__print_F391
0x281A	0xE001    	LDI        R16, 1
L__print_F391:
0x281C	0x902F    	POP        R2
0x281E	0x903F    	POP        R3
0x2820	0x907F    	POP        R7
0x2822	0x908F    	POP        R8
0x2824	0x909F    	POP        R9
0x2826	0x2300    	TST        R16
0x2828	0xF0A1    	BREQ       L__print_F269
L__print_F392:
L__print_F268:
;st7735.c,891 :: 		print_D((x_pos + 36), y_pos, font_size, colour, back_colour, tmp, points);
0x282A	0x0181    	MOVW       R16, R2
0x282C	0x5D0C    	SUBI       R16, 220
0x282E	0x4F1F    	SBCI       R17, 255
0x2830	0x0118    	MOVW       R2, R16
0x2832	0x8108    	LDD        R16, Y+0
0x2834	0x8119    	LDD        R17, Y+1
0x2836	0x931F    	PUSH       R17
0x2838	0x930F    	PUSH       R16
0x283A	0x850C    	LDD        R16, Y+12
0x283C	0x851D    	LDD        R17, Y+13
0x283E	0x931F    	PUSH       R17
0x2840	0x930F    	PUSH       R16
0x2842	0x0849940E  	CALL       _print_D+0
0x2846	0xB7AD    	IN         R26, SPL+0
0x2848	0xB7BE    	IN         R27, SPL+1
0x284A	0x9614    	ADIW       R26, 4
0x284C	0xBFAD    	OUT        SPL+0, R26
0x284E	0xBFBE    	OUT        SPL+1, R27
;st7735.c,892 :: 		}
0x2850	0xC143    	RJMP       L_print_F165
;st7735.c,889 :: 		if((value >= 10000) && (value < 100000))
L__print_F270:
L__print_F269:
;st7735.c,893 :: 		else if((value >= 1000) && (value < 10000))
0x2852	0x929F    	PUSH       R9
0x2854	0x928F    	PUSH       R8
0x2856	0x927F    	PUSH       R7
0x2858	0x923F    	PUSH       R3
0x285A	0x922F    	PUSH       R2
0x285C	0xE040    	LDI        R20, 0
0x285E	0xE050    	LDI        R21, 0
0x2860	0xE76A    	LDI        R22, 122
0x2862	0xE474    	LDI        R23, 68
0x2864	0x850E    	LDD        R16, Y+14
0x2866	0x851F    	LDD        R17, Y+15
0x2868	0x8928    	LDD        R18, Y+16
0x286A	0x8939    	LDD        R19, Y+17
0x286C	0x08CA940E  	CALL       _float_op_gequ+0
0x2870	0x2800    	OR         R0, R0
0x2872	0xE000    	LDI        R16, 0
0x2874	0xF009    	BREQ       L__print_F393
0x2876	0xE001    	LDI        R16, 1
L__print_F393:
0x2878	0x902F    	POP        R2
0x287A	0x903F    	POP        R3
0x287C	0x907F    	POP        R7
0x287E	0x908F    	POP        R8
0x2880	0x909F    	POP        R9
0x2882	0x2300    	TST        R16
0x2884	0xF171    	BREQ       L__print_F272
L__print_F394:
0x2886	0x929F    	PUSH       R9
0x2888	0x928F    	PUSH       R8
0x288A	0x927F    	PUSH       R7
0x288C	0x923F    	PUSH       R3
0x288E	0x922F    	PUSH       R2
0x2890	0xE040    	LDI        R20, 0
0x2892	0xE450    	LDI        R21, 64
0x2894	0xE16C    	LDI        R22, 28
0x2896	0xE476    	LDI        R23, 70
0x2898	0x850E    	LDD        R16, Y+14
0x289A	0x851F    	LDD        R17, Y+15
0x289C	0x8928    	LDD        R18, Y+16
0x289E	0x8939    	LDD        R19, Y+17
0x28A0	0x05FA940E  	CALL       _float_op_less+0
0x28A4	0x2800    	OR         R0, R0
0x28A6	0xE000    	LDI        R16, 0
0x28A8	0xF009    	BREQ       L__print_F395
0x28AA	0xE001    	LDI        R16, 1
L__print_F395:
0x28AC	0x902F    	POP        R2
0x28AE	0x903F    	POP        R3
0x28B0	0x907F    	POP        R7
0x28B2	0x908F    	POP        R8
0x28B4	0x909F    	POP        R9
0x28B6	0x2300    	TST        R16
0x28B8	0xF0A1    	BREQ       L__print_F271
L__print_F396:
L__print_F267:
;st7735.c,895 :: 		print_D((x_pos + 30), y_pos, font_size, colour, back_colour, tmp, points);
0x28BA	0x0181    	MOVW       R16, R2
0x28BC	0x5E02    	SUBI       R16, 226
0x28BE	0x4F1F    	SBCI       R17, 255
0x28C0	0x0118    	MOVW       R2, R16
0x28C2	0x8108    	LDD        R16, Y+0
0x28C4	0x8119    	LDD        R17, Y+1
0x28C6	0x931F    	PUSH       R17
0x28C8	0x930F    	PUSH       R16
0x28CA	0x850C    	LDD        R16, Y+12
0x28CC	0x851D    	LDD        R17, Y+13
0x28CE	0x931F    	PUSH       R17
0x28D0	0x930F    	PUSH       R16
0x28D2	0x0849940E  	CALL       _print_D+0
0x28D6	0xB7AD    	IN         R26, SPL+0
0x28D8	0xB7BE    	IN         R27, SPL+1
0x28DA	0x9614    	ADIW       R26, 4
0x28DC	0xBFAD    	OUT        SPL+0, R26
0x28DE	0xBFBE    	OUT        SPL+1, R27
;st7735.c,896 :: 		}
0x28E0	0xC0FB    	RJMP       L_print_F169
;st7735.c,893 :: 		else if((value >= 1000) && (value < 10000))
L__print_F272:
L__print_F271:
;st7735.c,897 :: 		else if((value >= 100) && (value < 1000))
0x28E2	0x929F    	PUSH       R9
0x28E4	0x928F    	PUSH       R8
0x28E6	0x927F    	PUSH       R7
0x28E8	0x923F    	PUSH       R3
0x28EA	0x922F    	PUSH       R2
0x28EC	0xE040    	LDI        R20, 0
0x28EE	0xE050    	LDI        R21, 0
0x28F0	0xEC68    	LDI        R22, 200
0x28F2	0xE472    	LDI        R23, 66
0x28F4	0x850E    	LDD        R16, Y+14
0x28F6	0x851F    	LDD        R17, Y+15
0x28F8	0x8928    	LDD        R18, Y+16
0x28FA	0x8939    	LDD        R19, Y+17
0x28FC	0x08CA940E  	CALL       _float_op_gequ+0
0x2900	0x2800    	OR         R0, R0
0x2902	0xE000    	LDI        R16, 0
0x2904	0xF009    	BREQ       L__print_F397
0x2906	0xE001    	LDI        R16, 1
L__print_F397:
0x2908	0x902F    	POP        R2
0x290A	0x903F    	POP        R3
0x290C	0x907F    	POP        R7
0x290E	0x908F    	POP        R8
0x2910	0x909F    	POP        R9
0x2912	0x2300    	TST        R16
0x2914	0xF171    	BREQ       L__print_F274
L__print_F398:
0x2916	0x929F    	PUSH       R9
0x2918	0x928F    	PUSH       R8
0x291A	0x927F    	PUSH       R7
0x291C	0x923F    	PUSH       R3
0x291E	0x922F    	PUSH       R2
0x2920	0xE040    	LDI        R20, 0
0x2922	0xE050    	LDI        R21, 0
0x2924	0xE76A    	LDI        R22, 122
0x2926	0xE474    	LDI        R23, 68
0x2928	0x850E    	LDD        R16, Y+14
0x292A	0x851F    	LDD        R17, Y+15
0x292C	0x8928    	LDD        R18, Y+16
0x292E	0x8939    	LDD        R19, Y+17
0x2930	0x05FA940E  	CALL       _float_op_less+0
0x2934	0x2800    	OR         R0, R0
0x2936	0xE000    	LDI        R16, 0
0x2938	0xF009    	BREQ       L__print_F399
0x293A	0xE001    	LDI        R16, 1
L__print_F399:
0x293C	0x902F    	POP        R2
0x293E	0x903F    	POP        R3
0x2940	0x907F    	POP        R7
0x2942	0x908F    	POP        R8
0x2944	0x909F    	POP        R9
0x2946	0x2300    	TST        R16
0x2948	0xF0A1    	BREQ       L__print_F273
L__print_F400:
L__print_F266:
;st7735.c,899 :: 		print_D((x_pos + 24), y_pos, font_size, colour, back_colour, tmp, points);
0x294A	0x0181    	MOVW       R16, R2
0x294C	0x5E08    	SUBI       R16, 232
0x294E	0x4F1F    	SBCI       R17, 255
0x2950	0x0118    	MOVW       R2, R16
0x2952	0x8108    	LDD        R16, Y+0
0x2954	0x8119    	LDD        R17, Y+1
0x2956	0x931F    	PUSH       R17
0x2958	0x930F    	PUSH       R16
0x295A	0x850C    	LDD        R16, Y+12
0x295C	0x851D    	LDD        R17, Y+13
0x295E	0x931F    	PUSH       R17
0x2960	0x930F    	PUSH       R16
0x2962	0x0849940E  	CALL       _print_D+0
0x2966	0xB7AD    	IN         R26, SPL+0
0x2968	0xB7BE    	IN         R27, SPL+1
0x296A	0x9614    	ADIW       R26, 4
0x296C	0xBFAD    	OUT        SPL+0, R26
0x296E	0xBFBE    	OUT        SPL+1, R27
;st7735.c,900 :: 		}
0x2970	0xC0B3    	RJMP       L_print_F173
;st7735.c,897 :: 		else if((value >= 100) && (value < 1000))
L__print_F274:
L__print_F273:
;st7735.c,901 :: 		else if((value >= 10) && (value < 100))
0x2972	0x929F    	PUSH       R9
0x2974	0x928F    	PUSH       R8
0x2976	0x927F    	PUSH       R7
0x2978	0x923F    	PUSH       R3
0x297A	0x922F    	PUSH       R2
0x297C	0xE040    	LDI        R20, 0
0x297E	0xE050    	LDI        R21, 0
0x2980	0xE260    	LDI        R22, 32
0x2982	0xE471    	LDI        R23, 65
0x2984	0x850E    	LDD        R16, Y+14
0x2986	0x851F    	LDD        R17, Y+15
0x2988	0x8928    	LDD        R18, Y+16
0x298A	0x8939    	LDD        R19, Y+17
0x298C	0x08CA940E  	CALL       _float_op_gequ+0
0x2990	0x2800    	OR         R0, R0
0x2992	0xE000    	LDI        R16, 0
0x2994	0xF009    	BREQ       L__print_F401
0x2996	0xE001    	LDI        R16, 1
L__print_F401:
0x2998	0x902F    	POP        R2
0x299A	0x903F    	POP        R3
0x299C	0x907F    	POP        R7
0x299E	0x908F    	POP        R8
0x29A0	0x909F    	POP        R9
0x29A2	0x2300    	TST        R16
0x29A4	0xF171    	BREQ       L__print_F276
L__print_F402:
0x29A6	0x929F    	PUSH       R9
0x29A8	0x928F    	PUSH       R8
0x29AA	0x927F    	PUSH       R7
0x29AC	0x923F    	PUSH       R3
0x29AE	0x922F    	PUSH       R2
0x29B0	0xE040    	LDI        R20, 0
0x29B2	0xE050    	LDI        R21, 0
0x29B4	0xEC68    	LDI        R22, 200
0x29B6	0xE472    	LDI        R23, 66
0x29B8	0x850E    	LDD        R16, Y+14
0x29BA	0x851F    	LDD        R17, Y+15
0x29BC	0x8928    	LDD        R18, Y+16
0x29BE	0x8939    	LDD        R19, Y+17
0x29C0	0x05FA940E  	CALL       _float_op_less+0
0x29C4	0x2800    	OR         R0, R0
0x29C6	0xE000    	LDI        R16, 0
0x29C8	0xF009    	BREQ       L__print_F403
0x29CA	0xE001    	LDI        R16, 1
L__print_F403:
0x29CC	0x902F    	POP        R2
0x29CE	0x903F    	POP        R3
0x29D0	0x907F    	POP        R7
0x29D2	0x908F    	POP        R8
0x29D4	0x909F    	POP        R9
0x29D6	0x2300    	TST        R16
0x29D8	0xF0A1    	BREQ       L__print_F275
L__print_F404:
L__print_F265:
;st7735.c,903 :: 		print_D((x_pos + 18), y_pos, font_size, colour, back_colour, tmp, points);
0x29DA	0x0181    	MOVW       R16, R2
0x29DC	0x5E0E    	SUBI       R16, 238
0x29DE	0x4F1F    	SBCI       R17, 255
0x29E0	0x0118    	MOVW       R2, R16
0x29E2	0x8108    	LDD        R16, Y+0
0x29E4	0x8119    	LDD        R17, Y+1
0x29E6	0x931F    	PUSH       R17
0x29E8	0x930F    	PUSH       R16
0x29EA	0x850C    	LDD        R16, Y+12
0x29EC	0x851D    	LDD        R17, Y+13
0x29EE	0x931F    	PUSH       R17
0x29F0	0x930F    	PUSH       R16
0x29F2	0x0849940E  	CALL       _print_D+0
0x29F6	0xB7AD    	IN         R26, SPL+0
0x29F8	0xB7BE    	IN         R27, SPL+1
0x29FA	0x9614    	ADIW       R26, 4
0x29FC	0xBFAD    	OUT        SPL+0, R26
0x29FE	0xBFBE    	OUT        SPL+1, R27
;st7735.c,904 :: 		}
0x2A00	0xC06B    	RJMP       L_print_F177
;st7735.c,901 :: 		else if((value >= 10) && (value < 100))
L__print_F276:
L__print_F275:
;st7735.c,905 :: 		else if(value < 10)
0x2A02	0x929F    	PUSH       R9
0x2A04	0x928F    	PUSH       R8
0x2A06	0x927F    	PUSH       R7
0x2A08	0x923F    	PUSH       R3
0x2A0A	0x922F    	PUSH       R2
0x2A0C	0xE040    	LDI        R20, 0
0x2A0E	0xE050    	LDI        R21, 0
0x2A10	0xE260    	LDI        R22, 32
0x2A12	0xE471    	LDI        R23, 65
0x2A14	0x850E    	LDD        R16, Y+14
0x2A16	0x851F    	LDD        R17, Y+15
0x2A18	0x8928    	LDD        R18, Y+16
0x2A1A	0x8939    	LDD        R19, Y+17
0x2A1C	0x05FA940E  	CALL       _float_op_less+0
0x2A20	0x2800    	OR         R0, R0
0x2A22	0xE000    	LDI        R16, 0
0x2A24	0xF009    	BREQ       L__print_F405
0x2A26	0xE001    	LDI        R16, 1
L__print_F405:
0x2A28	0x902F    	POP        R2
0x2A2A	0x903F    	POP        R3
0x2A2C	0x907F    	POP        R7
0x2A2E	0x908F    	POP        R8
0x2A30	0x909F    	POP        R9
0x2A32	0x2300    	TST        R16
0x2A34	0xF409    	BRNE       L__print_F406
0x2A36	0xC050    	RJMP       L_print_F178
L__print_F406:
;st7735.c,907 :: 		print_D((x_pos + 12), y_pos, font_size, colour, back_colour, tmp, points);
0x2A38	0x0181    	MOVW       R16, R2
0x2A3A	0x5F04    	SUBI       R16, 244
0x2A3C	0x4F1F    	SBCI       R17, 255
0x2A3E	0x926F    	PUSH       R6
0x2A40	0x925F    	PUSH       R5
0x2A42	0x924F    	PUSH       R4
0x2A44	0x923F    	PUSH       R3
0x2A46	0x922F    	PUSH       R2
0x2A48	0x0118    	MOVW       R2, R16
0x2A4A	0x8108    	LDD        R16, Y+0
0x2A4C	0x8119    	LDD        R17, Y+1
0x2A4E	0x931F    	PUSH       R17
0x2A50	0x930F    	PUSH       R16
0x2A52	0x850C    	LDD        R16, Y+12
0x2A54	0x851D    	LDD        R17, Y+13
0x2A56	0x931F    	PUSH       R17
0x2A58	0x930F    	PUSH       R16
0x2A5A	0x0849940E  	CALL       _print_D+0
0x2A5E	0xB7AD    	IN         R26, SPL+0
0x2A60	0xB7BE    	IN         R27, SPL+1
0x2A62	0x9614    	ADIW       R26, 4
0x2A64	0xBFAD    	OUT        SPL+0, R26
0x2A66	0xBFBE    	OUT        SPL+1, R27
0x2A68	0x902F    	POP        R2
0x2A6A	0x903F    	POP        R3
0x2A6C	0x904F    	POP        R4
0x2A6E	0x905F    	POP        R5
0x2A70	0x906F    	POP        R6
;st7735.c,909 :: 		if((value) < 0)
0x2A72	0x928F    	PUSH       R8
0x2A74	0x927F    	PUSH       R7
0x2A76	0x923F    	PUSH       R3
0x2A78	0x922F    	PUSH       R2
0x2A7A	0xE040    	LDI        R20, 0
0x2A7C	0xE050    	LDI        R21, 0
0x2A7E	0xE060    	LDI        R22, 0
0x2A80	0xE070    	LDI        R23, 0
0x2A82	0x850E    	LDD        R16, Y+14
0x2A84	0x851F    	LDD        R17, Y+15
0x2A86	0x8928    	LDD        R18, Y+16
0x2A88	0x8939    	LDD        R19, Y+17
0x2A8A	0x05FA940E  	CALL       _float_op_less+0
0x2A8E	0x2800    	OR         R0, R0
0x2A90	0xE000    	LDI        R16, 0
0x2A92	0xF009    	BREQ       L__print_F407
0x2A94	0xE001    	LDI        R16, 1
L__print_F407:
0x2A96	0x902F    	POP        R2
0x2A98	0x903F    	POP        R3
0x2A9A	0x907F    	POP        R7
0x2A9C	0x908F    	POP        R8
0x2A9E	0x2300    	TST        R16
0x2AA0	0xF071    	BREQ       L_print_F179
L__print_F408:
;st7735.c,911 :: 		print_char(x_pos, y_pos, font_size, colour, back_colour, 0x2D);
0x2AA2	0xE2BD    	LDI        R27, 45
0x2AA4	0x2E9B    	MOV        R9, R27
0x2AA6	0x850C    	LDD        R16, Y+12
0x2AA8	0x851D    	LDD        R17, Y+13
0x2AAA	0x931F    	PUSH       R17
0x2AAC	0x930F    	PUSH       R16
0x2AAE	0x04FA940E  	CALL       _print_char+0
0x2AB2	0xB7AD    	IN         R26, SPL+0
0x2AB4	0xB7BE    	IN         R27, SPL+1
0x2AB6	0x9612    	ADIW       R26, 2
0x2AB8	0xBFAD    	OUT        SPL+0, R26
0x2ABA	0xBFBE    	OUT        SPL+1, R27
;st7735.c,912 :: 		}
0x2ABC	0xC00D    	RJMP       L_print_F180
L_print_F179:
;st7735.c,915 :: 		print_char(x_pos, y_pos, font_size, colour, back_colour, 0x20);
0x2ABE	0xE2B0    	LDI        R27, 32
0x2AC0	0x2E9B    	MOV        R9, R27
0x2AC2	0x850C    	LDD        R16, Y+12
0x2AC4	0x851D    	LDD        R17, Y+13
0x2AC6	0x931F    	PUSH       R17
0x2AC8	0x930F    	PUSH       R16
0x2ACA	0x04FA940E  	CALL       _print_char+0
0x2ACE	0xB7AD    	IN         R26, SPL+0
0x2AD0	0xB7BE    	IN         R27, SPL+1
0x2AD2	0x9612    	ADIW       R26, 2
0x2AD4	0xBFAD    	OUT        SPL+0, R26
0x2AD6	0xBFBE    	OUT        SPL+1, R27
;st7735.c,916 :: 		}
L_print_F180:
;st7735.c,917 :: 		}
L_print_F178:
L_print_F177:
L_print_F173:
L_print_F169:
L_print_F165:
;st7735.c,918 :: 		}
L_end_print_F:
0x2AD8	0x909F    	POP        R9
0x2ADA	0x903F    	POP        R3
0x2ADC	0x902F    	POP        R2
0x2ADE	0x9627    	ADIW       R28, 7
0x2AE0	0xBFCD    	OUT        SPL+0, R28
0x2AE2	0xBFDE    	OUT        SPL+1, R29
0x2AE4	0x91DF    	POP        R29
0x2AE6	0x91CF    	POP        R28
0x2AE8	0x9508    	RET
; end of _print_F
_print_I:
0x0C16	0x93CF    	PUSH       R28
0x0C18	0x93DF    	PUSH       R29
0x0C1A	0xB7CD    	IN         R28, SPL+0
0x0C1C	0xB7DE    	IN         R29, SPL+1
0x0C1E	0x972A    	SBIW       R28, 10
0x0C20	0xBFCD    	OUT        SPL+0, R28
0x0C22	0xBFDE    	OUT        SPL+1, R29
0x0C24	0x9621    	ADIW       R28, 1
;st7735.c,791 :: 		void print_I(unsigned int x_pos, unsigned int y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, signed int value)
0x0C26	0x850E    	LDD        R16, Y+14
0x0C28	0x851F    	LDD        R17, Y+15
0x0C2A	0x870E    	STD        Y+14, R16
0x0C2C	0x871F    	STD        Y+15, R17
0x0C2E	0x8908    	LDD        R16, Y+16
0x0C30	0x8919    	LDD        R17, Y+17
0x0C32	0x8B08    	STD        Y+16, R16
0x0C34	0x8B19    	STD        Y+17, R17
;st7735.c,793 :: 		unsigned char ch[6] = {0x20, 0x20, 0x20, 0x20, 0x20, 0x20};
0x0C36	0xE2B0    	LDI        R27, 32
0x0C38	0x83B8    	STD        Y+0, R27
0x0C3A	0xE2B0    	LDI        R27, 32
0x0C3C	0x83B9    	STD        Y+1, R27
0x0C3E	0xE2B0    	LDI        R27, 32
0x0C40	0x83BA    	STD        Y+2, R27
0x0C42	0xE2B0    	LDI        R27, 32
0x0C44	0x83BB    	STD        Y+3, R27
0x0C46	0xE2B0    	LDI        R27, 32
0x0C48	0x83BC    	STD        Y+4, R27
0x0C4A	0xE2B0    	LDI        R27, 32
0x0C4C	0x83BD    	STD        Y+5, R27
;st7735.c,795 :: 		if(value < 0)
0x0C4E	0x8928    	LDD        R18, Y+16
0x0C50	0x8939    	LDD        R19, Y+17
0x0C52	0xE000    	LDI        R16, 0
0x0C54	0xE010    	LDI        R17, 0
0x0C56	0x1720    	CP         R18, R16
0x0C58	0x0731    	CPC        R19, R17
0x0C5A	0xF464    	BRGE       L_print_I142
L__print_I375:
;st7735.c,797 :: 		ch[0] = 0x2D;
0x0C5C	0x01FE    	MOVW       R30, R28
0x0C5E	0xE2BD    	LDI        R27, 45
0x0C60	0x83B0    	ST         Z, R27
;st7735.c,798 :: 		value = -value;
0x0C62	0x8808    	LDD        R0, Y+16
0x0C64	0x8819    	LDD        R1, Y+17
0x0C66	0xE000    	LDI        R16, 0
0x0C68	0xE010    	LDI        R17, 0
0x0C6A	0x1900    	SUB        R16, R0
0x0C6C	0x0911    	SBC        R17, R1
0x0C6E	0x8B08    	STD        Y+16, R16
0x0C70	0x8B19    	STD        Y+17, R17
;st7735.c,799 :: 		}
0x0C72	0xC003    	RJMP       L_print_I143
L_print_I142:
;st7735.c,802 :: 		ch[0] = 0x20;
0x0C74	0x01FE    	MOVW       R30, R28
0x0C76	0xE2B0    	LDI        R27, 32
0x0C78	0x83B0    	ST         Z, R27
;st7735.c,803 :: 		}
L_print_I143:
;st7735.c,805 :: 		if(value > 9999)
0x0C7A	0x8928    	LDD        R18, Y+16
0x0C7C	0x8939    	LDD        R19, Y+17
0x0C7E	0xE00F    	LDI        R16, 15
0x0C80	0xE217    	LDI        R17, 39
0x0C82	0x1702    	CP         R16, R18
0x0C84	0x0713    	CPC        R17, R19
0x0C86	0xF00C    	BRLT       L__print_I376
0x0C88	0xC070    	RJMP       L_print_I144
L__print_I376:
;st7735.c,807 :: 		ch[1] = ((value / 10000) + 0x30);
0x0C8A	0x018E    	MOVW       R16, R28
0x0C8C	0x5F0F    	SUBI       R16, 255
0x0C8E	0x4F1F    	SBCI       R17, 255
0x0C90	0x8708    	STD        Y+8, R16
0x0C92	0x8719    	STD        Y+9, R17
0x0C94	0x928F    	PUSH       R8
0x0C96	0x927F    	PUSH       R7
0x0C98	0x926F    	PUSH       R6
0x0C9A	0x925F    	PUSH       R5
0x0C9C	0x924F    	PUSH       R4
0x0C9E	0x923F    	PUSH       R3
0x0CA0	0x922F    	PUSH       R2
0x0CA2	0xE140    	LDI        R20, 16
0x0CA4	0xE257    	LDI        R21, 39
0x0CA6	0x8908    	LDD        R16, Y+16
0x0CA8	0x8919    	LDD        R17, Y+17
0x0CAA	0xDDEE    	RCALL      _Div_16x16_S+0
0x0CAC	0x018B    	MOVW       R16, R22
0x0CAE	0x2F20    	MOV        R18, R16
0x0CB0	0x5D20    	SUBI       R18, 208
0x0CB2	0x8508    	LDD        R16, Y+8
0x0CB4	0x8519    	LDD        R17, Y+9
0x0CB6	0x01F8    	MOVW       R30, R16
0x0CB8	0x8320    	ST         Z, R18
;st7735.c,808 :: 		ch[2] = (((value % 10000)/ 1000) + 0x30);
0x0CBA	0x018E    	MOVW       R16, R28
0x0CBC	0x5F0E    	SUBI       R16, 254
0x0CBE	0x4F1F    	SBCI       R17, 255
0x0CC0	0x8708    	STD        Y+8, R16
0x0CC2	0x8719    	STD        Y+9, R17
0x0CC4	0xE140    	LDI        R20, 16
0x0CC6	0xE257    	LDI        R21, 39
0x0CC8	0x8908    	LDD        R16, Y+16
0x0CCA	0x8919    	LDD        R17, Y+17
0x0CCC	0xDDDD    	RCALL      _Div_16x16_S+0
0x0CCE	0x018C    	MOVW       R16, R24
0x0CD0	0xEE48    	LDI        R20, 232
0x0CD2	0xE053    	LDI        R21, 3
0x0CD4	0xDDD9    	RCALL      _Div_16x16_S+0
0x0CD6	0x018B    	MOVW       R16, R22
0x0CD8	0x2F20    	MOV        R18, R16
0x0CDA	0x5D20    	SUBI       R18, 208
0x0CDC	0x8508    	LDD        R16, Y+8
0x0CDE	0x8519    	LDD        R17, Y+9
0x0CE0	0x01F8    	MOVW       R30, R16
0x0CE2	0x8320    	ST         Z, R18
;st7735.c,809 :: 		ch[3] = (((value % 1000) / 100) + 0x30);
0x0CE4	0x018E    	MOVW       R16, R28
0x0CE6	0x5F0D    	SUBI       R16, 253
0x0CE8	0x4F1F    	SBCI       R17, 255
0x0CEA	0x8708    	STD        Y+8, R16
0x0CEC	0x8719    	STD        Y+9, R17
0x0CEE	0xEE48    	LDI        R20, 232
0x0CF0	0xE053    	LDI        R21, 3
0x0CF2	0x8908    	LDD        R16, Y+16
0x0CF4	0x8919    	LDD        R17, Y+17
0x0CF6	0xDDC8    	RCALL      _Div_16x16_S+0
0x0CF8	0x018C    	MOVW       R16, R24
0x0CFA	0xE644    	LDI        R20, 100
0x0CFC	0xE050    	LDI        R21, 0
0x0CFE	0xDDC4    	RCALL      _Div_16x16_S+0
0x0D00	0x018B    	MOVW       R16, R22
0x0D02	0x2F20    	MOV        R18, R16
0x0D04	0x5D20    	SUBI       R18, 208
0x0D06	0x8508    	LDD        R16, Y+8
0x0D08	0x8519    	LDD        R17, Y+9
0x0D0A	0x01F8    	MOVW       R30, R16
0x0D0C	0x8320    	ST         Z, R18
;st7735.c,810 :: 		ch[4] = (((value % 100) / 10) + 0x30);
0x0D0E	0x018E    	MOVW       R16, R28
0x0D10	0x5F0C    	SUBI       R16, 252
0x0D12	0x4F1F    	SBCI       R17, 255
0x0D14	0x8708    	STD        Y+8, R16
0x0D16	0x8719    	STD        Y+9, R17
0x0D18	0xE644    	LDI        R20, 100
0x0D1A	0xE050    	LDI        R21, 0
0x0D1C	0x8908    	LDD        R16, Y+16
0x0D1E	0x8919    	LDD        R17, Y+17
0x0D20	0xDDB3    	RCALL      _Div_16x16_S+0
0x0D22	0x018C    	MOVW       R16, R24
0x0D24	0xE04A    	LDI        R20, 10
0x0D26	0xE050    	LDI        R21, 0
0x0D28	0xDDAF    	RCALL      _Div_16x16_S+0
0x0D2A	0x018B    	MOVW       R16, R22
0x0D2C	0x2F20    	MOV        R18, R16
0x0D2E	0x5D20    	SUBI       R18, 208
0x0D30	0x8508    	LDD        R16, Y+8
0x0D32	0x8519    	LDD        R17, Y+9
0x0D34	0x01F8    	MOVW       R30, R16
0x0D36	0x8320    	ST         Z, R18
;st7735.c,811 :: 		ch[5] = ((value % 10) + 0x30);
0x0D38	0x018E    	MOVW       R16, R28
0x0D3A	0x5F0B    	SUBI       R16, 251
0x0D3C	0x4F1F    	SBCI       R17, 255
0x0D3E	0x8708    	STD        Y+8, R16
0x0D40	0x8719    	STD        Y+9, R17
0x0D42	0xE04A    	LDI        R20, 10
0x0D44	0xE050    	LDI        R21, 0
0x0D46	0x8908    	LDD        R16, Y+16
0x0D48	0x8919    	LDD        R17, Y+17
0x0D4A	0xDD9E    	RCALL      _Div_16x16_S+0
0x0D4C	0x018C    	MOVW       R16, R24
0x0D4E	0x902F    	POP        R2
0x0D50	0x903F    	POP        R3
0x0D52	0x904F    	POP        R4
0x0D54	0x905F    	POP        R5
0x0D56	0x906F    	POP        R6
0x0D58	0x907F    	POP        R7
0x0D5A	0x908F    	POP        R8
0x0D5C	0x2F20    	MOV        R18, R16
0x0D5E	0x5D20    	SUBI       R18, 208
0x0D60	0x8508    	LDD        R16, Y+8
0x0D62	0x8519    	LDD        R17, Y+9
0x0D64	0x01F8    	MOVW       R30, R16
0x0D66	0x8320    	ST         Z, R18
;st7735.c,812 :: 		}
0x0D68	0xC15F    	RJMP       L_print_I145
L_print_I144:
;st7735.c,814 :: 		else if((value > 999) && (value <= 9999))
0x0D6A	0x8928    	LDD        R18, Y+16
0x0D6C	0x8939    	LDD        R19, Y+17
0x0D6E	0xEE07    	LDI        R16, 231
0x0D70	0xE013    	LDI        R17, 3
0x0D72	0x1702    	CP         R16, R18
0x0D74	0x0713    	CPC        R17, R19
0x0D76	0xF00C    	BRLT       L__print_I377
0x0D78	0xC06C    	RJMP       L__print_I260
L__print_I377:
0x0D7A	0x8928    	LDD        R18, Y+16
0x0D7C	0x8939    	LDD        R19, Y+17
0x0D7E	0xE00F    	LDI        R16, 15
0x0D80	0xE217    	LDI        R17, 39
0x0D82	0x1702    	CP         R16, R18
0x0D84	0x0713    	CPC        R17, R19
0x0D86	0xF40C    	BRGE       L__print_I378
0x0D88	0xC064    	RJMP       L__print_I259
L__print_I378:
L__print_I258:
;st7735.c,816 :: 		ch[1] = (((value % 10000)/ 1000) + 0x30);
0x0D8A	0x018E    	MOVW       R16, R28
0x0D8C	0x5F0F    	SUBI       R16, 255
0x0D8E	0x4F1F    	SBCI       R17, 255
0x0D90	0x8708    	STD        Y+8, R16
0x0D92	0x8719    	STD        Y+9, R17
0x0D94	0x928F    	PUSH       R8
0x0D96	0x927F    	PUSH       R7
0x0D98	0x926F    	PUSH       R6
0x0D9A	0x925F    	PUSH       R5
0x0D9C	0x924F    	PUSH       R4
0x0D9E	0x923F    	PUSH       R3
0x0DA0	0x922F    	PUSH       R2
0x0DA2	0xE140    	LDI        R20, 16
0x0DA4	0xE257    	LDI        R21, 39
0x0DA6	0x8908    	LDD        R16, Y+16
0x0DA8	0x8919    	LDD        R17, Y+17
0x0DAA	0xDD6E    	RCALL      _Div_16x16_S+0
0x0DAC	0x018C    	MOVW       R16, R24
0x0DAE	0xEE48    	LDI        R20, 232
0x0DB0	0xE053    	LDI        R21, 3
0x0DB2	0xDD6A    	RCALL      _Div_16x16_S+0
0x0DB4	0x018B    	MOVW       R16, R22
0x0DB6	0x2F20    	MOV        R18, R16
0x0DB8	0x5D20    	SUBI       R18, 208
0x0DBA	0x8508    	LDD        R16, Y+8
0x0DBC	0x8519    	LDD        R17, Y+9
0x0DBE	0x01F8    	MOVW       R30, R16
0x0DC0	0x8320    	ST         Z, R18
;st7735.c,817 :: 		ch[2] = (((value % 1000) / 100) + 0x30);
0x0DC2	0x018E    	MOVW       R16, R28
0x0DC4	0x5F0E    	SUBI       R16, 254
0x0DC6	0x4F1F    	SBCI       R17, 255
0x0DC8	0x8708    	STD        Y+8, R16
0x0DCA	0x8719    	STD        Y+9, R17
0x0DCC	0xEE48    	LDI        R20, 232
0x0DCE	0xE053    	LDI        R21, 3
0x0DD0	0x8908    	LDD        R16, Y+16
0x0DD2	0x8919    	LDD        R17, Y+17
0x0DD4	0xDD59    	RCALL      _Div_16x16_S+0
0x0DD6	0x018C    	MOVW       R16, R24
0x0DD8	0xE644    	LDI        R20, 100
0x0DDA	0xE050    	LDI        R21, 0
0x0DDC	0xDD55    	RCALL      _Div_16x16_S+0
0x0DDE	0x018B    	MOVW       R16, R22
0x0DE0	0x2F20    	MOV        R18, R16
0x0DE2	0x5D20    	SUBI       R18, 208
0x0DE4	0x8508    	LDD        R16, Y+8
0x0DE6	0x8519    	LDD        R17, Y+9
0x0DE8	0x01F8    	MOVW       R30, R16
0x0DEA	0x8320    	ST         Z, R18
;st7735.c,818 :: 		ch[3] = (((value % 100) / 10) + 0x30);
0x0DEC	0x018E    	MOVW       R16, R28
0x0DEE	0x5F0D    	SUBI       R16, 253
0x0DF0	0x4F1F    	SBCI       R17, 255
0x0DF2	0x8708    	STD        Y+8, R16
0x0DF4	0x8719    	STD        Y+9, R17
0x0DF6	0xE644    	LDI        R20, 100
0x0DF8	0xE050    	LDI        R21, 0
0x0DFA	0x8908    	LDD        R16, Y+16
0x0DFC	0x8919    	LDD        R17, Y+17
0x0DFE	0xDD44    	RCALL      _Div_16x16_S+0
0x0E00	0x018C    	MOVW       R16, R24
0x0E02	0xE04A    	LDI        R20, 10
0x0E04	0xE050    	LDI        R21, 0
0x0E06	0xDD40    	RCALL      _Div_16x16_S+0
0x0E08	0x018B    	MOVW       R16, R22
0x0E0A	0x2F20    	MOV        R18, R16
0x0E0C	0x5D20    	SUBI       R18, 208
0x0E0E	0x8508    	LDD        R16, Y+8
0x0E10	0x8519    	LDD        R17, Y+9
0x0E12	0x01F8    	MOVW       R30, R16
0x0E14	0x8320    	ST         Z, R18
;st7735.c,819 :: 		ch[4] = ((value % 10) + 0x30);
0x0E16	0x018E    	MOVW       R16, R28
0x0E18	0x5F0C    	SUBI       R16, 252
0x0E1A	0x4F1F    	SBCI       R17, 255
0x0E1C	0x8708    	STD        Y+8, R16
0x0E1E	0x8719    	STD        Y+9, R17
0x0E20	0xE04A    	LDI        R20, 10
0x0E22	0xE050    	LDI        R21, 0
0x0E24	0x8908    	LDD        R16, Y+16
0x0E26	0x8919    	LDD        R17, Y+17
0x0E28	0xDD2F    	RCALL      _Div_16x16_S+0
0x0E2A	0x018C    	MOVW       R16, R24
0x0E2C	0x902F    	POP        R2
0x0E2E	0x903F    	POP        R3
0x0E30	0x904F    	POP        R4
0x0E32	0x905F    	POP        R5
0x0E34	0x906F    	POP        R6
0x0E36	0x907F    	POP        R7
0x0E38	0x908F    	POP        R8
0x0E3A	0x2F20    	MOV        R18, R16
0x0E3C	0x5D20    	SUBI       R18, 208
0x0E3E	0x8508    	LDD        R16, Y+8
0x0E40	0x8519    	LDD        R17, Y+9
0x0E42	0x01F8    	MOVW       R30, R16
0x0E44	0x8320    	ST         Z, R18
;st7735.c,820 :: 		ch[5] = 0x20;
0x0E46	0x018E    	MOVW       R16, R28
0x0E48	0x01F8    	MOVW       R30, R16
0x0E4A	0x9635    	ADIW       R30, 5
0x0E4C	0xE2B0    	LDI        R27, 32
0x0E4E	0x83B0    	ST         Z, R27
;st7735.c,821 :: 		}
0x0E50	0xC0EB    	RJMP       L_print_I149
;st7735.c,814 :: 		else if((value > 999) && (value <= 9999))
L__print_I260:
L__print_I259:
;st7735.c,822 :: 		else if((value > 99) && (value <= 999))
0x0E52	0x8928    	LDD        R18, Y+16
0x0E54	0x8939    	LDD        R19, Y+17
0x0E56	0xE603    	LDI        R16, 99
0x0E58	0xE010    	LDI        R17, 0
0x0E5A	0x1702    	CP         R16, R18
0x0E5C	0x0713    	CPC        R17, R19
0x0E5E	0xF00C    	BRLT       L__print_I379
0x0E60	0xC05C    	RJMP       L__print_I262
L__print_I379:
0x0E62	0x8928    	LDD        R18, Y+16
0x0E64	0x8939    	LDD        R19, Y+17
0x0E66	0xEE07    	LDI        R16, 231
0x0E68	0xE013    	LDI        R17, 3
0x0E6A	0x1702    	CP         R16, R18
0x0E6C	0x0713    	CPC        R17, R19
0x0E6E	0xF40C    	BRGE       L__print_I380
0x0E70	0xC054    	RJMP       L__print_I261
L__print_I380:
L__print_I257:
;st7735.c,824 :: 		ch[1] = (((value % 1000) / 100) + 0x30);
0x0E72	0x018E    	MOVW       R16, R28
0x0E74	0x5F0F    	SUBI       R16, 255
0x0E76	0x4F1F    	SBCI       R17, 255
0x0E78	0x8708    	STD        Y+8, R16
0x0E7A	0x8719    	STD        Y+9, R17
0x0E7C	0x928F    	PUSH       R8
0x0E7E	0x927F    	PUSH       R7
0x0E80	0x926F    	PUSH       R6
0x0E82	0x925F    	PUSH       R5
0x0E84	0x924F    	PUSH       R4
0x0E86	0x923F    	PUSH       R3
0x0E88	0x922F    	PUSH       R2
0x0E8A	0xEE48    	LDI        R20, 232
0x0E8C	0xE053    	LDI        R21, 3
0x0E8E	0x8908    	LDD        R16, Y+16
0x0E90	0x8919    	LDD        R17, Y+17
0x0E92	0xDCFA    	RCALL      _Div_16x16_S+0
0x0E94	0x018C    	MOVW       R16, R24
0x0E96	0xE644    	LDI        R20, 100
0x0E98	0xE050    	LDI        R21, 0
0x0E9A	0xDCF6    	RCALL      _Div_16x16_S+0
0x0E9C	0x018B    	MOVW       R16, R22
0x0E9E	0x2F20    	MOV        R18, R16
0x0EA0	0x5D20    	SUBI       R18, 208
0x0EA2	0x8508    	LDD        R16, Y+8
0x0EA4	0x8519    	LDD        R17, Y+9
0x0EA6	0x01F8    	MOVW       R30, R16
0x0EA8	0x8320    	ST         Z, R18
;st7735.c,825 :: 		ch[2] = (((value % 100) / 10) + 0x30);
0x0EAA	0x018E    	MOVW       R16, R28
0x0EAC	0x5F0E    	SUBI       R16, 254
0x0EAE	0x4F1F    	SBCI       R17, 255
0x0EB0	0x8708    	STD        Y+8, R16
0x0EB2	0x8719    	STD        Y+9, R17
0x0EB4	0xE644    	LDI        R20, 100
0x0EB6	0xE050    	LDI        R21, 0
0x0EB8	0x8908    	LDD        R16, Y+16
0x0EBA	0x8919    	LDD        R17, Y+17
0x0EBC	0xDCE5    	RCALL      _Div_16x16_S+0
0x0EBE	0x018C    	MOVW       R16, R24
0x0EC0	0xE04A    	LDI        R20, 10
0x0EC2	0xE050    	LDI        R21, 0
0x0EC4	0xDCE1    	RCALL      _Div_16x16_S+0
0x0EC6	0x018B    	MOVW       R16, R22
0x0EC8	0x2F20    	MOV        R18, R16
0x0ECA	0x5D20    	SUBI       R18, 208
0x0ECC	0x8508    	LDD        R16, Y+8
0x0ECE	0x8519    	LDD        R17, Y+9
0x0ED0	0x01F8    	MOVW       R30, R16
0x0ED2	0x8320    	ST         Z, R18
;st7735.c,826 :: 		ch[3] = ((value % 10) + 0x30);
0x0ED4	0x018E    	MOVW       R16, R28
0x0ED6	0x5F0D    	SUBI       R16, 253
0x0ED8	0x4F1F    	SBCI       R17, 255
0x0EDA	0x8708    	STD        Y+8, R16
0x0EDC	0x8719    	STD        Y+9, R17
0x0EDE	0xE04A    	LDI        R20, 10
0x0EE0	0xE050    	LDI        R21, 0
0x0EE2	0x8908    	LDD        R16, Y+16
0x0EE4	0x8919    	LDD        R17, Y+17
0x0EE6	0xDCD0    	RCALL      _Div_16x16_S+0
0x0EE8	0x018C    	MOVW       R16, R24
0x0EEA	0x902F    	POP        R2
0x0EEC	0x903F    	POP        R3
0x0EEE	0x904F    	POP        R4
0x0EF0	0x905F    	POP        R5
0x0EF2	0x906F    	POP        R6
0x0EF4	0x907F    	POP        R7
0x0EF6	0x908F    	POP        R8
0x0EF8	0x2F20    	MOV        R18, R16
0x0EFA	0x5D20    	SUBI       R18, 208
0x0EFC	0x8508    	LDD        R16, Y+8
0x0EFE	0x8519    	LDD        R17, Y+9
0x0F00	0x01F8    	MOVW       R30, R16
0x0F02	0x8320    	ST         Z, R18
;st7735.c,827 :: 		ch[4] = 0x20;
0x0F04	0x018E    	MOVW       R16, R28
0x0F06	0x01F8    	MOVW       R30, R16
0x0F08	0x9634    	ADIW       R30, 4
0x0F0A	0xE2B0    	LDI        R27, 32
0x0F0C	0x83B0    	ST         Z, R27
;st7735.c,828 :: 		ch[5] = 0x20;
0x0F0E	0x018E    	MOVW       R16, R28
0x0F10	0x01F8    	MOVW       R30, R16
0x0F12	0x9635    	ADIW       R30, 5
0x0F14	0xE2B0    	LDI        R27, 32
0x0F16	0x83B0    	ST         Z, R27
;st7735.c,829 :: 		}
0x0F18	0xC087    	RJMP       L_print_I153
;st7735.c,822 :: 		else if((value > 99) && (value <= 999))
L__print_I262:
L__print_I261:
;st7735.c,830 :: 		else if((value > 9) && (value <= 99))
0x0F1A	0x8928    	LDD        R18, Y+16
0x0F1C	0x8939    	LDD        R19, Y+17
0x0F1E	0xE009    	LDI        R16, 9
0x0F20	0xE010    	LDI        R17, 0
0x0F22	0x1702    	CP         R16, R18
0x0F24	0x0713    	CPC        R17, R19
0x0F26	0xF00C    	BRLT       L__print_I381
0x0F28	0xC04C    	RJMP       L__print_I264
L__print_I381:
0x0F2A	0x8928    	LDD        R18, Y+16
0x0F2C	0x8939    	LDD        R19, Y+17
0x0F2E	0xE603    	LDI        R16, 99
0x0F30	0xE010    	LDI        R17, 0
0x0F32	0x1702    	CP         R16, R18
0x0F34	0x0713    	CPC        R17, R19
0x0F36	0xF40C    	BRGE       L__print_I382
0x0F38	0xC044    	RJMP       L__print_I263
L__print_I382:
L__print_I256:
;st7735.c,832 :: 		ch[1] = (((value % 100) / 10) + 0x30);
0x0F3A	0x018E    	MOVW       R16, R28
0x0F3C	0x5F0F    	SUBI       R16, 255
0x0F3E	0x4F1F    	SBCI       R17, 255
0x0F40	0x8708    	STD        Y+8, R16
0x0F42	0x8719    	STD        Y+9, R17
0x0F44	0x928F    	PUSH       R8
0x0F46	0x927F    	PUSH       R7
0x0F48	0x926F    	PUSH       R6
0x0F4A	0x925F    	PUSH       R5
0x0F4C	0x924F    	PUSH       R4
0x0F4E	0x923F    	PUSH       R3
0x0F50	0x922F    	PUSH       R2
0x0F52	0xE644    	LDI        R20, 100
0x0F54	0xE050    	LDI        R21, 0
0x0F56	0x8908    	LDD        R16, Y+16
0x0F58	0x8919    	LDD        R17, Y+17
0x0F5A	0xDC96    	RCALL      _Div_16x16_S+0
0x0F5C	0x018C    	MOVW       R16, R24
0x0F5E	0xE04A    	LDI        R20, 10
0x0F60	0xE050    	LDI        R21, 0
0x0F62	0xDC92    	RCALL      _Div_16x16_S+0
0x0F64	0x018B    	MOVW       R16, R22
0x0F66	0x2F20    	MOV        R18, R16
0x0F68	0x5D20    	SUBI       R18, 208
0x0F6A	0x8508    	LDD        R16, Y+8
0x0F6C	0x8519    	LDD        R17, Y+9
0x0F6E	0x01F8    	MOVW       R30, R16
0x0F70	0x8320    	ST         Z, R18
;st7735.c,833 :: 		ch[2] = ((value % 10) + 0x30);
0x0F72	0x018E    	MOVW       R16, R28
0x0F74	0x5F0E    	SUBI       R16, 254
0x0F76	0x4F1F    	SBCI       R17, 255
0x0F78	0x8708    	STD        Y+8, R16
0x0F7A	0x8719    	STD        Y+9, R17
0x0F7C	0xE04A    	LDI        R20, 10
0x0F7E	0xE050    	LDI        R21, 0
0x0F80	0x8908    	LDD        R16, Y+16
0x0F82	0x8919    	LDD        R17, Y+17
0x0F84	0xDC81    	RCALL      _Div_16x16_S+0
0x0F86	0x018C    	MOVW       R16, R24
0x0F88	0x902F    	POP        R2
0x0F8A	0x903F    	POP        R3
0x0F8C	0x904F    	POP        R4
0x0F8E	0x905F    	POP        R5
0x0F90	0x906F    	POP        R6
0x0F92	0x907F    	POP        R7
0x0F94	0x908F    	POP        R8
0x0F96	0x2F20    	MOV        R18, R16
0x0F98	0x5D20    	SUBI       R18, 208
0x0F9A	0x8508    	LDD        R16, Y+8
0x0F9C	0x8519    	LDD        R17, Y+9
0x0F9E	0x01F8    	MOVW       R30, R16
0x0FA0	0x8320    	ST         Z, R18
;st7735.c,834 :: 		ch[3] = 0x20;
0x0FA2	0x018E    	MOVW       R16, R28
0x0FA4	0x01F8    	MOVW       R30, R16
0x0FA6	0x9633    	ADIW       R30, 3
0x0FA8	0xE2B0    	LDI        R27, 32
0x0FAA	0x83B0    	ST         Z, R27
;st7735.c,835 :: 		ch[4] = 0x20;
0x0FAC	0x018E    	MOVW       R16, R28
0x0FAE	0x01F8    	MOVW       R30, R16
0x0FB0	0x9634    	ADIW       R30, 4
0x0FB2	0xE2B0    	LDI        R27, 32
0x0FB4	0x83B0    	ST         Z, R27
;st7735.c,836 :: 		ch[5] = 0x20;
0x0FB6	0x018E    	MOVW       R16, R28
0x0FB8	0x01F8    	MOVW       R30, R16
0x0FBA	0x9635    	ADIW       R30, 5
0x0FBC	0xE2B0    	LDI        R27, 32
0x0FBE	0x83B0    	ST         Z, R27
;st7735.c,837 :: 		}
0x0FC0	0xC033    	RJMP       L_print_I157
;st7735.c,830 :: 		else if((value > 9) && (value <= 99))
L__print_I264:
L__print_I263:
;st7735.c,840 :: 		ch[1] = ((value % 10) + 0x30);
0x0FC2	0x018E    	MOVW       R16, R28
0x0FC4	0x5F0F    	SUBI       R16, 255
0x0FC6	0x4F1F    	SBCI       R17, 255
0x0FC8	0x8708    	STD        Y+8, R16
0x0FCA	0x8719    	STD        Y+9, R17
0x0FCC	0x928F    	PUSH       R8
0x0FCE	0x927F    	PUSH       R7
0x0FD0	0x926F    	PUSH       R6
0x0FD2	0x925F    	PUSH       R5
0x0FD4	0x924F    	PUSH       R4
0x0FD6	0x923F    	PUSH       R3
0x0FD8	0x922F    	PUSH       R2
0x0FDA	0xE04A    	LDI        R20, 10
0x0FDC	0xE050    	LDI        R21, 0
0x0FDE	0x8908    	LDD        R16, Y+16
0x0FE0	0x8919    	LDD        R17, Y+17
0x0FE2	0xDC52    	RCALL      _Div_16x16_S+0
0x0FE4	0x018C    	MOVW       R16, R24
0x0FE6	0x902F    	POP        R2
0x0FE8	0x903F    	POP        R3
0x0FEA	0x904F    	POP        R4
0x0FEC	0x905F    	POP        R5
0x0FEE	0x906F    	POP        R6
0x0FF0	0x907F    	POP        R7
0x0FF2	0x908F    	POP        R8
0x0FF4	0x2F20    	MOV        R18, R16
0x0FF6	0x5D20    	SUBI       R18, 208
0x0FF8	0x8508    	LDD        R16, Y+8
0x0FFA	0x8519    	LDD        R17, Y+9
0x0FFC	0x01F8    	MOVW       R30, R16
0x0FFE	0x8320    	ST         Z, R18
;st7735.c,841 :: 		ch[2] = 0x20;
0x1000	0x018E    	MOVW       R16, R28
0x1002	0x01F8    	MOVW       R30, R16
0x1004	0x9632    	ADIW       R30, 2
0x1006	0xE2B0    	LDI        R27, 32
0x1008	0x83B0    	ST         Z, R27
;st7735.c,842 :: 		ch[3] = 0x20;
0x100A	0x018E    	MOVW       R16, R28
0x100C	0x01F8    	MOVW       R30, R16
0x100E	0x9633    	ADIW       R30, 3
0x1010	0xE2B0    	LDI        R27, 32
0x1012	0x83B0    	ST         Z, R27
;st7735.c,843 :: 		ch[4] = 0x20;
0x1014	0x018E    	MOVW       R16, R28
0x1016	0x01F8    	MOVW       R30, R16
0x1018	0x9634    	ADIW       R30, 4
0x101A	0xE2B0    	LDI        R27, 32
0x101C	0x83B0    	ST         Z, R27
;st7735.c,844 :: 		ch[5] = 0x20;
0x101E	0x018E    	MOVW       R16, R28
0x1020	0x01F8    	MOVW       R30, R16
0x1022	0x9635    	ADIW       R30, 5
0x1024	0xE2B0    	LDI        R27, 32
0x1026	0x83B0    	ST         Z, R27
;st7735.c,845 :: 		}
L_print_I157:
L_print_I153:
L_print_I149:
L_print_I145:
;st7735.c,847 :: 		print_str(x_pos, y_pos, font_size, colour, back_colour, ch);
0x1028	0x018E    	MOVW       R16, R28
0x102A	0x931F    	PUSH       R17
0x102C	0x930F    	PUSH       R16
0x102E	0x850E    	LDD        R16, Y+14
0x1030	0x851F    	LDD        R17, Y+15
0x1032	0x931F    	PUSH       R17
0x1034	0x930F    	PUSH       R16
0x1036	0xD0EA    	RCALL      _print_str+0
0x1038	0xB7AD    	IN         R26, SPL+0
0x103A	0xB7BE    	IN         R27, SPL+1
0x103C	0x9614    	ADIW       R26, 4
0x103E	0xBFAD    	OUT        SPL+0, R26
0x1040	0xBFBE    	OUT        SPL+1, R27
;st7735.c,848 :: 		}
L_end_print_I:
0x1042	0x9629    	ADIW       R28, 9
0x1044	0xBFCD    	OUT        SPL+0, R28
0x1046	0xBFDE    	OUT        SPL+1, R29
0x1048	0x91DF    	POP        R29
0x104A	0x91CF    	POP        R28
0x104C	0x9508    	RET
; end of _print_I
_Div_16x16_S:
;__Lib_Math.c,145 :: 		
;__Lib_Math.c,148 :: 		
0x0888	0x01C8    	MOVW       R24, R16
;__Lib_Math.c,149 :: 		
0x088A	0x01BA    	MOVW       R22, R20
;__Lib_Math.c,151 :: 		
0x088C	0xFB97    	BST        R25, 7
;__Lib_Math.c,152 :: 		
0x088E	0x2E09    	MOV        R0, R25
;__Lib_Math.c,153 :: 		
0x0890	0x2607    	EOR        R0, R23
;__Lib_Math.c,154 :: 		
0x0892	0xD00A    	RCALL      Div_16x16_S_L3
;__Lib_Math.c,155 :: 		
0x0894	0xFD77    	SBRC       R23, 7
;__Lib_Math.c,156 :: 		
0x0896	0xD004    	RCALL      Div_16x16_S_L1
;__Lib_Math.c,157 :: 		
0x0898	0xD00C    	RCALL      Div_16x16_S_L4
;__Lib_Math.c,158 :: 		
0x089A	0xD006    	RCALL      Div_16x16_S_L3
;__Lib_Math.c,159 :: 		
0x089C	0x2000    	AND        R0, R0
;__Lib_Math.c,160 :: 		
0x089E	0xF41A    	BRPL       Div_16x16_S_L2
;__Lib_Math.c,161 :: 		
Div_16x16_S_L1:
;__Lib_Math.c,162 :: 		
0x08A0	0x9570    	COM        R23
;__Lib_Math.c,163 :: 		
0x08A2	0x9561    	NEG        R22
;__Lib_Math.c,164 :: 		
0x08A4	0x4F7F    	SBCI       R23, 255
;__Lib_Math.c,165 :: 		
Div_16x16_S_L2:
;__Lib_Math.c,166 :: 		
0x08A6	0x9508    	RET
;__Lib_Math.c,167 :: 		
Div_16x16_S_L3:
;__Lib_Math.c,168 :: 		
0x08A8	0xF7F6    	BRTC       Div_16x16_S_L2
;__Lib_Math.c,169 :: 		
0x08AA	0x9590    	COM        R25
;__Lib_Math.c,170 :: 		
0x08AC	0x9581    	NEG        R24
;__Lib_Math.c,171 :: 		
0x08AE	0x4F9F    	SBCI       R25, 255
;__Lib_Math.c,172 :: 		
0x08B0	0x9508    	RET
;__Lib_Math.c,173 :: 		
Div_16x16_S_L4:
;__Lib_Math.c,174 :: 		
0x08B2	0x1BAA    	SUB        R26, R26
;__Lib_Math.c,175 :: 		
0x08B4	0x1BBB    	SUB        R27, R27
;__Lib_Math.c,176 :: 		
0x08B6	0xE151    	LDI        R21, 17
;__Lib_Math.c,177 :: 		
0x08B8	0xC007    	RJMP       Div_16x16_S_L6
;__Lib_Math.c,178 :: 		
Div_16x16_S_L5:
;__Lib_Math.c,179 :: 		
0x08BA	0x1FAA    	ROL        R26
;__Lib_Math.c,180 :: 		
0x08BC	0x1FBB    	ROL        R27
;__Lib_Math.c,181 :: 		
0x08BE	0x17A6    	CP         R26, R22
;__Lib_Math.c,182 :: 		
0x08C0	0x07B7    	CPC        R27, R23
;__Lib_Math.c,183 :: 		
0x08C2	0xF010    	BRCS       Div_16x16_S_L6
;__Lib_Math.c,184 :: 		
0x08C4	0x1BA6    	SUB        R26, R22
;__Lib_Math.c,185 :: 		
0x08C6	0x0BB7    	SBC        R27, R23
;__Lib_Math.c,186 :: 		
Div_16x16_S_L6:
;__Lib_Math.c,187 :: 		
0x08C8	0x1F88    	ROL        R24
;__Lib_Math.c,188 :: 		
0x08CA	0x1F99    	ROL        R25
;__Lib_Math.c,189 :: 		
0x08CC	0x955A    	DEC        R21
;__Lib_Math.c,190 :: 		
0x08CE	0xF7A9    	BRNE       Div_16x16_S_L5
;__Lib_Math.c,191 :: 		
0x08D0	0x9580    	COM        R24
;__Lib_Math.c,192 :: 		
0x08D2	0x9590    	COM        R25
;__Lib_Math.c,193 :: 		
0x08D4	0x01BC    	MOVW       R22, R24
;__Lib_Math.c,194 :: 		
0x08D6	0x01CD    	MOVW       R24, R26
;__Lib_Math.c,195 :: 		
0x08D8	0x9508    	RET
;__Lib_Math.c,198 :: 		
L_end_Div_16x16_S:
0x08DA	0x9508    	RET
; end of _Div_16x16_S
_print_D:
0x1092	0x93CF    	PUSH       R28
0x1094	0x93DF    	PUSH       R29
0x1096	0xB7CD    	IN         R28, SPL+0
0x1098	0xB7DE    	IN         R29, SPL+1
0x109A	0x9728    	SBIW       R28, 8
0x109C	0xBFCD    	OUT        SPL+0, R28
0x109E	0xBFDE    	OUT        SPL+1, R29
0x10A0	0x9621    	ADIW       R28, 1
;st7735.c,851 :: 		void print_D(unsigned int x_pos, unsigned int y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, unsigned int value, unsigned char points)
0x10A2	0x850C    	LDD        R16, Y+12
0x10A4	0x851D    	LDD        R17, Y+13
0x10A6	0x870C    	STD        Y+12, R16
0x10A8	0x871D    	STD        Y+13, R17
0x10AA	0x850E    	LDD        R16, Y+14
0x10AC	0x851F    	LDD        R17, Y+15
0x10AE	0x870E    	STD        Y+14, R16
0x10B0	0x871F    	STD        Y+15, R17
;st7735.c,853 :: 		unsigned char ch[4] = {0x2E, 0x20, 0x20, 0x20};
0x10B2	0xE2BE    	LDI        R27, 46
0x10B4	0x83B8    	STD        Y+0, R27
0x10B6	0xE2B0    	LDI        R27, 32
0x10B8	0x83B9    	STD        Y+1, R27
0x10BA	0xE2B0    	LDI        R27, 32
0x10BC	0x83BA    	STD        Y+2, R27
0x10BE	0xE2B0    	LDI        R27, 32
0x10C0	0x83BB    	STD        Y+3, R27
;st7735.c,855 :: 		ch[1] = ((value / 1000) + 0x30);
0x10C2	0x018E    	MOVW       R16, R28
0x10C4	0x5F0F    	SUBI       R16, 255
0x10C6	0x4F1F    	SBCI       R17, 255
0x10C8	0x830E    	STD        Y+6, R16
0x10CA	0x831F    	STD        Y+7, R17
0x10CC	0xEE48    	LDI        R20, 232
0x10CE	0xE053    	LDI        R21, 3
0x10D0	0x850E    	LDD        R16, Y+14
0x10D2	0x851F    	LDD        R17, Y+15
0x10D4	0xDA38    	RCALL      _Div_16x16_U+0
0x10D6	0x018C    	MOVW       R16, R24
0x10D8	0x2F20    	MOV        R18, R16
0x10DA	0x5D20    	SUBI       R18, 208
0x10DC	0x810E    	LDD        R16, Y+6
0x10DE	0x811F    	LDD        R17, Y+7
0x10E0	0x01F8    	MOVW       R30, R16
0x10E2	0x8320    	ST         Z, R18
;st7735.c,857 :: 		if(points > 1)
0x10E4	0xE001    	LDI        R16, 1
0x10E6	0x1509    	CP         R16, R9
0x10E8	0xF008    	BRLO       L__print_D384
0x10EA	0xC041    	RJMP       L_print_D158
L__print_D384:
;st7735.c,859 :: 		ch[2] = (((value % 1000) / 100) + 0x30);
0x10EC	0x018E    	MOVW       R16, R28
0x10EE	0x5F0E    	SUBI       R16, 254
0x10F0	0x4F1F    	SBCI       R17, 255
0x10F2	0x830E    	STD        Y+6, R16
0x10F4	0x831F    	STD        Y+7, R17
0x10F6	0xEE48    	LDI        R20, 232
0x10F8	0xE053    	LDI        R21, 3
0x10FA	0x850E    	LDD        R16, Y+14
0x10FC	0x851F    	LDD        R17, Y+15
0x10FE	0xDA23    	RCALL      _Div_16x16_U+0
0x1100	0x018D    	MOVW       R16, R26
0x1102	0xE644    	LDI        R20, 100
0x1104	0xE050    	LDI        R21, 0
0x1106	0xDA1F    	RCALL      _Div_16x16_U+0
0x1108	0x018C    	MOVW       R16, R24
0x110A	0x2F20    	MOV        R18, R16
0x110C	0x5D20    	SUBI       R18, 208
0x110E	0x810E    	LDD        R16, Y+6
0x1110	0x811F    	LDD        R17, Y+7
0x1112	0x01F8    	MOVW       R30, R16
0x1114	0x8320    	ST         Z, R18
;st7735.c,861 :: 		if(points > 2)
0x1116	0xE002    	LDI        R16, 2
0x1118	0x1509    	CP         R16, R9
0x111A	0xF548    	BRSH       L_print_D159
L__print_D385:
;st7735.c,863 :: 		ch[3] = (((value % 100) / 10) + 0x30);
0x111C	0x018E    	MOVW       R16, R28
0x111E	0x5F0D    	SUBI       R16, 253
0x1120	0x4F1F    	SBCI       R17, 255
0x1122	0x830E    	STD        Y+6, R16
0x1124	0x831F    	STD        Y+7, R17
0x1126	0xE644    	LDI        R20, 100
0x1128	0xE050    	LDI        R21, 0
0x112A	0x850E    	LDD        R16, Y+14
0x112C	0x851F    	LDD        R17, Y+15
0x112E	0xDA0B    	RCALL      _Div_16x16_U+0
0x1130	0x018D    	MOVW       R16, R26
0x1132	0xE04A    	LDI        R20, 10
0x1134	0xE050    	LDI        R21, 0
0x1136	0xDA07    	RCALL      _Div_16x16_U+0
0x1138	0x018C    	MOVW       R16, R24
0x113A	0x2F20    	MOV        R18, R16
0x113C	0x5D20    	SUBI       R18, 208
0x113E	0x810E    	LDD        R16, Y+6
0x1140	0x811F    	LDD        R17, Y+7
0x1142	0x01F8    	MOVW       R30, R16
0x1144	0x8320    	ST         Z, R18
;st7735.c,865 :: 		if(points > 3)
0x1146	0xE003    	LDI        R16, 3
0x1148	0x1509    	CP         R16, R9
0x114A	0xF488    	BRSH       L_print_D160
L__print_D386:
;st7735.c,867 :: 		ch[4] = ((value % 10) + 0x30);
0x114C	0x018E    	MOVW       R16, R28
0x114E	0x5F0C    	SUBI       R16, 252
0x1150	0x4F1F    	SBCI       R17, 255
0x1152	0x830E    	STD        Y+6, R16
0x1154	0x831F    	STD        Y+7, R17
0x1156	0xE04A    	LDI        R20, 10
0x1158	0xE050    	LDI        R21, 0
0x115A	0x850E    	LDD        R16, Y+14
0x115C	0x851F    	LDD        R17, Y+15
0x115E	0xD9F3    	RCALL      _Div_16x16_U+0
0x1160	0x018D    	MOVW       R16, R26
0x1162	0x2F20    	MOV        R18, R16
0x1164	0x5D20    	SUBI       R18, 208
0x1166	0x810E    	LDD        R16, Y+6
0x1168	0x811F    	LDD        R17, Y+7
0x116A	0x01F8    	MOVW       R30, R16
0x116C	0x8320    	ST         Z, R18
;st7735.c,868 :: 		}
L_print_D160:
;st7735.c,869 :: 		}
L_print_D159:
;st7735.c,870 :: 		}
L_print_D158:
;st7735.c,872 :: 		print_str(x_pos, y_pos, font_size, colour, back_colour, ch);
0x116E	0x018E    	MOVW       R16, R28
0x1170	0x931F    	PUSH       R17
0x1172	0x930F    	PUSH       R16
0x1174	0x850C    	LDD        R16, Y+12
0x1176	0x851D    	LDD        R17, Y+13
0x1178	0x931F    	PUSH       R17
0x117A	0x930F    	PUSH       R16
0x117C	0xD047    	RCALL      _print_str+0
0x117E	0xB7AD    	IN         R26, SPL+0
0x1180	0xB7BE    	IN         R27, SPL+1
0x1182	0x9614    	ADIW       R26, 4
0x1184	0xBFAD    	OUT        SPL+0, R26
0x1186	0xBFBE    	OUT        SPL+1, R27
;st7735.c,873 :: 		}
L_end_print_D:
0x1188	0x9627    	ADIW       R28, 7
0x118A	0xBFCD    	OUT        SPL+0, R28
0x118C	0xBFDE    	OUT        SPL+1, R29
0x118E	0x91DF    	POP        R29
0x1190	0x91CF    	POP        R28
0x1192	0x9508    	RET
; end of _print_D
_Div_16x16_U:
;__Lib_Math.c,208 :: 		
;__Lib_Math.c,211 :: 		
0x0546	0x01C8    	MOVW       R24, R16
;__Lib_Math.c,212 :: 		
0x0548	0x01BA    	MOVW       R22, R20
;__Lib_Math.c,214 :: 		
0x054A	0x1BAA    	SUB        R26, R26
;__Lib_Math.c,215 :: 		
0x054C	0x1BBB    	SUB        R27, R27
;__Lib_Math.c,216 :: 		
0x054E	0xE151    	LDI        R21, 17
;__Lib_Math.c,217 :: 		
0x0550	0xC007    	RJMP       Div_16x16_U_L2
;__Lib_Math.c,218 :: 		
Div_16x16_U_L1:
;__Lib_Math.c,219 :: 		
0x0552	0x1FAA    	ROL        R26
;__Lib_Math.c,220 :: 		
0x0554	0x1FBB    	ROL        R27
;__Lib_Math.c,221 :: 		
0x0556	0x17A6    	CP         R26, R22
;__Lib_Math.c,222 :: 		
0x0558	0x07B7    	CPC        R27, R23
;__Lib_Math.c,223 :: 		
0x055A	0xF010    	BRCS       Div_16x16_U_L2
;__Lib_Math.c,224 :: 		
0x055C	0x1BA6    	SUB        R26, R22
;__Lib_Math.c,225 :: 		
0x055E	0x0BB7    	SBC        R27, R23
;__Lib_Math.c,226 :: 		
Div_16x16_U_L2:
;__Lib_Math.c,227 :: 		
0x0560	0x1F88    	ROL        R24
;__Lib_Math.c,228 :: 		
0x0562	0x1F99    	ROL        R25
;__Lib_Math.c,229 :: 		
0x0564	0x955A    	DEC        R21
;__Lib_Math.c,230 :: 		
0x0566	0xF7A9    	BRNE       Div_16x16_U_L1
;__Lib_Math.c,231 :: 		
0x0568	0x9580    	COM        R24
;__Lib_Math.c,232 :: 		
0x056A	0x9590    	COM        R25
;__Lib_Math.c,235 :: 		
L_end_Div_16x16_U:
0x056C	0x9508    	RET
; end of _Div_16x16_U
_float_fpint:
;__Lib_MathDouble.c,190 :: 		
;__Lib_MathDouble.c,191 :: 		
0x0B98	0xDC65    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,193 :: 		
0x0B9A	0xF0F1    	BREQ       L0077
;__Lib_MathDouble.c,194 :: 		
0x0B9C	0x2355    	TST        R21
;__Lib_MathDouble.c,195 :: 		
0x0B9E	0xF0C2    	BRMI       L0073
;__Lib_MathDouble.c,196 :: 		
0x0BA0	0x314F    	CPI        R20, 31
;__Lib_MathDouble.c,197 :: 		
0x0BA2	0xF4A8    	BRCC       L0072int
;__Lib_MathDouble.c,198 :: 		
0x0BA4	0x3147    	CPI        R20, 23
;__Lib_MathDouble.c,199 :: 		
0x0BA6	0xF0C1    	BREQ       L0077
;__Lib_MathDouble.c,200 :: 		
0x0BA8	0xF450    	BRCC       L006A
;__Lib_MathDouble.c,201 :: 		
0x0BAA	0x9541    	NEG        R20
;__Lib_MathDouble.c,202 :: 		
0x0BAC	0x5E49    	SUBI       R20, 233
;__Lib_MathDouble.c,203 :: 		
0x0BAE	0xC005    	RJMP       L0068
;__Lib_MathDouble.c,204 :: 		
L0063:
;__Lib_MathDouble.c,205 :: 		
0x0BB0	0x9535    	ASR        R19
;__Lib_MathDouble.c,206 :: 		
0x0BB2	0x9527    	ROR        R18
;__Lib_MathDouble.c,207 :: 		
0x0BB4	0x9517    	ROR        R17
;__Lib_MathDouble.c,208 :: 		
0x0BB6	0x9507    	ROR        R16
;__Lib_MathDouble.c,209 :: 		
0x0BB8	0x954A    	DEC        R20
;__Lib_MathDouble.c,210 :: 		
L0068:
;__Lib_MathDouble.c,211 :: 		
0x0BBA	0xF7D1    	BRNE       L0063
;__Lib_MathDouble.c,212 :: 		
0x0BBC	0xC00D    	RJMP       L0077
;__Lib_MathDouble.c,213 :: 		
L006A:
;__Lib_MathDouble.c,214 :: 		
0x0BBE	0x5147    	SUBI       R20, 23
;__Lib_MathDouble.c,215 :: 		
L006B:
;__Lib_MathDouble.c,216 :: 		
0x0BC0	0x0F00    	LSL        R16
;__Lib_MathDouble.c,217 :: 		
0x0BC2	0x1F11    	ROL        R17
;__Lib_MathDouble.c,218 :: 		
0x0BC4	0x1F22    	ROL        R18
;__Lib_MathDouble.c,219 :: 		
0x0BC6	0x1F33    	ROL        R19
;__Lib_MathDouble.c,220 :: 		
0x0BC8	0x954A    	DEC        R20
;__Lib_MathDouble.c,221 :: 		
0x0BCA	0xF7D1    	BRNE       L006B
;__Lib_MathDouble.c,222 :: 		
0x0BCC	0xC005    	RJMP       L0077
;__Lib_MathDouble.c,223 :: 		
L0072int:
;__Lib_MathDouble.c,224 :: 		
0x0BCE	0xE73F    	LDI        R19, 127
;__Lib_MathDouble.c,225 :: 		
L0073:
;__Lib_MathDouble.c,226 :: 		
0x0BD0	0x2F23    	MOV        R18, R19
;__Lib_MathDouble.c,227 :: 		
0x0BD2	0x2F13    	MOV        R17, R19
;__Lib_MathDouble.c,228 :: 		
0x0BD4	0x2F03    	MOV        R16, R19
;__Lib_MathDouble.c,229 :: 		
0x0BD6	0xC003    	RJMP       L007A
;__Lib_MathDouble.c,230 :: 		
L0077:
;__Lib_MathDouble.c,231 :: 		
0x0BD8	0x2366    	TST        R22
;__Lib_MathDouble.c,232 :: 		
0x0BDA	0xF009    	BREQ       L007A
;__Lib_MathDouble.c,234 :: 		
0x0BDC	0xDC66    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,236 :: 		
L007A:
;__Lib_MathDouble.c,238 :: 		
L_end_float_fpint:
0x0BDE	0x9508    	RET
; end of _float_fpint
_float_fpsub1:
;__Lib_MathDouble.c,391 :: 		
;__Lib_MathDouble.c,393 :: 		
0x0C02	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,394 :: 		
0x0C04	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,395 :: 		
0x0C06	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,396 :: 		
0x0C08	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,398 :: 		
0x0C0A	0xDE72    	RCALL      _float_fpsub+0
;__Lib_MathDouble.c,400 :: 		
0x0C0C	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,401 :: 		
0x0C0E	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,402 :: 		
0x0C10	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,403 :: 		
0x0C12	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,405 :: 		
L_end_float_fpsub1:
0x0C14	0x9508    	RET
; end of _float_fpsub1
_float_fpsub:
;__Lib_MathDouble.c,384 :: 		
;__Lib_MathDouble.c,386 :: 		
0x08F0	0x9468    	SET
;__Lib_MathDouble.c,388 :: 		
0x08F2	0xDCDE    	RCALL      _float_fpadd_alt+0
;__Lib_MathDouble.c,389 :: 		
L_end_float_fpsub:
0x08F4	0x9508    	RET
; end of _float_fpsub
_float_fpadd_alt:
;__Lib_MathDouble.c,240 :: 		
;__Lib_MathDouble.c,241 :: 		
0x02B0	0xDFF8    	RCALL      _float_unpacks+0
;__Lib_MathDouble.c,243 :: 		
0x02B2	0xF409    	BRNE       L008A
;__Lib_MathDouble.c,244 :: 		
0x02B4	0xC041    	RJMP       L00CC
;__Lib_MathDouble.c,245 :: 		
L008A:
;__Lib_MathDouble.c,246 :: 		
0x02B6	0x2EE6    	MOV        R14, R22
;__Lib_MathDouble.c,247 :: 		
0x02B8	0x2ED5    	MOV        R13, R21
;__Lib_MathDouble.c,248 :: 		
0x02BA	0x2EC4    	MOV        R12, R20
;__Lib_MathDouble.c,249 :: 		
0x02BC	0x2EB3    	MOV        R11, R19
;__Lib_MathDouble.c,250 :: 		
0x02BE	0x2EA2    	MOV        R10, R18
;__Lib_MathDouble.c,251 :: 		
0x02C0	0x2E91    	MOV        R9, R17
;__Lib_MathDouble.c,252 :: 		
0x02C2	0x2E80    	MOV        R8, R16
;__Lib_MathDouble.c,253 :: 		
0x02C4	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,254 :: 		
0x02C6	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,255 :: 		
0x02C8	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,256 :: 		
0x02CA	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,258 :: 		
0x02CC	0xDFEA    	RCALL      _float_unpacks+0
;__Lib_MathDouble.c,260 :: 		
0x02CE	0xF409    	BRNE       L0098
;__Lib_MathDouble.c,261 :: 		
0x02D0	0xC03D    	RJMP       L00D6
;__Lib_MathDouble.c,262 :: 		
L0098:
;__Lib_MathDouble.c,263 :: 		
0x02D2	0x2F84    	MOV        R24, R20
;__Lib_MathDouble.c,264 :: 		
0x02D4	0x2F95    	MOV        R25, R21
;__Lib_MathDouble.c,265 :: 		
0x02D6	0x198C    	SUB        R24, R12
;__Lib_MathDouble.c,266 :: 		
0x02D8	0x099D    	SBC        R25, R13
;__Lib_MathDouble.c,267 :: 		
0x02DA	0xF0B9    	BREQ       L00B4
;__Lib_MathDouble.c,268 :: 		
0x02DC	0xF472    	BRPL       L00AC
;__Lib_MathDouble.c,269 :: 		
0x02DE	0x9590    	COM        R25
;__Lib_MathDouble.c,270 :: 		
0x02E0	0x9580    	COM        R24
;__Lib_MathDouble.c,271 :: 		
0x02E2	0x9601    	ADIW       R24, 1
;__Lib_MathDouble.c,272 :: 		
0x02E4	0x2D4C    	MOV        R20, R12
;__Lib_MathDouble.c,273 :: 		
0x02E6	0x2D5D    	MOV        R21, R13
;__Lib_MathDouble.c,274 :: 		
0x02E8	0x3188    	CPI        R24, 24
;__Lib_MathDouble.c,275 :: 		
0x02EA	0xF580    	BRCC       L00D6
;__Lib_MathDouble.c,276 :: 		
L00A5:
;__Lib_MathDouble.c,277 :: 		
0x02EC	0x9535    	ASR        R19
;__Lib_MathDouble.c,278 :: 		
0x02EE	0x9527    	ROR        R18
;__Lib_MathDouble.c,279 :: 		
0x02F0	0x9517    	ROR        R17
;__Lib_MathDouble.c,280 :: 		
0x02F2	0x9507    	ROR        R16
;__Lib_MathDouble.c,281 :: 		
0x02F4	0x9701    	SBIW       R24, 1
;__Lib_MathDouble.c,282 :: 		
0x02F6	0xF7D1    	BRNE       L00A5
;__Lib_MathDouble.c,283 :: 		
0x02F8	0xC008    	RJMP       L00B4
;__Lib_MathDouble.c,284 :: 		
L00AC:
;__Lib_MathDouble.c,285 :: 		
0x02FA	0x3188    	CPI        R24, 24
;__Lib_MathDouble.c,286 :: 		
0x02FC	0xF4E8    	BRCC       L00CC
;__Lib_MathDouble.c,287 :: 		
L00AE:
;__Lib_MathDouble.c,288 :: 		
0x02FE	0x94B5    	ASR        R11
;__Lib_MathDouble.c,289 :: 		
0x0300	0x94A7    	ROR        R10
;__Lib_MathDouble.c,290 :: 		
0x0302	0x9497    	ROR        R9
;__Lib_MathDouble.c,291 :: 		
0x0304	0x9487    	ROR        R8
;__Lib_MathDouble.c,292 :: 		
0x0306	0x9701    	SBIW       R24, 1
;__Lib_MathDouble.c,293 :: 		
0x0308	0xF7D1    	BRNE       L00AE
;__Lib_MathDouble.c,294 :: 		
L00B4:
;__Lib_MathDouble.c,295 :: 		
0x030A	0x2766    	CLR        R22
;__Lib_MathDouble.c,296 :: 		
0x030C	0xF02E    	BRTS       L00BB
;__Lib_MathDouble.c,297 :: 		
0x030E	0x0D08    	ADD        R16, R8
;__Lib_MathDouble.c,298 :: 		
0x0310	0x1D19    	ADC        R17, R9
;__Lib_MathDouble.c,299 :: 		
0x0312	0x1D2A    	ADC        R18, R10
;__Lib_MathDouble.c,300 :: 		
0x0314	0x1D3B    	ADC        R19, R11
;__Lib_MathDouble.c,301 :: 		
0x0316	0xC009    	RJMP       L00C4
;__Lib_MathDouble.c,302 :: 		
L00BB:
;__Lib_MathDouble.c,303 :: 		
0x0318	0x1A80    	SUB        R8, R16
;__Lib_MathDouble.c,304 :: 		
0x031A	0x0A91    	SBC        R9, R17
;__Lib_MathDouble.c,305 :: 		
0x031C	0x0AA2    	SBC        R10, R18
;__Lib_MathDouble.c,306 :: 		
0x031E	0x0AB3    	SBC        R11, R19
;__Lib_MathDouble.c,307 :: 		
0x0320	0x2D08    	MOV        R16, R8
;__Lib_MathDouble.c,308 :: 		
0x0322	0x2D19    	MOV        R17, R9
;__Lib_MathDouble.c,309 :: 		
0x0324	0x2D2A    	MOV        R18, R10
;__Lib_MathDouble.c,310 :: 		
0x0326	0x2D3B    	MOV        R19, R11
;__Lib_MathDouble.c,311 :: 		
0x0328	0x2333    	TST        R19
;__Lib_MathDouble.c,312 :: 		
L00C4:
;__Lib_MathDouble.c,313 :: 		
0x032A	0xF412    	BRPL       L00C7
;__Lib_MathDouble.c,315 :: 		
0x032C	0xD0BE    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,317 :: 		
0x032E	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,318 :: 		
L00C7:
;__Lib_MathDouble.c,320 :: 		
0x0330	0xD06B    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,322 :: 		
0x0332	0xC001    	RJMP       L00CA
;__Lib_MathDouble.c,323 :: 		
L00C9:
;__Lib_MathDouble.c,325 :: 		
0x0334	0xDFA4    	RCALL      _float_pack+0
;__Lib_MathDouble.c,327 :: 		
L00CA:
;__Lib_MathDouble.c,328 :: 		
0x0336	0xC016    	RJMP       L00D6x
;__Lib_MathDouble.c,329 :: 		
L00CC:
;__Lib_MathDouble.c,330 :: 		
0x0338	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,331 :: 		
0x033A	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,332 :: 		
0x033C	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,333 :: 		
0x033E	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,334 :: 		
0x0340	0xF7D6    	BRTC       L00CA
;__Lib_MathDouble.c,336 :: 		
0x0342	0xDFA7    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,338 :: 		
0x0344	0xF3C1    	BREQ       L00CA
;__Lib_MathDouble.c,339 :: 		
0x0346	0xE840    	LDI        R20, 128
;__Lib_MathDouble.c,340 :: 		
0x0348	0x2734    	EOR        R19, R20
;__Lib_MathDouble.c,341 :: 		
0x034A	0xCFF5    	RJMP       L00CA
;__Lib_MathDouble.c,342 :: 		
L00D6:
;__Lib_MathDouble.c,343 :: 		
0x034C	0x2D08    	MOV        R16, R8
;__Lib_MathDouble.c,344 :: 		
0x034E	0x2D19    	MOV        R17, R9
;__Lib_MathDouble.c,345 :: 		
0x0350	0x2D2A    	MOV        R18, R10
;__Lib_MathDouble.c,346 :: 		
0x0352	0x2D3B    	MOV        R19, R11
;__Lib_MathDouble.c,347 :: 		
0x0354	0x2D4C    	MOV        R20, R12
;__Lib_MathDouble.c,348 :: 		
0x0356	0x2D5D    	MOV        R21, R13
;__Lib_MathDouble.c,349 :: 		
0x0358	0x2D6E    	MOV        R22, R14
;__Lib_MathDouble.c,350 :: 		
0x035A	0x2333    	TST        R19
;__Lib_MathDouble.c,351 :: 		
0x035C	0xF75A    	BRPL       L00C9
;__Lib_MathDouble.c,353 :: 		
0x035E	0xD0A5    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,355 :: 		
0x0360	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,356 :: 		
0x0362	0xCFE8    	RJMP       L00C9
;__Lib_MathDouble.c,357 :: 		
L00D6x:
;__Lib_MathDouble.c,359 :: 		
L_end_float_fpadd_alt:
0x0364	0x9508    	RET
; end of _float_fpadd_alt
_float_unpacks:
;__Lib_MathDouble.c,175 :: 		
;__Lib_MathDouble.c,176 :: 		
0x02A2	0xD0E0    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,178 :: 		
0x02A4	0xF021    	BREQ       L0154
;__Lib_MathDouble.c,179 :: 		
0x02A6	0x2366    	TST        R22
;__Lib_MathDouble.c,180 :: 		
0x02A8	0xF009    	BREQ       L0153
;__Lib_MathDouble.c,182 :: 		
0x02AA	0xD0FF    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,184 :: 		
L0153:
;__Lib_MathDouble.c,185 :: 		
0x02AC	0x9498    	CLZ
;__Lib_MathDouble.c,186 :: 		
L0154:
;__Lib_MathDouble.c,188 :: 		
L_end_float_unpacks:
0x02AE	0x9508    	RET
; end of _float_unpacks
_float_op_gequ:
;__Lib_MathDouble.c,691 :: 		
;__Lib_MathDouble.c,692 :: 		
0x1194	0xDC0A    	RCALL      _float_fpcmp1+0
;__Lib_MathDouble.c,694 :: 		
0x1196	0xF01C    	BRLT       op_gequ_false
;__Lib_MathDouble.c,695 :: 		
0x1198	0x2400    	CLR        R0
;__Lib_MathDouble.c,696 :: 		
0x119A	0x9403    	INC        R0
;__Lib_MathDouble.c,697 :: 		
0x119C	0xC001    	RJMP       op_gequ_exit
;__Lib_MathDouble.c,698 :: 		
op_gequ_false:
;__Lib_MathDouble.c,699 :: 		
0x119E	0x2400    	CLR        R0
;__Lib_MathDouble.c,700 :: 		
op_gequ_exit:
;__Lib_MathDouble.c,702 :: 		
L_end_float_op_gequ:
0x11A0	0x9508    	RET
; end of _float_op_gequ
_float_fpcmp1:
;__Lib_MathDouble.c,652 :: 		
;__Lib_MathDouble.c,654 :: 		
0x09AA	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,655 :: 		
0x09AC	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,656 :: 		
0x09AE	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,657 :: 		
0x09B0	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,659 :: 		
0x09B2	0xDD17    	RCALL      _float_fpcmp+0
;__Lib_MathDouble.c,661 :: 		
0x09B4	0x2300    	TST        R16
;__Lib_MathDouble.c,663 :: 		
L_end_float_fpcmp1:
0x09B6	0x9508    	RET
; end of _float_fpcmp1
_float_fpcmp:
;__Lib_MathDouble.c,632 :: 		
;__Lib_MathDouble.c,633 :: 		
0x03E2	0xD286    	RCALL      _float_fpsub+0
;__Lib_MathDouble.c,635 :: 		
0x03E4	0x2333    	TST        R19
;__Lib_MathDouble.c,636 :: 		
0x03E6	0xF032    	BRMI       L011A
;__Lib_MathDouble.c,638 :: 		
0x03E8	0xDF54    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,640 :: 		
0x03EA	0xF011    	BREQ       L0118
;__Lib_MathDouble.c,641 :: 		
0x03EC	0xE001    	LDI        R16, 1
;__Lib_MathDouble.c,642 :: 		
0x03EE	0xC003    	RJMP       L011Aexit
;__Lib_MathDouble.c,643 :: 		
L0118:
;__Lib_MathDouble.c,644 :: 		
0x03F0	0x2700    	CLR        R16
;__Lib_MathDouble.c,645 :: 		
0x03F2	0xC001    	RJMP       L011Aexit
;__Lib_MathDouble.c,646 :: 		
L011A:
;__Lib_MathDouble.c,647 :: 		
0x03F4	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,648 :: 		
L011Aexit:
;__Lib_MathDouble.c,650 :: 		
L_end_float_fpcmp:
0x03F6	0x9508    	RET
; end of _float_fpcmp
_float_op_less:
;__Lib_MathDouble.c,729 :: 		
;__Lib_MathDouble.c,730 :: 		
0x0BF4	0xDEDA    	RCALL      _float_fpcmp1+0
;__Lib_MathDouble.c,732 :: 		
0x0BF6	0xF41C    	BRGE       op_less_false
;__Lib_MathDouble.c,733 :: 		
0x0BF8	0x2400    	CLR        R0
;__Lib_MathDouble.c,734 :: 		
0x0BFA	0x9403    	INC        R0
;__Lib_MathDouble.c,735 :: 		
0x0BFC	0xC001    	RJMP       op_less_exit
;__Lib_MathDouble.c,736 :: 		
op_less_false:
;__Lib_MathDouble.c,737 :: 		
0x0BFE	0x2400    	CLR        R0
;__Lib_MathDouble.c,738 :: 		
op_less_exit:
;__Lib_MathDouble.c,740 :: 		
L_end_float_op_less:
0x0C00	0x9508    	RET
; end of _float_op_less
_map:
0x22F0	0x93CF    	PUSH       R28
0x22F2	0x93DF    	PUSH       R29
0x22F4	0xB7CD    	IN         R28, SPL+0
0x22F6	0xB7DE    	IN         R29, SPL+1
0x22F8	0x9760    	SBIW       R28, 16
0x22FA	0xBFCD    	OUT        SPL+0, R28
0x22FC	0xBFDE    	OUT        SPL+1, R29
0x22FE	0x9621    	ADIW       R28, 1
;comms_demo.c,199 :: 		float map(float value, float x_min, float x_max, float y_min, float y_max)
0x2300	0x890C    	LDD        R16, Y+20
0x2302	0x891D    	LDD        R17, Y+21
0x2304	0x892E    	LDD        R18, Y+22
0x2306	0x893F    	LDD        R19, Y+23
0x2308	0x8B0C    	STD        Y+20, R16
0x230A	0x8B1D    	STD        Y+21, R17
0x230C	0x8B2E    	STD        Y+22, R18
0x230E	0x8B3F    	STD        Y+23, R19
0x2310	0x8D08    	LDD        R16, Y+24
0x2312	0x8D19    	LDD        R17, Y+25
0x2314	0x8D2A    	LDD        R18, Y+26
0x2316	0x8D3B    	LDD        R19, Y+27
0x2318	0x8F08    	STD        Y+24, R16
0x231A	0x8F19    	STD        Y+25, R17
0x231C	0x8F2A    	STD        Y+26, R18
0x231E	0x8F3B    	STD        Y+27, R19
0x2320	0x8D0C    	LDD        R16, Y+28
0x2322	0x8D1D    	LDD        R17, Y+29
0x2324	0x8D2E    	LDD        R18, Y+30
0x2326	0x8D3F    	LDD        R19, Y+31
0x2328	0x8F0C    	STD        Y+28, R16
0x232A	0x8F1D    	STD        Y+29, R17
0x232C	0x8F2E    	STD        Y+30, R18
0x232E	0x8F3F    	STD        Y+31, R19
;comms_demo.c,201 :: 		return (y_min + (((y_max - y_min) / ((x_max - x_min)) * (value - x_min))));
0x2330	0x929F    	PUSH       R9
0x2332	0x928F    	PUSH       R8
0x2334	0x927F    	PUSH       R7
0x2336	0x926F    	PUSH       R6
0x2338	0x925F    	PUSH       R5
0x233A	0x924F    	PUSH       R4
0x233C	0x923F    	PUSH       R3
0x233E	0x922F    	PUSH       R2
0x2340	0x8D48    	LDD        R20, Y+24
0x2342	0x8D59    	LDD        R21, Y+25
0x2344	0x8D6A    	LDD        R22, Y+26
0x2346	0x8D7B    	LDD        R23, Y+27
0x2348	0x8D0C    	LDD        R16, Y+28
0x234A	0x8D1D    	LDD        R17, Y+29
0x234C	0x8D2E    	LDD        R18, Y+30
0x234E	0x8D3F    	LDD        R19, Y+31
0x2350	0x0601940E  	CALL       _float_fpsub1+0
0x2354	0x902F    	POP        R2
0x2356	0x903F    	POP        R3
0x2358	0x904F    	POP        R4
0x235A	0x905F    	POP        R5
0x235C	0x906F    	POP        R6
0x235E	0x907F    	POP        R7
0x2360	0x908F    	POP        R8
0x2362	0x909F    	POP        R9
0x2364	0x870C    	STD        Y+12, R16
0x2366	0x871D    	STD        Y+13, R17
0x2368	0x872E    	STD        Y+14, R18
0x236A	0x873F    	STD        Y+15, R19
0x236C	0x929F    	PUSH       R9
0x236E	0x928F    	PUSH       R8
0x2370	0x927F    	PUSH       R7
0x2372	0x926F    	PUSH       R6
0x2374	0x925F    	PUSH       R5
0x2376	0x924F    	PUSH       R4
0x2378	0x923F    	PUSH       R3
0x237A	0x922F    	PUSH       R2
0x237C	0x01A3    	MOVW       R20, R6
0x237E	0x01B4    	MOVW       R22, R8
0x2380	0x890C    	LDD        R16, Y+20
0x2382	0x891D    	LDD        R17, Y+21
0x2384	0x892E    	LDD        R18, Y+22
0x2386	0x893F    	LDD        R19, Y+23
0x2388	0x0601940E  	CALL       _float_fpsub1+0
0x238C	0x8308    	STD        Y+0, R16
0x238E	0x8319    	STD        Y+1, R17
0x2390	0x832A    	STD        Y+2, R18
0x2392	0x833B    	STD        Y+3, R19
0x2394	0x850C    	LDD        R16, Y+12
0x2396	0x851D    	LDD        R17, Y+13
0x2398	0x852E    	LDD        R18, Y+14
0x239A	0x853F    	LDD        R19, Y+15
0x239C	0x8148    	LDD        R20, Y+0
0x239E	0x8159    	LDD        R21, Y+1
0x23A0	0x816A    	LDD        R22, Y+2
0x23A2	0x817B    	LDD        R23, Y+3
0x23A4	0x05C2940E  	CALL       _float_fpdiv1+0
0x23A8	0x902F    	POP        R2
0x23AA	0x903F    	POP        R3
0x23AC	0x904F    	POP        R4
0x23AE	0x905F    	POP        R5
0x23B0	0x906F    	POP        R6
0x23B2	0x907F    	POP        R7
0x23B4	0x908F    	POP        R8
0x23B6	0x909F    	POP        R9
0x23B8	0x870C    	STD        Y+12, R16
0x23BA	0x871D    	STD        Y+13, R17
0x23BC	0x872E    	STD        Y+14, R18
0x23BE	0x873F    	STD        Y+15, R19
0x23C0	0x01A3    	MOVW       R20, R6
0x23C2	0x01B4    	MOVW       R22, R8
0x23C4	0x0181    	MOVW       R16, R2
0x23C6	0x0192    	MOVW       R18, R4
0x23C8	0x0601940E  	CALL       _float_fpsub1+0
0x23CC	0x854C    	LDD        R20, Y+12
0x23CE	0x855D    	LDD        R21, Y+13
0x23D0	0x856E    	LDD        R22, Y+14
0x23D2	0x857F    	LDD        R23, Y+15
0x23D4	0xDBA0    	RCALL      _float_fpmul1+0
0x23D6	0x8D48    	LDD        R20, Y+24
0x23D8	0x8D59    	LDD        R21, Y+25
0x23DA	0x8D6A    	LDD        R22, Y+26
0x23DC	0x8D7B    	LDD        R23, Y+27
0x23DE	0x05F0940E  	CALL       _float_fpadd1+0
;comms_demo.c,202 :: 		}
L_end_map:
0x23E2	0x962F    	ADIW       R28, 15
0x23E4	0xBFCD    	OUT        SPL+0, R28
0x23E6	0xBFDE    	OUT        SPL+1, R29
0x23E8	0x91DF    	POP        R29
0x23EA	0x91CF    	POP        R28
0x23EC	0x9508    	RET
; end of _map
_float_fpdiv1:
;__Lib_MathDouble.c,616 :: 		
;__Lib_MathDouble.c,618 :: 		
0x0B84	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,619 :: 		
0x0B86	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,620 :: 		
0x0B88	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,621 :: 		
0x0B8A	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,623 :: 		
0x0B8C	0xDD34    	RCALL      _float_fpdiv+0
;__Lib_MathDouble.c,625 :: 		
0x0B8E	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,626 :: 		
0x0B90	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,627 :: 		
0x0B92	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,628 :: 		
0x0B94	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,630 :: 		
L_end_float_fpdiv1:
0x0B96	0x9508    	RET
; end of _float_fpdiv1
_float_fpdiv:
;__Lib_MathDouble.c,499 :: 		
;__Lib_MathDouble.c,501 :: 		
0x05F6	0x933F    	PUSH       R19
;__Lib_MathDouble.c,502 :: 		
0x05F8	0x932F    	PUSH       R18
;__Lib_MathDouble.c,503 :: 		
0x05FA	0x931F    	PUSH       R17
;__Lib_MathDouble.c,504 :: 		
0x05FC	0x930F    	PUSH       R16
;__Lib_MathDouble.c,505 :: 		
0x05FE	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,506 :: 		
0x0600	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,507 :: 		
0x0602	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,508 :: 		
0x0604	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,510 :: 		
0x0606	0xDF2E    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,512 :: 		
0x0608	0xF409    	BRNE       L0072div
;__Lib_MathDouble.c,513 :: 		
0x060A	0xC04B    	RJMP       L00C2
;__Lib_MathDouble.c,514 :: 		
L0072div:
;__Lib_MathDouble.c,515 :: 		
0x060C	0x2EE6    	MOV        R14, R22
;__Lib_MathDouble.c,516 :: 		
0x060E	0x2ED5    	MOV        R13, R21
;__Lib_MathDouble.c,517 :: 		
0x0610	0x2EC4    	MOV        R12, R20
;__Lib_MathDouble.c,518 :: 		
0x0612	0x2EB3    	MOV        R11, R19
;__Lib_MathDouble.c,519 :: 		
0x0614	0x2EA2    	MOV        R10, R18
;__Lib_MathDouble.c,520 :: 		
0x0616	0x2E91    	MOV        R9, R17
;__Lib_MathDouble.c,521 :: 		
0x0618	0x2E80    	MOV        R8, R16
;__Lib_MathDouble.c,522 :: 		
0x061A	0x910F    	POP        R16
;__Lib_MathDouble.c,523 :: 		
0x061C	0x911F    	POP        R17
;__Lib_MathDouble.c,524 :: 		
0x061E	0x912F    	POP        R18
;__Lib_MathDouble.c,525 :: 		
0x0620	0x913F    	POP        R19
;__Lib_MathDouble.c,528 :: 		
0x0622	0xDF20    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,530 :: 		
0x0624	0xF161    	BREQ       L00AB
;__Lib_MathDouble.c,531 :: 		
0x0626	0x256E    	EOR        R22, R14
;__Lib_MathDouble.c,532 :: 		
0x0628	0x194C    	SUB        R20, R12
;__Lib_MathDouble.c,533 :: 		
0x062A	0x095D    	SBC        R21, R13
;__Lib_MathDouble.c,534 :: 		
0x062C	0x3840    	CPI        R20, 128
;__Lib_MathDouble.c,535 :: 		
0x062E	0x0753    	CPC        R21, R19
;__Lib_MathDouble.c,536 :: 		
0x0630	0xF53C    	BRGE       L00B1
;__Lib_MathDouble.c,537 :: 		
0x0632	0x3841    	CPI        R20, 129
;__Lib_MathDouble.c,538 :: 		
0x0634	0xEF7F    	LDI        R23, 255
;__Lib_MathDouble.c,539 :: 		
0x0636	0x0757    	CPC        R21, R23
;__Lib_MathDouble.c,540 :: 		
0x0638	0xF17C    	BRLT       L00BD
;__Lib_MathDouble.c,541 :: 		
0x063A	0xE280    	LDI        R24, 32
;__Lib_MathDouble.c,542 :: 		
0x063C	0x2477    	CLR        R7
;__Lib_MathDouble.c,543 :: 		
0x063E	0x2E63    	MOV        R6, R19
;__Lib_MathDouble.c,544 :: 		
0x0640	0x2E52    	MOV        R5, R18
;__Lib_MathDouble.c,545 :: 		
0x0642	0x2E41    	MOV        R4, R17
;__Lib_MathDouble.c,546 :: 		
0x0644	0x2F30    	MOV        R19, R16
;__Lib_MathDouble.c,547 :: 		
0x0646	0x2722    	CLR        R18
;__Lib_MathDouble.c,548 :: 		
0x0648	0x2711    	CLR        R17
;__Lib_MathDouble.c,549 :: 		
0x064A	0x2700    	CLR        R16
;__Lib_MathDouble.c,550 :: 		
L0092:
;__Lib_MathDouble.c,551 :: 		
0x064C	0x0F00    	LSL        R16
;__Lib_MathDouble.c,552 :: 		
0x064E	0x1F11    	ROL        R17
;__Lib_MathDouble.c,553 :: 		
0x0650	0x1F22    	ROL        R18
;__Lib_MathDouble.c,554 :: 		
0x0652	0x1F33    	ROL        R19
;__Lib_MathDouble.c,555 :: 		
0x0654	0x1C44    	ROL        R4
;__Lib_MathDouble.c,556 :: 		
0x0656	0x1C55    	ROL        R5
;__Lib_MathDouble.c,557 :: 		
0x0658	0x1C66    	ROL        R6
;__Lib_MathDouble.c,558 :: 		
0x065A	0x1C77    	ROL        R7
;__Lib_MathDouble.c,559 :: 		
0x065C	0xF028    	BRCS       L00A0div
;__Lib_MathDouble.c,560 :: 		
0x065E	0x1848    	SUB        R4, R8
;__Lib_MathDouble.c,561 :: 		
0x0660	0x0859    	SBC        R5, R9
;__Lib_MathDouble.c,562 :: 		
0x0662	0x086A    	SBC        R6, R10
;__Lib_MathDouble.c,563 :: 		
0x0664	0x087B    	SBC        R7, R11
;__Lib_MathDouble.c,564 :: 		
0x0666	0xC004    	RJMP       L00A4
;__Lib_MathDouble.c,565 :: 		
L00A0div:
;__Lib_MathDouble.c,566 :: 		
0x0668	0x0C48    	ADD        R4, R8
;__Lib_MathDouble.c,567 :: 		
0x066A	0x1C59    	ADC        R5, R9
;__Lib_MathDouble.c,568 :: 		
0x066C	0x1C6A    	ADC        R6, R10
;__Lib_MathDouble.c,569 :: 		
0x066E	0x1C7B    	ADC        R7, R11
;__Lib_MathDouble.c,570 :: 		
L00A4:
;__Lib_MathDouble.c,571 :: 		
0x0670	0xF00A    	BRMI       L00A6
;__Lib_MathDouble.c,572 :: 		
0x0672	0x6001    	ORI        R16, 1
;__Lib_MathDouble.c,573 :: 		
L00A6:
;__Lib_MathDouble.c,574 :: 		
0x0674	0x958A    	DEC        R24
;__Lib_MathDouble.c,575 :: 		
0x0676	0xF751    	BRNE       L0092
;__Lib_MathDouble.c,576 :: 		
0x0678	0x5041    	SUBI       R20, 1
;__Lib_MathDouble.c,577 :: 		
0x067A	0x4050    	SBCI       R21, 0
;__Lib_MathDouble.c,579 :: 		
0x067C	0xDEC5    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,581 :: 		
L00AB:
;__Lib_MathDouble.c,582 :: 		
0x067E	0xC016    	RJMP       L00C2x
;__Lib_MathDouble.c,583 :: 		
L00B1:
;__Lib_MathDouble.c,584 :: 		
0x0680	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,585 :: 		
0x0682	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,586 :: 		
0x0684	0xE72F    	LDI        R18, 127
;__Lib_MathDouble.c,587 :: 		
0x0686	0xE73F    	LDI        R19, 127
;__Lib_MathDouble.c,588 :: 		
0x0688	0x2366    	TST        R22
;__Lib_MathDouble.c,589 :: 		
0x068A	0xF3C9    	BREQ       L00AB
;__Lib_MathDouble.c,591 :: 		
0x068C	0xDE02    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,593 :: 		
0x068E	0xF3B9    	BREQ       L00AB
;__Lib_MathDouble.c,594 :: 		
0x0690	0x2D34    	MOV        R19, R4
;__Lib_MathDouble.c,595 :: 		
0x0692	0xE830    	LDI        R19, 128
;__Lib_MathDouble.c,596 :: 		
0x0694	0x2534    	EOR        R19, R4
;__Lib_MathDouble.c,597 :: 		
0x0696	0xCFF3    	RJMP       L00AB
;__Lib_MathDouble.c,598 :: 		
L00BD:
;__Lib_MathDouble.c,599 :: 		
0x0698	0x2700    	CLR        R16
;__Lib_MathDouble.c,600 :: 		
0x069A	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,601 :: 		
0x069C	0x2F20    	MOV        R18, R16
;__Lib_MathDouble.c,602 :: 		
0x069E	0x2F30    	MOV        R19, R16
;__Lib_MathDouble.c,603 :: 		
0x06A0	0xCFEE    	RJMP       L00AB
;__Lib_MathDouble.c,604 :: 		
L00C2:
;__Lib_MathDouble.c,606 :: 		
0x06A2	0x900F    	POP        R0
;__Lib_MathDouble.c,607 :: 		
0x06A4	0x900F    	POP        R0
;__Lib_MathDouble.c,608 :: 		
0x06A6	0x900F    	POP        R0
;__Lib_MathDouble.c,609 :: 		
0x06A8	0x900F    	POP        R0
;__Lib_MathDouble.c,610 :: 		
0x06AA	0xCFEA    	RJMP       L00B1
;__Lib_MathDouble.c,612 :: 		
L00C2x:
;__Lib_MathDouble.c,614 :: 		
L_end_float_fpdiv:
0x06AC	0x9508    	RET
; end of _float_fpdiv
_float_fpadd1:
;__Lib_MathDouble.c,368 :: 		
;__Lib_MathDouble.c,370 :: 		
0x0BE0	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,371 :: 		
0x0BE2	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,372 :: 		
0x0BE4	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,373 :: 		
0x0BE6	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,375 :: 		
0x0BE8	0xDDBE    	RCALL      _float_fpadd+0
;__Lib_MathDouble.c,377 :: 		
0x0BEA	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,378 :: 		
0x0BEC	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,379 :: 		
0x0BEE	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,380 :: 		
0x0BF0	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,382 :: 		
L_end_float_fpadd1:
0x0BF2	0x9508    	RET
; end of _float_fpadd1
_float_fpadd:
;__Lib_MathDouble.c,361 :: 		
;__Lib_MathDouble.c,363 :: 		
0x0766	0x94E8    	CLT
;__Lib_MathDouble.c,365 :: 		
0x0768	0xDDA3    	RCALL      _float_fpadd_alt+0
;__Lib_MathDouble.c,366 :: 		
L_end_float_fpadd:
0x076A	0x9508    	RET
; end of _float_fpadd
_constrain:
0x1D26	0x93CF    	PUSH       R28
0x1D28	0x93DF    	PUSH       R29
0x1D2A	0xB7CD    	IN         R28, SPL+0
0x1D2C	0xB7DE    	IN         R29, SPL+1
0x1D2E	0x9625    	ADIW       R28, 5
;comms_demo.c,205 :: 		float constrain(float value, float value_min, float value_max)
; value_max start address is: 20 (R20)
0x1D30	0x8148    	LDD        R20, Y+0
0x1D32	0x8159    	LDD        R21, Y+1
0x1D34	0x816A    	LDD        R22, Y+2
0x1D36	0x817B    	LDD        R23, Y+3
;comms_demo.c,207 :: 		if(value >= value_max)
0x1D38	0x937F    	PUSH       R23
0x1D3A	0x936F    	PUSH       R22
0x1D3C	0x935F    	PUSH       R21
0x1D3E	0x934F    	PUSH       R20
0x1D40	0x929F    	PUSH       R9
0x1D42	0x928F    	PUSH       R8
0x1D44	0x927F    	PUSH       R7
0x1D46	0x926F    	PUSH       R6
0x1D48	0x925F    	PUSH       R5
0x1D4A	0x924F    	PUSH       R4
0x1D4C	0x923F    	PUSH       R3
0x1D4E	0x922F    	PUSH       R2
0x1D50	0x0181    	MOVW       R16, R2
0x1D52	0x0192    	MOVW       R18, R4
0x1D54	0xDA1F    	RCALL      _float_op_gequ+0
0x1D56	0x2800    	OR         R0, R0
0x1D58	0xE000    	LDI        R16, 0
0x1D5A	0xF009    	BREQ       L__constrain468
0x1D5C	0xE001    	LDI        R16, 1
L__constrain468:
0x1D5E	0x902F    	POP        R2
0x1D60	0x903F    	POP        R3
0x1D62	0x904F    	POP        R4
0x1D64	0x905F    	POP        R5
0x1D66	0x906F    	POP        R6
0x1D68	0x907F    	POP        R7
0x1D6A	0x908F    	POP        R8
0x1D6C	0x909F    	POP        R9
0x1D6E	0x914F    	POP        R20
0x1D70	0x915F    	POP        R21
0x1D72	0x916F    	POP        R22
0x1D74	0x917F    	POP        R23
0x1D76	0x2300    	TST        R16
0x1D78	0xF019    	BREQ       L_constrain221
L__constrain469:
;comms_demo.c,209 :: 		return value_max;
0x1D7A	0x018A    	MOVW       R16, R20
0x1D7C	0x019B    	MOVW       R18, R22
; value_max end address is: 20 (R20)
0x1D7E	0xC021    	RJMP       L_end_constrain
;comms_demo.c,210 :: 		}
L_constrain221:
;comms_demo.c,211 :: 		else if(value <= value_min)
0x1D80	0x929F    	PUSH       R9
0x1D82	0x928F    	PUSH       R8
0x1D84	0x927F    	PUSH       R7
0x1D86	0x926F    	PUSH       R6
0x1D88	0x925F    	PUSH       R5
0x1D8A	0x924F    	PUSH       R4
0x1D8C	0x923F    	PUSH       R3
0x1D8E	0x922F    	PUSH       R2
0x1D90	0x01A3    	MOVW       R20, R6
0x1D92	0x01B4    	MOVW       R22, R8
0x1D94	0x0181    	MOVW       R16, R2
0x1D96	0x0192    	MOVW       R18, R4
0x1D98	0x05B2940E  	CALL       _float_op_lequ+0
0x1D9C	0x2800    	OR         R0, R0
0x1D9E	0xE000    	LDI        R16, 0
0x1DA0	0xF009    	BREQ       L__constrain470
0x1DA2	0xE001    	LDI        R16, 1
L__constrain470:
0x1DA4	0x902F    	POP        R2
0x1DA6	0x903F    	POP        R3
0x1DA8	0x904F    	POP        R4
0x1DAA	0x905F    	POP        R5
0x1DAC	0x906F    	POP        R6
0x1DAE	0x907F    	POP        R7
0x1DB0	0x908F    	POP        R8
0x1DB2	0x909F    	POP        R9
0x1DB4	0x2300    	TST        R16
0x1DB6	0xF019    	BREQ       L_constrain223
L__constrain471:
;comms_demo.c,213 :: 		return value_min;
0x1DB8	0x0183    	MOVW       R16, R6
0x1DBA	0x0194    	MOVW       R18, R8
0x1DBC	0xC002    	RJMP       L_end_constrain
;comms_demo.c,214 :: 		}
L_constrain223:
;comms_demo.c,217 :: 		return value;
0x1DBE	0x0181    	MOVW       R16, R2
0x1DC0	0x0192    	MOVW       R18, R4
;comms_demo.c,219 :: 		}
L_end_constrain:
0x1DC2	0x91DF    	POP        R29
0x1DC4	0x91CF    	POP        R28
0x1DC6	0x9508    	RET
; end of _constrain
_float_op_lequ:
;__Lib_MathDouble.c,742 :: 		
;__Lib_MathDouble.c,744 :: 		
0x0B64	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,745 :: 		
0x0B66	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,746 :: 		
0x0B68	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,747 :: 		
0x0B6A	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,749 :: 		
0x0B6C	0x2F04    	MOV        R16, R20
;__Lib_MathDouble.c,750 :: 		
0x0B6E	0x2F15    	MOV        R17, R21
;__Lib_MathDouble.c,751 :: 		
0x0B70	0x2F26    	MOV        R18, R22
;__Lib_MathDouble.c,752 :: 		
0x0B72	0x2F37    	MOV        R19, R23
;__Lib_MathDouble.c,754 :: 		
0x0B74	0xDC36    	RCALL      _float_fpcmp+0
;__Lib_MathDouble.c,756 :: 		
0x0B76	0x2300    	TST        R16
;__Lib_MathDouble.c,757 :: 		
0x0B78	0xF01C    	BRLT       op_lequ_false
;__Lib_MathDouble.c,758 :: 		
0x0B7A	0x2400    	CLR        R0
;__Lib_MathDouble.c,759 :: 		
0x0B7C	0x9403    	INC        R0
;__Lib_MathDouble.c,760 :: 		
0x0B7E	0xC001    	RJMP       op_lequ_exit
;__Lib_MathDouble.c,761 :: 		
op_lequ_false:
;__Lib_MathDouble.c,762 :: 		
0x0B80	0x2400    	CLR        R0
;__Lib_MathDouble.c,763 :: 		
op_lequ_exit:
;__Lib_MathDouble.c,765 :: 		
L_end_float_op_lequ:
0x0B82	0x9508    	RET
; end of _float_op_lequ
_float_ulong2fp:
;__Lib_MathDouble.c,129 :: 		
;__Lib_MathDouble.c,131 :: 		
0x1D1E	0x9468    	BSET       6
;__Lib_MathDouble.c,133 :: 		
0x1D20	0x046E940E  	CALL       _float_long2fp+0
;__Lib_MathDouble.c,134 :: 		
L_end_float_ulong2fp:
0x1D24	0x9508    	RET
; end of _float_ulong2fp
0x309E	0xE0A0    	LDI        R26, 0
0x30A0	0xE2B0    	LDI        R27, 32
0x30A2	0xE6EE    	LDI        R30, 110
0x30A4	0xE3F0    	LDI        R31, 48
0x30A6	0xE18C    	LDI        R24, 28
0x30A8	0xE090    	LDI        R25, 0
0x30AA	0x0D86940E  	CALL       ___CC2DW
0x30AE	0x9508    	RET
;comms_demo.c,1 :: comms_demo_font
0x2E66	0x0000 ;comms_demo_font+0
0x2E68	0x0000 ;comms_demo_font+2
0x2E6A	0x0000 ;comms_demo_font+4
0x2E6C	0x5F00 ;comms_demo_font+6
0x2E6E	0x0000 ;comms_demo_font+8
0x2E70	0x0700 ;comms_demo_font+10
0x2E72	0x0700 ;comms_demo_font+12
0x2E74	0x1400 ;comms_demo_font+14
0x2E76	0x147F ;comms_demo_font+16
0x2E78	0x147F ;comms_demo_font+18
0x2E7A	0x2A24 ;comms_demo_font+20
0x2E7C	0x2A7F ;comms_demo_font+22
0x2E7E	0x2312 ;comms_demo_font+24
0x2E80	0x0813 ;comms_demo_font+26
0x2E82	0x6264 ;comms_demo_font+28
0x2E84	0x4936 ;comms_demo_font+30
0x2E86	0x2255 ;comms_demo_font+32
0x2E88	0x0050 ;comms_demo_font+34
0x2E8A	0x0305 ;comms_demo_font+36
0x2E8C	0x0000 ;comms_demo_font+38
0x2E8E	0x1C00 ;comms_demo_font+40
0x2E90	0x4122 ;comms_demo_font+42
0x2E92	0x0000 ;comms_demo_font+44
0x2E94	0x2241 ;comms_demo_font+46
0x2E96	0x001C ;comms_demo_font+48
0x2E98	0x0814 ;comms_demo_font+50
0x2E9A	0x083E ;comms_demo_font+52
0x2E9C	0x0814 ;comms_demo_font+54
0x2E9E	0x3E08 ;comms_demo_font+56
0x2EA0	0x0808 ;comms_demo_font+58
0x2EA2	0x5000 ;comms_demo_font+60
0x2EA4	0x0030 ;comms_demo_font+62
0x2EA6	0x0800 ;comms_demo_font+64
0x2EA8	0x0808 ;comms_demo_font+66
0x2EAA	0x0808 ;comms_demo_font+68
0x2EAC	0x6000 ;comms_demo_font+70
0x2EAE	0x0060 ;comms_demo_font+72
0x2EB0	0x2000 ;comms_demo_font+74
0x2EB2	0x0810 ;comms_demo_font+76
0x2EB4	0x0204 ;comms_demo_font+78
0x2EB6	0x513E ;comms_demo_font+80
0x2EB8	0x4549 ;comms_demo_font+82
0x2EBA	0x003E ;comms_demo_font+84
0x2EBC	0x7F42 ;comms_demo_font+86
0x2EBE	0x0040 ;comms_demo_font+88
0x2EC0	0x6142 ;comms_demo_font+90
0x2EC2	0x4951 ;comms_demo_font+92
0x2EC4	0x2146 ;comms_demo_font+94
0x2EC6	0x4541 ;comms_demo_font+96
0x2EC8	0x314B ;comms_demo_font+98
0x2ECA	0x1418 ;comms_demo_font+100
0x2ECC	0x7F12 ;comms_demo_font+102
0x2ECE	0x2710 ;comms_demo_font+104
0x2ED0	0x4545 ;comms_demo_font+106
0x2ED2	0x3945 ;comms_demo_font+108
0x2ED4	0x4A3C ;comms_demo_font+110
0x2ED6	0x4949 ;comms_demo_font+112
0x2ED8	0x0130 ;comms_demo_font+114
0x2EDA	0x0971 ;comms_demo_font+116
0x2EDC	0x0305 ;comms_demo_font+118
0x2EDE	0x4936 ;comms_demo_font+120
0x2EE0	0x4949 ;comms_demo_font+122
0x2EE2	0x0636 ;comms_demo_font+124
0x2EE4	0x4949 ;comms_demo_font+126
0x2EE6	0x1E29 ;comms_demo_font+128
0x2EE8	0x3600 ;comms_demo_font+130
0x2EEA	0x0036 ;comms_demo_font+132
0x2EEC	0x0000 ;comms_demo_font+134
0x2EEE	0x3656 ;comms_demo_font+136
0x2EF0	0x0000 ;comms_demo_font+138
0x2EF2	0x1408 ;comms_demo_font+140
0x2EF4	0x4122 ;comms_demo_font+142
0x2EF6	0x1400 ;comms_demo_font+144
0x2EF8	0x1414 ;comms_demo_font+146
0x2EFA	0x1414 ;comms_demo_font+148
0x2EFC	0x4100 ;comms_demo_font+150
0x2EFE	0x1422 ;comms_demo_font+152
0x2F00	0x0208 ;comms_demo_font+154
0x2F02	0x5101 ;comms_demo_font+156
0x2F04	0x0609 ;comms_demo_font+158
0x2F06	0x4932 ;comms_demo_font+160
0x2F08	0x4179 ;comms_demo_font+162
0x2F0A	0x7E3E ;comms_demo_font+164
0x2F0C	0x1111 ;comms_demo_font+166
0x2F0E	0x7E11 ;comms_demo_font+168
0x2F10	0x497F ;comms_demo_font+170
0x2F12	0x4949 ;comms_demo_font+172
0x2F14	0x3E36 ;comms_demo_font+174
0x2F16	0x4141 ;comms_demo_font+176
0x2F18	0x2241 ;comms_demo_font+178
0x2F1A	0x417F ;comms_demo_font+180
0x2F1C	0x2241 ;comms_demo_font+182
0x2F1E	0x7F1C ;comms_demo_font+184
0x2F20	0x4949 ;comms_demo_font+186
0x2F22	0x4149 ;comms_demo_font+188
0x2F24	0x097F ;comms_demo_font+190
0x2F26	0x0909 ;comms_demo_font+192
0x2F28	0x3E01 ;comms_demo_font+194
0x2F2A	0x4941 ;comms_demo_font+196
0x2F2C	0x7A49 ;comms_demo_font+198
0x2F2E	0x087F ;comms_demo_font+200
0x2F30	0x0808 ;comms_demo_font+202
0x2F32	0x007F ;comms_demo_font+204
0x2F34	0x7F41 ;comms_demo_font+206
0x2F36	0x0041 ;comms_demo_font+208
0x2F38	0x4020 ;comms_demo_font+210
0x2F3A	0x3F41 ;comms_demo_font+212
0x2F3C	0x7F01 ;comms_demo_font+214
0x2F3E	0x1408 ;comms_demo_font+216
0x2F40	0x4122 ;comms_demo_font+218
0x2F42	0x407F ;comms_demo_font+220
0x2F44	0x4040 ;comms_demo_font+222
0x2F46	0x7F40 ;comms_demo_font+224
0x2F48	0x0C02 ;comms_demo_font+226
0x2F4A	0x7F02 ;comms_demo_font+228
0x2F4C	0x047F ;comms_demo_font+230
0x2F4E	0x1008 ;comms_demo_font+232
0x2F50	0x3E7F ;comms_demo_font+234
0x2F52	0x4141 ;comms_demo_font+236
0x2F54	0x3E41 ;comms_demo_font+238
0x2F56	0x097F ;comms_demo_font+240
0x2F58	0x0909 ;comms_demo_font+242
0x2F5A	0x3E06 ;comms_demo_font+244
0x2F5C	0x5141 ;comms_demo_font+246
0x2F5E	0x5E21 ;comms_demo_font+248
0x2F60	0x097F ;comms_demo_font+250
0x2F62	0x2919 ;comms_demo_font+252
0x2F64	0x4646 ;comms_demo_font+254
0x2F66	0x4949 ;comms_demo_font+256
0x2F68	0x3149 ;comms_demo_font+258
0x2F6A	0x0101 ;comms_demo_font+260
0x2F6C	0x017F ;comms_demo_font+262
0x2F6E	0x3F01 ;comms_demo_font+264
0x2F70	0x4040 ;comms_demo_font+266
0x2F72	0x3F40 ;comms_demo_font+268
0x2F74	0x201F ;comms_demo_font+270
0x2F76	0x2040 ;comms_demo_font+272
0x2F78	0x3F1F ;comms_demo_font+274
0x2F7A	0x3840 ;comms_demo_font+276
0x2F7C	0x3F40 ;comms_demo_font+278
0x2F7E	0x1463 ;comms_demo_font+280
0x2F80	0x1408 ;comms_demo_font+282
0x2F82	0x0763 ;comms_demo_font+284
0x2F84	0x7008 ;comms_demo_font+286
0x2F86	0x0708 ;comms_demo_font+288
0x2F88	0x5161 ;comms_demo_font+290
0x2F8A	0x4549 ;comms_demo_font+292
0x2F8C	0x0043 ;comms_demo_font+294
0x2F8E	0x417F ;comms_demo_font+296
0x2F90	0x0041 ;comms_demo_font+298
0x2F92	0x0402 ;comms_demo_font+300
0x2F94	0x1008 ;comms_demo_font+302
0x2F96	0x0020 ;comms_demo_font+304
0x2F98	0x4141 ;comms_demo_font+306
0x2F9A	0x007F ;comms_demo_font+308
0x2F9C	0x0204 ;comms_demo_font+310
0x2F9E	0x0201 ;comms_demo_font+312
0x2FA0	0x4004 ;comms_demo_font+314
0x2FA2	0x4040 ;comms_demo_font+316
0x2FA4	0x4040 ;comms_demo_font+318
0x2FA6	0x0100 ;comms_demo_font+320
0x2FA8	0x0402 ;comms_demo_font+322
0x2FAA	0x2000 ;comms_demo_font+324
0x2FAC	0x5454 ;comms_demo_font+326
0x2FAE	0x7854 ;comms_demo_font+328
0x2FB0	0x487F ;comms_demo_font+330
0x2FB2	0x4444 ;comms_demo_font+332
0x2FB4	0x3838 ;comms_demo_font+334
0x2FB6	0x4444 ;comms_demo_font+336
0x2FB8	0x2044 ;comms_demo_font+338
0x2FBA	0x4438 ;comms_demo_font+340
0x2FBC	0x4844 ;comms_demo_font+342
0x2FBE	0x387F ;comms_demo_font+344
0x2FC0	0x5454 ;comms_demo_font+346
0x2FC2	0x1854 ;comms_demo_font+348
0x2FC4	0x7E08 ;comms_demo_font+350
0x2FC6	0x0109 ;comms_demo_font+352
0x2FC8	0x0C02 ;comms_demo_font+354
0x2FCA	0x5252 ;comms_demo_font+356
0x2FCC	0x3E52 ;comms_demo_font+358
0x2FCE	0x087F ;comms_demo_font+360
0x2FD0	0x0404 ;comms_demo_font+362
0x2FD2	0x0078 ;comms_demo_font+364
0x2FD4	0x7D44 ;comms_demo_font+366
0x2FD6	0x0040 ;comms_demo_font+368
0x2FD8	0x4020 ;comms_demo_font+370
0x2FDA	0x3D44 ;comms_demo_font+372
0x2FDC	0x7F00 ;comms_demo_font+374
0x2FDE	0x2810 ;comms_demo_font+376
0x2FE0	0x0044 ;comms_demo_font+378
0x2FE2	0x4100 ;comms_demo_font+380
0x2FE4	0x407F ;comms_demo_font+382
0x2FE6	0x7C00 ;comms_demo_font+384
0x2FE8	0x1804 ;comms_demo_font+386
0x2FEA	0x7804 ;comms_demo_font+388
0x2FEC	0x087C ;comms_demo_font+390
0x2FEE	0x0404 ;comms_demo_font+392
0x2FF0	0x3878 ;comms_demo_font+394
0x2FF2	0x4444 ;comms_demo_font+396
0x2FF4	0x3844 ;comms_demo_font+398
0x2FF6	0x147C ;comms_demo_font+400
0x2FF8	0x1414 ;comms_demo_font+402
0x2FFA	0x0808 ;comms_demo_font+404
0x2FFC	0x1414 ;comms_demo_font+406
0x2FFE	0x7C18 ;comms_demo_font+408
0x3000	0x087C ;comms_demo_font+410
0x3002	0x0404 ;comms_demo_font+412
0x3004	0x4808 ;comms_demo_font+414
0x3006	0x5454 ;comms_demo_font+416
0x3008	0x2054 ;comms_demo_font+418
0x300A	0x3F04 ;comms_demo_font+420
0x300C	0x4044 ;comms_demo_font+422
0x300E	0x3C20 ;comms_demo_font+424
0x3010	0x4040 ;comms_demo_font+426
0x3012	0x7C20 ;comms_demo_font+428
0x3014	0x201C ;comms_demo_font+430
0x3016	0x2040 ;comms_demo_font+432
0x3018	0x3C1C ;comms_demo_font+434
0x301A	0x3040 ;comms_demo_font+436
0x301C	0x3C40 ;comms_demo_font+438
0x301E	0x2844 ;comms_demo_font+440
0x3020	0x2810 ;comms_demo_font+442
0x3022	0x0C44 ;comms_demo_font+444
0x3024	0x5050 ;comms_demo_font+446
0x3026	0x3C50 ;comms_demo_font+448
0x3028	0x6444 ;comms_demo_font+450
0x302A	0x4C54 ;comms_demo_font+452
0x302C	0x0044 ;comms_demo_font+454
0x302E	0x3608 ;comms_demo_font+456
0x3030	0x0041 ;comms_demo_font+458
0x3032	0x0000 ;comms_demo_font+460
0x3034	0x007F ;comms_demo_font+462
0x3036	0x0000 ;comms_demo_font+464
0x3038	0x3641 ;comms_demo_font+466
0x303A	0x0008 ;comms_demo_font+468
0x303C	0x0810 ;comms_demo_font+470
0x303E	0x1008 ;comms_demo_font+472
0x3040	0x7808 ;comms_demo_font+474
0x3042	0x4146 ;comms_demo_font+476
0x3044	0x7846 ;comms_demo_font+478
; end of comms_demo_font
;comms_demo.c,7 :: _symbol
0x3098	0x0C00 ;_symbol+0
0x309A	0x1212 ;_symbol+2
0x309C	0x0C ;_symbol+4
; end of _symbol
;comms_demo.c,0 :: ?ICS_md
0x306E	0x0000 ;?ICS_md+0
; end of ?ICS_md
;comms_demo.c,0 :: ?ICS_w
0x3070	0x80 ;?ICS_w+0
; end of ?ICS_w
;comms_demo.c,0 :: ?ICS_ac5
0x3071	0x0000 ;?ICS_ac5+0
; end of ?ICS_ac5
;comms_demo.c,0 :: ?ICS_mc
0x3073	0x0000 ;?ICS_mc+0
; end of ?ICS_mc
;comms_demo.c,0 :: ?ICS_l
0x3075	0xA0 ;?ICS_l+0
; end of ?ICS_l
;comms_demo.c,0 :: ?ICS_mb
0x3076	0x0000 ;?ICS_mb+0
; end of ?ICS_mb
;comms_demo.c,0 :: ?ICS_ac6
0x3078	0x0000 ;?ICS_ac6+0
; end of ?ICS_ac6
;comms_demo.c,0 :: ?ICS_ac1
0x307A	0x0000 ;?ICS_ac1+0
; end of ?ICS_ac1
;comms_demo.c,0 :: ?ICS__b2
0x307C	0x0000 ;?ICS__b2+0
; end of ?ICS__b2
;comms_demo.c,0 :: ?ICS_ac2
0x307E	0x0000 ;?ICS_ac2+0
; end of ?ICS_ac2
;comms_demo.c,0 :: ?ICS__b5
0x3080	0x0000 ;?ICS__b5+0
0x3082	0x0000 ;?ICS__b5+2
; end of ?ICS__b5
;comms_demo.c,0 :: ?ICS_ac4
0x3084	0x0000 ;?ICS_ac4+0
; end of ?ICS_ac4
;comms_demo.c,0 :: ?ICS__b1
0x3086	0x0000 ;?ICS__b1+0
; end of ?ICS__b1
;comms_demo.c,0 :: ?ICS_ac3
0x3088	0x0000 ;?ICS_ac3+0
; end of ?ICS_ac3
;comms_demo.c,0 :: ?ICS?lstr1_comms_demo
0x308A	0x2F54 ;?ICS?lstr1_comms_demo+0
0x308C	0x4320 ;?ICS?lstr1_comms_demo+2
0x308E	0x003A ;?ICS?lstr1_comms_demo+4
; end of ?ICS?lstr1_comms_demo
;comms_demo.c,0 :: ?ICS?lstr2_comms_demo
0x3090	0x2F50 ;?ICS?lstr2_comms_demo+0
0x3092	0x506B ;?ICS?lstr2_comms_demo+2
0x3094	0x3A61 ;?ICS?lstr2_comms_demo+4
0x3096	0x00 ;?ICS?lstr2_comms_demo+6
; end of ?ICS?lstr2_comms_demo
;comms_demo.c,0 :: ?ICSmain_sample_L0
0x3097	0x00 ;?ICSmain_sample_L0+0
; end of ?ICSmain_sample_L0
;comms_demo.c,0 :: ?ICS?lstr3_comms_demo
0x3046	0x4D42 ;?ICS?lstr3_comms_demo+0
0x3048	0x3150 ;?ICS?lstr3_comms_demo+2
0x304A	0x3038 ;?ICS?lstr3_comms_demo+4
0x304C	0x2B20 ;?ICS?lstr3_comms_demo+6
0x304E	0x5820 ;?ICS?lstr3_comms_demo+8
0x3050	0x654D ;?ICS?lstr3_comms_demo+10
0x3052	0x6167 ;?ICS?lstr3_comms_demo+12
0x3054	0x00 ;?ICS?lstr3_comms_demo+14
; end of ?ICS?lstr3_comms_demo
;comms_demo.c,0 :: ?ICS?lstr4_comms_demo
0x3055	0x506B ;?ICS?lstr4_comms_demo+0
0x3057	0x0061 ;?ICS?lstr4_comms_demo+2
; end of ?ICS?lstr4_comms_demo
;comms_demo.c,0 :: ?ICS?lstr5_comms_demo
0x3059	0x0043 ;?ICS?lstr5_comms_demo+0
; end of ?ICS?lstr5_comms_demo
;comms_demo.c,0 :: ?ICS?lstr6_comms_demo
0x305B	0x3531 ;?ICS?lstr6_comms_demo+0
0x305D	0x0030 ;?ICS?lstr6_comms_demo+2
; end of ?ICS?lstr6_comms_demo
;comms_demo.c,0 :: ?ICS?lstr7_comms_demo
0x305F	0x3039 ;?ICS?lstr7_comms_demo+0
0x3061	0x00 ;?ICS?lstr7_comms_demo+2
; end of ?ICS?lstr7_comms_demo
;comms_demo.c,0 :: ?ICS?lstr8_comms_demo
0x3062	0x3031 ;?ICS?lstr8_comms_demo+0
0x3064	0x0030 ;?ICS?lstr8_comms_demo+2
; end of ?ICS?lstr8_comms_demo
;comms_demo.c,0 :: ?ICS?lstr9_comms_demo
0x3066	0x3035 ;?ICS?lstr9_comms_demo+0
0x3068	0x00 ;?ICS?lstr9_comms_demo+2
; end of ?ICS?lstr9_comms_demo
;comms_demo.c,0 :: ?ICS?lstr10_comms_demo
0x3069	0x3035 ;?ICS?lstr10_comms_demo+0
0x306B	0x00 ;?ICS?lstr10_comms_demo+2
; end of ?ICS?lstr10_comms_demo
;comms_demo.c,0 :: ?ICS?lstr11_comms_demo
0x306C	0x0030 ;?ICS?lstr11_comms_demo+0
; end of ?ICS?lstr11_comms_demo
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x00FE      [15]    _TWIC_Read
0x010D      [27]    _TWIC_Write
0x0128      [19]    _TWIC_Start
0x013B       [4]    _TWIC_Stop
0x013F      [10]    _float_pack
0x0149       [8]    _float_tstr16_r19
0x0151       [7]    _float_unpacks
0x0158      [91]    _float_fpadd_alt
0x01B3      [54]    _Draw_Font_Pixel
0x01E9       [8]    _SPIC_Write
0x01F1      [11]    _float_fpcmp
0x01FC       [8]    _HWMul_16x16
0x0204      [46]    _float_normalize_and_pack
0x0232      [21]    _float_unpacku
0x0247      [14]    _swap
0x0255       [9]    _float_neg32
0x025E       [9]    _SPI_Set_Active
0x0267      [35]    _SPIC_Init_Advanced
0x028A      [25]    _BMP180_read_word
0x02A3      [20]    _Div_16x16_U
0x02B7      [68]    _Draw_H_Line
0x02FB      [92]    _float_fpdiv
0x0357      [25]    _Draw_Pixel
0x0370      [67]    _Draw_V_Line
0x03B3       [3]    _float_fpadd
0x03B6      [62]    _float_fpmul
0x03F4      [80]    _BMP180_Calibration
0x0444      [42]    _Div_16x16_S
0x046E      [10]    _float_long2fp
0x0478       [3]    _float_fpsub
0x047B      [52]    _TFT_set_display_window
0x04AF      [18]    _TFT_Write
0x04C1      [20]    _TFT_write_word
0x04D5       [7]    _float_fpcmp1
0x04DC      [23]    _ST7735_Reset
0x04F3       [7]    _TWIC_Init
0x04FA     [116]    _print_char
0x056E      [49]    _setup_TFT_peripherals
0x059F      [19]    _BMP180_read_byte
0x05B2      [16]    _float_op_lequ
0x05C2      [10]    _float_fpdiv1
0x05CC      [36]    _float_fpint
0x05F0      [10]    _float_fpadd1
0x05FA       [7]    _float_op_less
0x0601      [10]    _float_fpsub1
0x060B     [540]    _print_I
0x0827      [34]    _Div_32x32_U
0x0849     [129]    _print_D
0x08CA       [7]    _float_op_gequ
0x08D1      [20]    _Swap_Colour
0x08E5      [33]    _TFT_fill
0x0906      [83]    _print_str
0x0959     [114]    _print_symbol
0x09CB     [208]    _Draw_Rectangle
0x0A9B     [148]    _GPIO_setup
0x0B2F      [55]    _clock_setup
0x0B66      [15]    _BMP180_init
0x0B75      [68]    _Set_Rotation
0x0BB9     [461]    _ST7735_init
0x0D86       [5]    ___CC2DW
0x0D8B      [11]    _float_fpmul1
0x0D96      [30]    _HWMul_32x32
0x0DB4       [4]    _float_slong2fp
0x0DB8      [65]    _Div_32x32_S
0x0DF9      [18]    _BMP180_write
0x0E0B     [132]    _read_uncompensated_pressure
0x0E8F       [4]    _float_ulong2fp
0x0E93      [81]    _constrain
0x0EE4      [17]    _setup
0x0EF5     [520]    _draw_background
0x10FD     [102]    _get_temperature
0x1163      [21]    _read_uncompensated_temperature
0x1178     [127]    _map
0x11F7     [369]    _get_pressure
0x1368     [525]    _print_F
0x1575     [446]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [0]    BLBA1_LOCKBIT_LOCKBITS_bit
0x0000       [0]    BLBAT0_LOCKBIT_LOCKBITS_bit
0x0000       [0]    BLBB0_LOCKBIT_LOCKBITS_bit
0x0000       [1]    LOCKBIT_LOCKBITS
0x0000       [0]    BLBB1_LOCKBIT_LOCKBITS_bit
0x0000       [0]    BLBA0_LOCKBIT_LOCKBITS_bit
0x0000       [1]    Delay_Cyc_loc_L0
0x0000       [0]    BLBAT1_LOCKBIT_LOCKBITS_bit
0x0000       [0]    LB1_LOCKBIT_LOCKBITS_bit
0x0000       [1]    PROD_SIGNATURES_RCOSC2M
0x0000       [0]    LB0_LOCKBIT_LOCKBITS_bit
0x0000       [1]    GPIO_GPIOR0
0x0001       [1]    R1
0x0001       [0]    WDP1_bit
0x0001       [0]    WDP3_bit
0x0001       [0]    WDP2_bit
0x0001       [0]    WDP0_bit
0x0001       [0]    WDWP0_bit
0x0001       [1]    FUSE_FUSEBYTE1
0x0001       [0]    WDWP1_bit
0x0001       [0]    WDWP3_bit
0x0001       [0]    WDWP2_bit
0x0001       [1]    PROD_SIGNATURES_RCOSC2MA
0x0001       [1]    GPIO_GPIOR1
0x0002       [1]    FARG_TWIC_Read_ack
0x0002       [1]    GPIO_GPIOR2
0x0002       [2]    FARG_Ow_Write_port
0x0002       [1]    FARG_Draw_Pixel_x_pos
0x0002       [2]    FARG_Ow_Read_port
0x0002       [2]    FARG_TFT_fill_colour
0x0002       [1]    FARG_Delay_Cyc_cycles_div_by_10
0x0002       [1]    FARG_BMP180_read_byte_address
0x0002       [1]    R2
0x0002       [2]    FARG_TFT_fill_area_x1
0x0002       [1]    FARG_SPID_Init_Advanced_mode
0x0002       [1]    FARG_BMP180_write_address
0x0002       [4]    FARG_map_value
0x0002       [2]    FARG_Draw_Point_x_pos
0x0002       [4]    FARG_get_pressure_UP
0x0002       [2]    FARG_get_temperature_UT
0x0002       [1]    FARG_read_uncompensated_pressure_OSS
0x0002       [1]    FARG_SPIC_Write_data_out
0x0002       [1]    FARG_SPIC_Read_data_out
0x0002       [1]    PROD_SIGNATURES_RCOSC32K
0x0002       [1]    FARG_BMP180_read_word_address
0x0002       [4]    FARG_constrain_value
0x0002       [1]    FARG_SPIC_Init_Advanced_mode
0x0002       [1]    FARG_Set_Rotation_m
0x0002       [2]    FARG_print_F_x_pos
0x0002       [0]    BODPD0_bit
0x0002       [0]    BODPD1_bit
0x0002       [2]    FARG_Draw_BMP_x_pos1
0x0002       [2]    FARG_Ow_Reset_port
0x0002       [0]    TOSCSEL_bit
0x0002       [2]    FARG_print_symbol_x_pos
0x0002       [1]    FARG_SPID_Read_data_out
0x0002       [1]    FARG_SPID_Write_data_out
0x0002       [1]    FARG_SPI_Write_data_out
0x0002       [1]    FARG_SPI_Read_buffer
0x0002       [2]    FARG_SPI_Set_Active_read_ptr
0x0002       [1]    FARG_TWIC_Write_data_
0x0002       [1]    FARG_Invert_Display_i
0x0002       [1]    FARG_TFT_set_display_window_xs
0x0002       [1]    FARG_Color565_r
0x0002       [2]    FARG_Swap_Colour_colour
0x0002       [2]    FARG_VDelay_ms_Time_ms
0x0002       [2]    FARG_swap_a
0x0002       [1]    FUSE_FUSEBYTE2
0x0002       [0]    BOOTRST_bit
0x0002       [2]    FARG_TFT_write_word_value
0x0002       [1]    FARG_TFT_Write_value
0x0002       [2]    FARG_VDelay_Advanced_ms_Time_ms
0x0002       [2]    FARG_print_C_x_pos
0x0002       [2]    FARG_print_I_x_pos
0x0002       [2]    FARG_Draw_Circle_xc
0x0002       [1]    FARG_Draw_Font_Pixel_x_pos
0x0002       [2]    FARG_print_char_x_pos
0x0002       [2]    FARG_print_str_x_pos
0x0002       [2]    FARG_Draw_H_Bar_x1
0x0002       [2]    FARG_Draw_H_Line_x1
0x0002       [2]    FARG_Draw_V_Line_x1
0x0002       [2]    FARG_Draw_V_Bar_x1
0x0002       [2]    FARG_Draw_Line_x1
0x0002       [2]    FARG_print_D_x_pos
0x0002       [2]    FARG_Draw_Triangle_x1
0x0002       [2]    FARG_Draw_Rectangle_x1
0x0003       [1]    FARG_TFT_set_display_window_ys
0x0003       [1]    FARG_TFT_Write_mode
0x0003       [1]    PROD_SIGNATURES_RCOSC32M
0x0003       [1]    FARG_BMP180_write_value
0x0003       [1]    GPIO_GPIOR3
0x0003       [1]    FARG_Draw_Pixel_y_pos
0x0003       [1]    R3
0x0003       [1]    FARG_SPID_Init_Advanced_fcy_div
0x0003       [1]    FARG_Draw_Font_Pixel_y_pos
0x0003       [1]    FARG_SPIC_Init_Advanced_fcy_div
0x0003       [1]    FARG_Color565_g
0x0004       [2]    FARG_Draw_Rectangle_y1
0x0004       [2]    FARG_Draw_BMP_y_pos1
0x0004       [2]    FARG_Draw_Triangle_y1
0x0004       [2]    FARG_print_F_y_pos
0x0004       [2]    FARG_Draw_H_Line_x2
0x0004       [2]    FARG_VDelay_Advanced_ms_Current_Fosc_kHz
0x0004       [1]    FARG_SPIC_Init_Advanced_clock_and_edge
0x0004       [1]    FARG_Ow_Reset_pin
0x0004       [2]    FARG_Draw_V_Line_y1
0x0004       [2]    FARG_Draw_V_Bar_y1
0x0004       [1]    FARG_Ow_Write_pin
0x0004       [2]    FARG_print_str_y_pos
0x0004       [2]    FARG_SPI_Set_Active_write_ptr
0x0004       [2]    FARG_Draw_Font_Pixel_colour
0x0004       [2]    FARG_print_char_y_pos
0x0004       [2]    FARG_Draw_H_Bar_x2
0x0004       [2]    FARG_print_C_y_pos
0x0004       [2]    FARG_print_symbol_y_pos
0x0004       [2]    FARG_print_D_y_pos
0x0004       [1]    FARG_Ow_Read_pin
0x0004       [2]    FARG_Draw_Circle_yc
0x0004       [2]    FARG_print_I_y_pos
0x0004       [1]    FARG_SPID_Init_Advanced_clock_and_edge
0x0004       [0]    SUT1_bit
0x0004       [1]    FARG_Color565_b
0x0004       [0]    SUT0_bit
0x0004       [2]    FARG_Draw_Pixel_colour
0x0004       [1]    GPIO_GPIOR4
0x0004       [2]    FARG_swap_b
0x0004       [0]    WDLOCK_bit
0x0004       [1]    R4
0x0004       [0]    RSTDISBL_bit
0x0004       [2]    FARG_TFT_fill_area_y1
0x0004       [1]    FARG_TFT_set_display_window_xe
0x0004       [1]    PROD_SIGNATURES_RCOSC32MA
0x0004       [2]    FARG_Draw_Line_y1
0x0004       [2]    FARG_Draw_Point_y_pos
0x0004       [1]    FUSE_FUSEBYTE4
0x0005       [1]    R5
0x0005       [0]    EESAVE_bit
0x0005       [0]    BODLVL2_bit
0x0005       [0]    BODLVL1_bit
0x0005       [1]    GPIO_GPIOR5
0x0005       [0]    BODLVL0_bit
0x0005       [1]    FARG_TFT_set_display_window_ye
0x0005       [1]    FUSE_FUSEBYTE5
0x0005       [0]    BODACT0_bit
0x0005       [0]    BODACT1_bit
0x0005       [1]    FARG_Ow_Write_data_
0x0006       [1]    FARG_Draw_Font_Pixel_pixel_size
0x0006       [2]    FARG_TFT_fill_area_x2
0x0006       [2]    FARG_Draw_H_Bar_y1
0x0006       [1]    FARG_print_C_font_size
0x0006       [1]    GPIO_GPIOR6
0x0006       [1]    FARG_print_str_font_size
0x0006       [4]    FARG_map_x_min
0x0006       [4]    FARG_constrain_value_min
0x0006       [1]    FARG_print_char_font_size
0x0006       [2]    FARG_Draw_Triangle_x2
0x0006       [2]    FARG_Draw_Rectangle_x2
0x0006       [2]    FARG_Draw_V_Bar_y2
0x0006       [1]    FARG_print_F_font_size
0x0006       [2]    FARG_Draw_H_Line_y1
0x0006       [2]    FARG_Draw_Line_x2
0x0006       [2]    FARG_Draw_V_Line_y2
0x0006       [1]    FARG_Draw_Point_pen_width
0x0006       [1]    FARG_print_symbol_font_size
0x0006       [1]    FARG_print_I_font_size
0x0006       [1]    FARG_get_pressure_OSS
0x0006       [2]    FARG_Draw_Circle_radius
0x0006       [1]    R6
0x0006       [2]    FARG_Draw_BMP_x_pos2
0x0006       [1]    FARG_print_D_font_size
0x0007       [2]    FARG_Draw_Point_colour
0x0007       [1]    R7
0x0007       [2]    FARG_print_I_colour
0x0007       [2]    FARG_print_C_colour
0x0007       [2]    FARG_print_D_colour
0x0007       [2]    FARG_print_F_colour
0x0007       [1]    GPIO_GPIOR7
0x0007       [2]    FARG_print_str_colour
0x0007       [2]    FARG_print_symbol_colour
0x0007       [2]    FARG_print_char_colour
0x0008       [2]    FARG_Draw_Triangle_y2
0x0008       [2]    FARG_Draw_Line_y2
0x0008       [2]    FARG_Draw_H_Line_colour
0x0008       [2]    FARG_Draw_Rectangle_y2
0x0008       [2]    FARG_Draw_V_Line_colour
0x0008       [2]    FARG_Draw_V_Bar_bar_width
0x0008       [1]    GPIO_GPIOR8
0x0008       [1]    FARG_Draw_Circle_fill
0x0008       [2]    FARG_TFT_fill_area_y2
0x0008       [2]    FARG_Draw_BMP_y_pos2
0x0008       [1]    PROD_SIGNATURES_LOTNUM0
0x0008       [1]    R8
0x0008       [2]    FARG_Draw_H_Bar_bar_width
0x0009       [1]    GPIO_GPIOR9
0x0009       [1]    FARG_print_char_ch
0x0009       [1]    PROD_SIGNATURES_LOTNUM1
0x0009       [1]    R9
0x0009       [1]    FARG_print_symbol_ch
0x0009       [1]    FARG_print_D_points
0x0009       [1]    FARG_print_F_points
0x000A       [1]    PROD_SIGNATURES_LOTNUM2
0x000A       [1]    GPIO_GPIORA
0x000A       [1]    R10
0x000B       [1]    R11
0x000B       [1]    PROD_SIGNATURES_LOTNUM3
0x000B       [1]    GPIO_GPIORB
0x000C       [1]    R12
0x000C       [1]    GPIO_GPIORC
0x000C       [1]    PROD_SIGNATURES_LOTNUM4
0x000D       [1]    GPIO_GPIORD
0x000D       [1]    PROD_SIGNATURES_LOTNUM5
0x000D       [1]    R13
0x000E       [1]    R14
0x000E       [1]    GPIO_GPIORE
0x000F       [1]    R15
0x000F       [1]    GPIO_GPIORF
0x0010       [1]    VPORT0_DIR
0x0010       [1]    R16
0x0010       [1]    PROD_SIGNATURES_WAFNUM
0x0011       [1]    R17
0x0011       [1]    VPORT0_OUT
0x0012       [1]    PROD_SIGNATURES_COORDX0
0x0012       [1]    R18
0x0012       [1]    VPORT0_IN
0x0013       [1]    PROD_SIGNATURES_COORDX1
0x0013       [0]    INT0IF_bit
0x0013       [1]    VPORT0_INTFLAGS
0x0013       [1]    R19
0x0013       [0]    INT1IF_bit
0x0014       [1]    R20
0x0014       [1]    PROD_SIGNATURES_COORDY0
0x0014       [1]    VPORT1_DIR
0x0015       [1]    R21
0x0015       [1]    PROD_SIGNATURES_COORDY1
0x0015       [1]    VPORT1_OUT
0x0016       [1]    VPORT1_IN
0x0016       [1]    R22
0x0017       [0]    INT1IF_VPORT1_INTFLAGS_bit
0x0017       [0]    INT0IF_VPORT1_INTFLAGS_bit
0x0017       [1]    R23
0x0017       [1]    VPORT1_INTFLAGS
0x0018       [1]    VPORT2_DIR
0x0018       [1]    R24
0x0019       [1]    R25
0x0019       [1]    VPORT2_OUT
0x001A       [1]    XL
0x001A       [1]    VPORT2_IN
0x001A       [1]    PROD_SIGNATURES_USBCAL0
0x001A       [2]    X
0x001A       [1]    R26
0x001B       [1]    PROD_SIGNATURES_USBCAL1
0x001B       [0]    INT0IF_VPORT2_INTFLAGS_bit
0x001B       [0]    INT1IF_VPORT2_INTFLAGS_bit
0x001B       [1]    R27
0x001B       [1]    XH
0x001B       [1]    VPORT2_INTFLAGS
0x001C       [1]    VPORT3_DIR
0x001C       [2]    Y
0x001C       [1]    YL
0x001C       [1]    PROD_SIGNATURES_USBRCOSC
0x001C       [1]    R28
0x001D       [1]    YH
0x001D       [1]    PROD_SIGNATURES_USBRCOSCA
0x001D       [1]    VPORT3_OUT
0x001D       [1]    R29
0x001E       [1]    VPORT3_IN
0x001E       [1]    ZL
0x001E       [1]    R30
0x001E       [2]    Z
0x001F       [1]    R31
0x001F       [0]    INT1IF_VPORT3_INTFLAGS_bit
0x001F       [0]    INT0IF_VPORT3_INTFLAGS_bit
0x001F       [1]    VPORT3_INTFLAGS
0x001F       [1]    ZH
0x0020       [1]    PROD_SIGNATURES_ADCACAL0
0x0021       [1]    PROD_SIGNATURES_ADCACAL1
0x0024       [1]    PROD_SIGNATURES_ADCBCAL0
0x0025       [1]    PROD_SIGNATURES_ADCBCAL1
0x002E       [0]    OCDRD0_bit
0x002E       [0]    OCDRD2_bit
0x002E       [0]    OCDRD7_bit
0x002E       [0]    OCDRD6_bit
0x002E       [0]    OCDRD5_bit
0x002E       [0]    OCDRD3_bit
0x002E       [1]    PROD_SIGNATURES_TEMPSENSE0
0x002E       [1]    OCD_OCDR0
0x002E       [0]    OCDRD1_bit
0x002E       [0]    OCDRD4_bit
0x002F       [1]    OCD_OCDR1
0x002F       [0]    OCDRD_bit
0x002F       [1]    PROD_SIGNATURES_TEMPSENSE1
0x0030       [1]    PROD_SIGNATURES_DACA0OFFCAL
0x0031       [1]    PROD_SIGNATURES_DACA0GAINCAL
0x0032       [1]    PROD_SIGNATURES_DACB0OFFCAL
0x0033       [1]    PROD_SIGNATURES_DACB0GAINCAL
0x0034       [0]    CCP6_bit
0x0034       [0]    CCP5_bit
0x0034       [1]    PROD_SIGNATURES_DACA1OFFCAL
0x0034       [0]    CCP7_bit
0x0034       [1]    CPU_CCP
0x0034       [0]    CCP1_bit
0x0034       [0]    CCP0_bit
0x0034       [0]    CCP2_bit
0x0034       [0]    CCP3_bit
0x0034       [0]    CCP4_bit
0x0035       [1]    PROD_SIGNATURES_DACA1GAINCAL
0x0036       [1]    PROD_SIGNATURES_DACB1OFFCAL
0x0037       [1]    PROD_SIGNATURES_DACB1GAINCAL
0x0038       [1]    CPU_RAMPD
0x0039       [1]    CPU_RAMPX
0x003A       [1]    CPU_RAMPY
0x003B       [1]    CPU_RAMPZ
0x003C       [1]    CPU_EIND
0x003D       [1]    CPU_SPL
0x003D       [1]    SPL
0x003E       [1]    SPH
0x003E       [1]    CPU_SPH
0x003F       [0]    Z_bit
0x003F       [0]    C_bit
0x003F       [0]    N_bit
0x003F       [0]    I_bit
0x003F       [0]    T_bit
0x003F       [1]    SREG
0x003F       [1]    CPU_SREG
0x003F       [0]    H_bit
0x003F       [0]    S_bit
0x003F       [0]    V_bit
0x0040       [1]    CLK_CTRL
0x0041       [1]    CLK_PSCTRL
0x0050       [1]    OSC_CTRL
0x0051       [1]    OSC_STATUS
0x0056       [1]    OSC_DFLLCTRL
0x0060       [1]    DFLLRC32M_CTRL
0x00B0       [1]    PORTCFG_MPCMASK
0x00B2       [1]    PORTCFG_VPCTRLA
0x00B3       [1]    PORTCFG_VPCTRLB
0x00B4       [1]    PORTCFG_CLKEVOUT
0x0481       [1]    TWIC_MASTER_CTRLA
0x0483       [1]    TWIC_MASTER_CTRLC
0x0484       [1]    TWIC_MASTER_STATUS
0x0485       [1]    TWIC_MASTER_BAUD
0x0486       [1]    TWIC_MASTER_ADDR
0x0487       [1]    TWIC_MASTER_DATA
0x0600       [1]    PORTA_DIR
0x0604       [1]    PORTA_OUT
0x0609       [1]    PORTA_INTCTRL
0x060A       [1]    PORTA_INT0MASK
0x060B       [1]    PORTA_INT1MASK
0x0610       [1]    PORTA_PIN0CTRL
0x0620       [1]    PORTB_DIR
0x0624       [1]    PORTB_OUT
0x0629       [1]    PORTB_INTCTRL
0x062A       [1]    PORTB_INT0MASK
0x062B       [1]    PORTB_INT1MASK
0x0630       [1]    PORTB_PIN0CTRL
0x0640       [1]    PORTC_DIR
0x0641       [1]    PORTC_DIRSET
0x0642       [1]    PORTC_DIRCLR
0x0644       [1]    PORTC_OUT
0x0649       [1]    PORTC_INTCTRL
0x064A       [1]    PORTC_INT0MASK
0x064B       [1]    PORTC_INT1MASK
0x064E       [1]    PORTC_REMAP
0x0650       [1]    PORTC_PIN0CTRL
0x0660       [1]    PORTD_DIR
0x0664       [1]    PORTD_OUT
0x0669       [1]    PORTD_INTCTRL
0x066A       [1]    PORTD_INT0MASK
0x066B       [1]    PORTD_INT1MASK
0x0670       [1]    PORTD_PIN0CTRL
0x0680       [1]    PORTE_DIR
0x0684       [1]    PORTE_OUT
0x0689       [1]    PORTE_INTCTRL
0x068A       [1]    PORTE_INT0MASK
0x068B       [1]    PORTE_INT1MASK
0x0690       [1]    PORTE_PIN0CTRL
0x07E0       [1]    PORTR_DIR
0x07E4       [1]    PORTR_OUT
0x07E9       [1]    PORTR_INTCTRL
0x07EA       [1]    PORTR_INT0MASK
0x07EB       [1]    PORTR_INT1MASK
0x07F0       [1]    PORTR_PIN0CTRL
0x08C0       [1]    SPIC_CTRL
0x08C1       [1]    SPIC_INTCTRL
0x08C2       [1]    SPIC_STATUS
0x08C3       [1]    SPIC_DATA
0x2000       [2]    _md
0x2002       [1]    _w
0x2003       [2]    _ac5
0x2005       [2]    _mc
0x2007       [1]    _l
0x2008       [2]    _mb
0x200A       [2]    _ac6
0x200C       [2]    _ac1
0x200E       [2]    __b2
0x2010       [2]    _ac2
0x2012       [4]    __b5
0x2016       [2]    _ac4
0x2018       [2]    __b1
0x201A       [2]    _ac3
0x201C       [2]    _SPI_Wr_Ptr
0x201E       [2]    _SPI_Rd_Ptr
0x2020       [1]    __Lib_TWI_c01_e01__addressFlag
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2E66     [480]    comms_demo_font
0x3046      [15]    ?ICS?lstr3_comms_demo
0x3055       [4]    ?ICS?lstr4_comms_demo
0x3059       [2]    ?ICS?lstr5_comms_demo
0x305B       [4]    ?ICS?lstr6_comms_demo
0x305F       [3]    ?ICS?lstr7_comms_demo
0x3062       [4]    ?ICS?lstr8_comms_demo
0x3066       [3]    ?ICS?lstr9_comms_demo
0x3069       [3]    ?ICS?lstr10_comms_demo
0x306C       [2]    ?ICS?lstr11_comms_demo
0x306E       [2]    ?ICS_md
0x3070       [1]    ?ICS_w
0x3071       [2]    ?ICS_ac5
0x3073       [2]    ?ICS_mc
0x3075       [1]    ?ICS_l
0x3076       [2]    ?ICS_mb
0x3078       [2]    ?ICS_ac6
0x307A       [2]    ?ICS_ac1
0x307C       [2]    ?ICS__b2
0x307E       [2]    ?ICS_ac2
0x3080       [4]    ?ICS__b5
0x3084       [2]    ?ICS_ac4
0x3086       [2]    ?ICS__b1
0x3088       [2]    ?ICS_ac3
0x308A       [6]    ?ICS?lstr1_comms_demo
0x3090       [7]    ?ICS?lstr2_comms_demo
0x3097       [1]    ?ICSmain_sample_L0
0x3098       [5]    _symbol
